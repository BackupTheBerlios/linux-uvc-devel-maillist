From ajay.bhargav at einfochips.com  Sat Oct  1 08:28:36 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Sat, 1 Oct 2011 11:58:36 +0530 (IST)
Subject: [Linux-uvc-devel] Annoying HTTPS in link to list archive.
In-Reply-To: <259853572.146730.1317450362394.JavaMail.root@ahm.einfochips.com>
Message-ID: <636322474.146737.1317450516422.JavaMail.root@ahm.einfochips.com>

----- "Kaz Kylheku" <kaz at kylheku.com> wrote:

> Hi all,
> 
> If you view this list's page (note the HTTP here)
> 
> http://lists.berlios.de/mailman/listinfo/linux-uvc-devel
> 
> the link which it gives to the list archives is HTTPS!
> 
> Because of this stupidity, Google has indexed this list using HTTPS 
> URLs.
> You have to accept the self-signed security certificate when you 
> navigate
> to the archive pages from a Google search result.
> 
> Can someone fix that?
> 
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
> 
I think only website owner can do something about that...
They have to login at Google Webmaster Central (http://www.google.com/webmasters/) and there they can tell google not to index pages or even request for removing certain pages from google's index.

-- Ajay


From b at bo.vc  Sun Oct  2 10:05:56 2011
From: b at bo.vc (Bogdan Milanovic)
Date: Sun, 2 Oct 2011 03:05:56 -0500
Subject: [Linux-uvc-devel] Chicony web cam not working
Message-ID: <CAE_nYdAwsVw5+Dszqt8owrKrkW_zU47XX62M0rU3EqX7ARCfjA@mail.gmail.com>

I have a weird issue.

Relevant lsusb:

Bus 001 Device 002: ID 04f2:b23b Chicony Electronics Co., Ltd

It's a built-in cam in a laptop. The problem is it doesn't work. Not
with Skype, not with luvcview. However, if I do

chmod 666 /dev/video0

It then works fine.

Another thing, here's my errors.log:

Oct  2 03:01:38 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]
Oct  2 03:01:39 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]
Oct  2 03:01:40 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]

As you can see, this updates every second with the same message.

Because of this problem, I've discovered also that I cannot suspend my
system, and it often fails to properly turn off as well.

Luckily I have an option in BIOS to disable the webcam. If I do so,
the system functions perfectly fine.

Googling the VID:PID codes yielded no real results. Apparently
uvcvideo module still doesn't support this camera.

Any help?


From jpitt at fhcrc.org  Sun Oct  2 17:53:44 2011
From: jpitt at fhcrc.org (Pitt, Jason N)
Date: Sun, 2 Oct 2011 08:53:44 -0700 (PDT)
Subject: [Linux-uvc-devel] Chicony web cam not working
In-Reply-To: <CAE_nYdAwsVw5+Dszqt8owrKrkW_zU47XX62M0rU3EqX7ARCfjA@mail.gmail.com>
Message-ID: <1339507945.38513.1317570824168.JavaMail.root@zimbra2.fhcrc.org>

I would try the Linux-USB list.


----- Original Message -----
From: Bogdan Milanovic <b at bo.vc>
To: linux-uvc-devel at lists.berlios.de
Sent: Sun, 02 Oct 2011 01:05:56 -0700 (PDT)
Subject: [Linux-uvc-devel] Chicony web cam not working
I have a weird issue.
Relevant lsusb:
Bus 001 Device 002: ID 04f2:b23b Chicony Electronics Co., Ltd
It's a built-in cam in a laptop. The problem is it doesn't work. Not
with Skype, not with luvcview. However, if I do
chmod 666 /dev/video0
It then works fine.
Another thing, here's my errors.log:
Oct 2 03:01:38 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]
Oct 2 03:01:39 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]
Oct 2 03:01:40 localhost udevd[318]: timeout: killing 'usb_id
--export /devices/pci0000:00/0000:00:12.2/usb1/1-3' [514]
As you can see, this updates every second with the same message.
Because of this problem, I've discovered also that I cannot suspend my
system, and it often fails to properly turn off as well.
Luckily I have an option in BIOS to disable the webcam. If I do so,
the system functions perfectly fine.
Googling the VID:PID codes yielded no real results. Apparently
uvcvideo module still doesn't support this camera.
Any help?
_______________________________________________
Linux-uvc-devel mailing list
Linux-uvc-devel at lists.berlios.de
https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
-- 
/*
Jason Pitt PhD 206.667.5603
Roth Lab jpitt at fhcrc.org
Basic Sciences Division 
Fred Hutchinson Cancer Research Center
1100 Fairview Ave N A3-135
Seattle, WA 98109
*/


From shop at open-t.co.uk  Wed Oct  5 00:51:46 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Tue, 04 Oct 2011 23:51:46 +0100
Subject: [Linux-uvc-devel] Microsoft LifeCam Studio and multiple webcam
 setups?
In-Reply-To: <4DE87030.4070502@gmail.com>
References: <4DD6549E.8090301@open-t.co.uk> <4DE87030.4070502@gmail.com>
Message-ID: <4E8B8E02.7030101@open-t.co.uk>



On 03/06/11 06:25, Duck Tayp wrote:
> I tried this with a Lifecam Studio and a Microsoft VX 6000 connected to
> the same USB hub and could view live video simultaneously from both. My
> impression of the Lifecam Studio: excellent video and audio quality
> (even in low light), and it "just works" (at least on the Ubuntu
> versions I've tried --- 10.10 and up).
> .de/mailman/listinfo/linux-uvc-devel
>
</snip>

Just resurrecting this old thread which I've started a while ago. I am 
now the owner of 5 Microsoft LifeCam Studio webcams. Let me restate that 
- I am now the frustrated owner of 5 Microsoft LifeCam Studio webcams. 
The other reviews were right - the image quality of this webcam is 
absolutely excellent. However, I just can't get them working more then 
one at a time. I've just about managed to get one LifeCam Studio working 
together with an integrated laptop webcam. When I try to get two LifeCam 
Studio working together - I get the old "no space left on device" or 
"device busy" error message - depending on what software I'm using.

I've tried VLC (with chroma=mjpeg and without it), 640x480 and 800x600 
resolutions, and went all the way down to 1fps. I've tried 
mjpg_streamer. It all ends up the same. The newest kernel I've tried is 
2.6.39.

To me, it looks like this camera suffers from the same bug as Microsoft 
LifeCam Cinema.

1. Could anybody here having a LifeCam Studio (more then one would be 
even better) run again some tests and either confirm or disprove my 
findings.
2. Could someone suggest some thorough tests I could run - so that at 
least this camera gets marked on the list of supported devices as having 
a bug - like the LifeCam Cinema is flagged at the moment? It will at 
least save someone else buying a bucket load of them :-(

Thank you for any suggestions.

Sebastian





From shop at open-t.co.uk  Thu Oct  6 14:32:19 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Thu, 06 Oct 2011 13:32:19 +0100
Subject: [Linux-uvc-devel] MS LifeCam Cinema and Studio have no usb
	bandwidth issue under Windows
Message-ID: <4E8D9FD3.80106@open-t.co.uk>

Hello list,

The above two cameras, which have the well known usb bandwidth bug under 
Linux don't seem to display the same problems under Windows. I've tried 
them under Windows Vista and Windows 7 32bit. I've managed to display a 
LifeCam Studio and LifeCam Cinema at the same time through separate 
instances of VLC all the way to 1920x1080 for LifeCam Studio and 
1280x720 for the LifeCam Cinema - which I believe are the maximum video 
resolutions for both cameras. I've forced VLC on 25fps - and the Cinema 
seems to do that. However, looking at the footage from the Studio at 
maximum resolution - it looks more like 5fps.

However, what all the above means is that these cameras don't seem to 
suffer from the usb bandwidth bug under Windows. I've input "mjpg" under 
chroma settings for VLC - but I can't find a way to tell for sure if VLC 
is using the mjpeg stream from the camera, or raw.

Can someone here help me push this further? Is there any way of 
debugging what is happening under Windows - so that maybe the Linux uvc 
driver can be modified to get these cameras to work properly?

Any suggestions much appreciated.

Sebastian


From shop at open-t.co.uk  Thu Oct  6 18:16:30 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Thu, 06 Oct 2011 17:16:30 +0100
Subject: [Linux-uvc-devel] MS LifeCam Cinema and Studio have no usb
 bandwidth issue under Windows
In-Reply-To: <4E8DC244.2020703@fisher-privat.net>
References: <4E8D9FD3.80106@open-t.co.uk> <4E8DC244.2020703@fisher-privat.net>
Message-ID: <4E8DD45E.5000602@open-t.co.uk>



On 06/10/11 15:59, Alexey Fisher wrote:
> On 06.10.2011 14:32, Sebastian Arcus wrote:
>> Hello list,
>>
>> The above two cameras, which have the well known usb bandwidth bug under
>> Linux don't seem to display the same problems under Windows. I've tried
>> them under Windows Vista and Windows 7 32bit. I've managed to display a
>> LifeCam Studio and LifeCam Cinema at the same time through separate
>> instances of VLC all the way to 1920x1080 for LifeCam Studio and
>> 1280x720 for the LifeCam Cinema - which I believe are the maximum video
>> resolutions for both cameras. I've forced VLC on 25fps - and the Cinema
>> seems to do that. However, looking at the footage from the Studio at
>> maximum resolution - it looks more like 5fps.
>>
>> However, what all the above means is that these cameras don't seem to
>> suffer from the usb bandwidth bug under Windows. I've input "mjpg" under
>> chroma settings for VLC - but I can't find a way to tell for sure if VLC
>> is using the mjpeg stream from the camera, or raw.
>>
>> Can someone here help me push this further? Is there any way of
>> debugging what is happening under Windows - so that maybe the Linux uvc
>> driver can be modified to get these cameras to work properly?
>>
>> Any suggestions much appreciated.
>>
>> Sebastian
>
> Hi Sebastian,
> Probably usb sniffing will be most correct option, but currently i'll
> would not interpret usb dump.
> Other option is visual test:
> - Jpeg stream has lower quality, try it under linux and you will see the
> difference.
> - according to frame rate the webcam controller will change demosaicing
> algorithm. Simple alorithm produce pure qualithy, and image looks like
> up scaled image from smaller image. Logitech webcams use better
> algorithm before 15 fps and pure after 15 fps.
> - you can check frame rate by capturing some timer with milliseconds:
> http://tools.arantius.com/stopwatch

Thank you Alexey. Looking at the quality of the footage - I would guess 
it is not mjpeg. However, it still means that the camera is not grabbing 
all the available usb bandwidth like it does under Linux - which is good 
news.

Sebastian


From whitequark at whitequark.org  Fri Oct  7 06:54:48 2011
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 07 Oct 2011 08:54:48 +0400
Subject: [Linux-uvc-devel] Accessing XU controls in an UVC webcam
Message-ID: <20a528441429404091c5606388e25892@mail.whitequark.org>

Hello.

I have an h.264 encoding webcam, and I am trying to make it
work. Currently, it outputs a valid h.264 stream, but each frame
is compressed to ~12K of data, resulting in a very distorted, but
still barely recognizable image. I suppose that some of the XU controls
are responsible for the encoding quality, and they're in some extreme
position by default.

The webcam is "046d:0828 Logitech, Inc. HD Webcam B990".

Here are the XU descriptors (whole `lsusb -v' is 52K long, and I'm not
sure if I really should post it to the list):

----%<----%<----%<----%<----%<----%<----
       VideoControl Interface Descriptor:
         bLength                27
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 3
         guidExtensionCode         
{e48e6769-0f41-db40-a850-7420d7d8240e}
         bNumControl             9
         bNrPins                 1
         baSourceID( 0)          2
         bControlSize            2
         bmControls( 0)       0x3f
         bmControls( 1)       0x07
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                26
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 4
         guidExtensionCode         
{1502e449-34f4-fe47-b158-0e885023e51b}
         bNumControl             2
         bNrPins                 1
         baSourceID( 0)          2
         bControlSize            1
         bmControls( 0)       0x03
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                28
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 6
         guidExtensionCode         
{a94c5d1f-11de-8744-840d-50933c8ec8d1}
         bNumControl            20
         bNrPins                 1
         baSourceID( 0)          4
         bControlSize            3
         bmControls( 0)       0xff
         bmControls( 1)       0xff
         bmControls( 2)       0x1f
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                27
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 7
         guidExtensionCode         
{212de5ff-3080-2c4e-82d9-f587d00540bd}
         bNumControl             6
         bNrPins                 1
         baSourceID( 0)          4
         bControlSize            2
         bmControls( 0)       0x00
         bmControls( 1)       0x3f
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                27
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 8
         guidExtensionCode         
{b600cd9a-4adc-bd4b-bdf8-5ffbb0c0d366}
         bNumControl             6
         bNrPins                 1
         baSourceID( 0)          4
         bControlSize            2
         bmControls( 0)       0x3f
         bmControls( 1)       0x00
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                27
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 9
         guidExtensionCode         
{a032c549-154f-fc4c-908a-5bce154b1cea}
         bNumControl             3
         bNrPins                 1
         baSourceID( 0)          4
         bControlSize            2
         bmControls( 0)       0x07
         bmControls( 1)       0x00
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                27
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                10
         guidExtensionCode         
{41769ea2-04de-e347-8b2b-f4341aff003b}
         bNumControl             9
         bNrPins                 1
         baSourceID( 0)          4
         bControlSize            2
         bmControls( 0)       0xcf
         bmControls( 1)       0x0b
         iExtension              0
----%<----%<----%<----%<----%<----%<----

I've googled all the GUIDs, and it turned out that first four of them
also appear in lsusb listings for non-encoding webcams as well. So, I
decided that some of the other three contain the quality control. (It
may not be true, of course, but that's what I will start with.) They 
have
19 different controls, apparently.

Now, I am trying to tune some of these with UVC, with no success. Here 
is
the relevant code:

----%<----%<----%<----%<----%<----%<----
void init_controls()
{
	struct uvc_xu_control_mapping mapping = {
		.id   = XU_START,
		.name = "XU control",
		.selector = 1,
		.size = 1,
		.offset = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
		.data_type = UVC_CTRL_DATA_TYPE_SIGNED,
	};

	guid_to_byte_array("{a032c549-154f-fc4c-908a-5bce154b1cea}", 
mapping.entity);

	if(ioctl(fd, UVCIOC_CTRL_MAP, &mapping) < 0) {
		fprintf(stderr, "Cannot add control: %d, %s\n",
                          errno, strerror(errno));
                 exit(EXIT_FAILURE);
	}
}
----%<----%<----%<----%<----%<----%<----

(The `guid_to_byte_array' function was taken from libwebcam
sources. Handcrafting the GUID with proper endianness gives
the same result).

It outputs: Cannot add control: 2, No such file or directory

I've examined USB bus transactions. They include a control `request'
and an interrupt `reply'.

The control frame is here:
   bmRequestType: 0x21
   bRequest: 1
   wValue: 0x0200
   wIndex: 1
   wLength: 26

This is somewhat strange. Per sect. 4.2.2.4 of UVC1.1 spec,
bmRequestType=0x21 and bRequest=1 indicate a SET_CUR transfer.
wValue of 0x0200 addresses selects control 2 instead of 1 (through
this is still in range), and wIndex selects XU 1 (while my one
has bUnitID of 8). Also, I do not understand at all what does the
data transmitted means:

     00:00:01:01:00:00:00:00
     00:00:00:00:00:00:00:00
     32:00:00:60:09:00:00:0c
     00:00

The reply contains a -ENOENT (-2) code, as shown by Wireshark.

Using different GUID's or different selectors does not change
anything.

What am I doing wrong here?

-- 
   WBR, Peter Zotov.


From shop at open-t.co.uk  Fri Oct  7 10:59:12 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Fri, 07 Oct 2011 09:59:12 +0100
Subject: [Linux-uvc-devel] MS LifeCam Cinema and Studio have no usb
 bandwidth issue under Windows
In-Reply-To: <4E8DD73D.3040009@fisher-privat.net>
References: <4E8D9FD3.80106@open-t.co.uk> <4E8DC244.2020703@fisher-privat.net>
	<4E8DD45E.5000602@open-t.co.uk>
	<4E8DD73D.3040009@fisher-privat.net>
Message-ID: <4E8EBF60.60206@open-t.co.uk>



On 06/10/11 17:28, Alexey Fisher wrote:
> On 06.10.2011 18:16, Sebastian Arcus wrote:
>>
>>
>> On 06/10/11 15:59, Alexey Fisher wrote:
>>> On 06.10.2011 14:32, Sebastian Arcus wrote:
>>>> Hello list,
>>>>
>>>> The above two cameras, which have the well known usb bandwidth bug under
>>>> Linux don't seem to display the same problems under Windows. I've tried
>>>> them under Windows Vista and Windows 7 32bit. I've managed to display a
>>>> LifeCam Studio and LifeCam Cinema at the same time through separate
>>>> instances of VLC all the way to 1920x1080 for LifeCam Studio and
>>>> 1280x720 for the LifeCam Cinema - which I believe are the maximum video
>>>> resolutions for both cameras. I've forced VLC on 25fps - and the Cinema
>>>> seems to do that. However, looking at the footage from the Studio at
>>>> maximum resolution - it looks more like 5fps.
>>>>
>>>> However, what all the above means is that these cameras don't seem to
>>>> suffer from the usb bandwidth bug under Windows. I've input "mjpg" under
>>>> chroma settings for VLC - but I can't find a way to tell for sure if VLC
>>>> is using the mjpeg stream from the camera, or raw.
>>>>
>>>> Can someone here help me push this further? Is there any way of
>>>> debugging what is happening under Windows - so that maybe the Linux uvc
>>>> driver can be modified to get these cameras to work properly?
>>>>
>>>> Any suggestions much appreciated.
>>>>
>>>> Sebastian
>>>
>>> Hi Sebastian,
>>> Probably usb sniffing will be most correct option, but currently i'll
>>> would not interpret usb dump.
>>> Other option is visual test:
>>> - Jpeg stream has lower quality, try it under linux and you will see the
>>> difference.
>>> - according to frame rate the webcam controller will change demosaicing
>>> algorithm. Simple alorithm produce pure qualithy, and image looks like
>>> up scaled image from smaller image. Logitech webcams use better
>>> algorithm before 15 fps and pure after 15 fps.
>>> - you can check frame rate by capturing some timer with milliseconds:
>>> http://tools.arantius.com/stopwatch
>>
>> Thank you Alexey. Looking at the quality of the footage - I would guess
>> it is not mjpeg. However, it still means that the camera is not grabbing
>> all the available usb bandwidth like it does under Linux - which is good
>> news.
>>
>> Sebastian
>
> Then try bandwidth quirk:
> sudo rmmod&&  sudo modprobe uvcvideo quirks=0x80
> But reduce frame rate, 1280x720 at 30 fps will take complete bindwidth,
> try 10fps if you wont to use two webcams.
>
Thanks Alexey.

Anybody knows if I can use VLC or some other software under windows to 
view the mjpeg stream? I could then test how many cameras I can use at 
the same time under Windows with mjpeg. This should tell us if the 
Windows driver doesn't have any of the usb bandwidth problems which 
exist under Linux for these cameras.

Sebastian


From bug-track at fisher-privat.net  Fri Oct  7 11:42:45 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Fri, 07 Oct 2011 11:42:45 +0200
Subject: [Linux-uvc-devel] MS LifeCam Cinema and Studio have no usb
 bandwidth issue under Windows
In-Reply-To: <4E8EBF60.60206@open-t.co.uk>
References: <4E8D9FD3.80106@open-t.co.uk> <4E8DC244.2020703@fisher-privat.net>
	<4E8DD45E.5000602@open-t.co.uk>
	<4E8DD73D.3040009@fisher-privat.net> <4E8EBF60.60206@open-t.co.uk>
Message-ID: <4E8EC995.9080603@fisher-privat.net>

Am 07.10.2011 10:59, schrieb Sebastian Arcus:
>
>
> On 06/10/11 17:28, Alexey Fisher wrote:
>> On 06.10.2011 18:16, Sebastian Arcus wrote:
>>>
>>>
>>> On 06/10/11 15:59, Alexey Fisher wrote:
>>>> On 06.10.2011 14:32, Sebastian Arcus wrote:
>>>>> Hello list,
>>>>>
>>>>> The above two cameras, which have the well known usb bandwidth bug
>>>>> under
>>>>> Linux don't seem to display the same problems under Windows. I've
>>>>> tried
>>>>> them under Windows Vista and Windows 7 32bit. I've managed to
>>>>> display a
>>>>> LifeCam Studio and LifeCam Cinema at the same time through separate
>>>>> instances of VLC all the way to 1920x1080 for LifeCam Studio and
>>>>> 1280x720 for the LifeCam Cinema - which I believe are the maximum
>>>>> video
>>>>> resolutions for both cameras. I've forced VLC on 25fps - and the
>>>>> Cinema
>>>>> seems to do that. However, looking at the footage from the Studio at
>>>>> maximum resolution - it looks more like 5fps.
>>>>>
>>>>> However, what all the above means is that these cameras don't seem to
>>>>> suffer from the usb bandwidth bug under Windows. I've input "mjpg"
>>>>> under
>>>>> chroma settings for VLC - but I can't find a way to tell for sure
>>>>> if VLC
>>>>> is using the mjpeg stream from the camera, or raw.
>>>>>
>>>>> Can someone here help me push this further? Is there any way of
>>>>> debugging what is happening under Windows - so that maybe the Linux
>>>>> uvc
>>>>> driver can be modified to get these cameras to work properly?
>>>>>
>>>>> Any suggestions much appreciated.
>>>>>
>>>>> Sebastian
>>>>
>>>> Hi Sebastian,
>>>> Probably usb sniffing will be most correct option, but currently i'll
>>>> would not interpret usb dump.
>>>> Other option is visual test:
>>>> - Jpeg stream has lower quality, try it under linux and you will see
>>>> the
>>>> difference.
>>>> - according to frame rate the webcam controller will change demosaicing
>>>> algorithm. Simple alorithm produce pure qualithy, and image looks like
>>>> up scaled image from smaller image. Logitech webcams use better
>>>> algorithm before 15 fps and pure after 15 fps.
>>>> - you can check frame rate by capturing some timer with milliseconds:
>>>> http://tools.arantius.com/stopwatch
>>>
>>> Thank you Alexey. Looking at the quality of the footage - I would guess
>>> it is not mjpeg. However, it still means that the camera is not grabbing
>>> all the available usb bandwidth like it does under Linux - which is good
>>> news.
>>>
>>> Sebastian
>>
>> Then try bandwidth quirk:
>> sudo rmmod&& sudo modprobe uvcvideo quirks=0x80
>> But reduce frame rate, 1280x720 at 30 fps will take complete bindwidth,
>> try 10fps if you wont to use two webcams.
>>
> Thanks Alexey.
>
> Anybody knows if I can use VLC or some other software under windows to
> view the mjpeg stream? I could then test how many cameras I can use at
> the same time under Windows with mjpeg. This should tell us if the
> Windows driver doesn't have any of the usb bandwidth problems which
> exist under Linux for these cameras.
>
> Sebastian

It is not a driver problem,

the webcam tell how match it need, the driver will give it. If cam tell 
it need every thing we have, the driver will give it. It is defined 
behavior of UVC, if device is broken, there is nothing driver can do. I 
will not wonder if Microsoft will have quirks for devices it produce.
For some time i send here some jpeg patches, you can test it on your own 
risk and force the bandwidth. But this patches will probably never go to 
upstream.


From shop at open-t.co.uk  Fri Oct  7 14:00:03 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Fri, 07 Oct 2011 13:00:03 +0100
Subject: [Linux-uvc-devel] MS LifeCam Cinema and Studio have no usb
 bandwidth issue under Windows
In-Reply-To: <4E8EC995.9080603@fisher-privat.net>
References: <4E8D9FD3.80106@open-t.co.uk> <4E8DC244.2020703@fisher-privat.net>
	<4E8DD45E.5000602@open-t.co.uk>
	<4E8DD73D.3040009@fisher-privat.net> <4E8EBF60.60206@open-t.co.uk>
	<4E8EC995.9080603@fisher-privat.net>
Message-ID: <4E8EE9C3.6070209@open-t.co.uk>



On 07/10/11 10:42, Alexey Fisher wrote:
> Am 07.10.2011 10:59, schrieb Sebastian Arcus:
>>
>>
>> On 06/10/11 17:28, Alexey Fisher wrote:
>>> On 06.10.2011 18:16, Sebastian Arcus wrote:
>>>>
>>>>
>>>> On 06/10/11 15:59, Alexey Fisher wrote:
>>>>> On 06.10.2011 14:32, Sebastian Arcus wrote:
>>>>>> Hello list,
>>>>>>
>>>>>> The above two cameras, which have the well known usb bandwidth bug
>>>>>> under
>>>>>> Linux don't seem to display the same problems under Windows. I've
>>>>>> tried
>>>>>> them under Windows Vista and Windows 7 32bit. I've managed to
>>>>>> display a
>>>>>> LifeCam Studio and LifeCam Cinema at the same time through separate
>>>>>> instances of VLC all the way to 1920x1080 for LifeCam Studio and
>>>>>> 1280x720 for the LifeCam Cinema - which I believe are the maximum
>>>>>> video
>>>>>> resolutions for both cameras. I've forced VLC on 25fps - and the
>>>>>> Cinema
>>>>>> seems to do that. However, looking at the footage from the Studio at
>>>>>> maximum resolution - it looks more like 5fps.
>>>>>>
>>>>>> However, what all the above means is that these cameras don't seem to
>>>>>> suffer from the usb bandwidth bug under Windows. I've input "mjpg"
>>>>>> under
>>>>>> chroma settings for VLC - but I can't find a way to tell for sure
>>>>>> if VLC
>>>>>> is using the mjpeg stream from the camera, or raw.
>>>>>>
>>>>>> Can someone here help me push this further? Is there any way of
>>>>>> debugging what is happening under Windows - so that maybe the Linux
>>>>>> uvc
>>>>>> driver can be modified to get these cameras to work properly?
>>>>>>
>>>>>> Any suggestions much appreciated.
>>>>>>
>>>>>> Sebastian
>>>>>
>>>>> Hi Sebastian,
>>>>> Probably usb sniffing will be most correct option, but currently i'll
>>>>> would not interpret usb dump.
>>>>> Other option is visual test:
>>>>> - Jpeg stream has lower quality, try it under linux and you will see
>>>>> the
>>>>> difference.
>>>>> - according to frame rate the webcam controller will change
>>>>> demosaicing
>>>>> algorithm. Simple alorithm produce pure qualithy, and image looks like
>>>>> up scaled image from smaller image. Logitech webcams use better
>>>>> algorithm before 15 fps and pure after 15 fps.
>>>>> - you can check frame rate by capturing some timer with milliseconds:
>>>>> http://tools.arantius.com/stopwatch
>>>>
>>>> Thank you Alexey. Looking at the quality of the footage - I would guess
>>>> it is not mjpeg. However, it still means that the camera is not
>>>> grabbing
>>>> all the available usb bandwidth like it does under Linux - which is
>>>> good
>>>> news.
>>>>
>>>> Sebastian
>>>
>>> Then try bandwidth quirk:
>>> sudo rmmod&& sudo modprobe uvcvideo quirks=0x80
>>> But reduce frame rate, 1280x720 at 30 fps will take complete bindwidth,
>>> try 10fps if you wont to use two webcams.
>>>
>> Thanks Alexey.
>>
>> Anybody knows if I can use VLC or some other software under windows to
>> view the mjpeg stream? I could then test how many cameras I can use at
>> the same time under Windows with mjpeg. This should tell us if the
>> Windows driver doesn't have any of the usb bandwidth problems which
>> exist under Linux for these cameras.
>>
>> Sebastian
>
> It is not a driver problem,
>
> the webcam tell how match it need, the driver will give it. If cam tell
> it need every thing we have, the driver will give it. It is defined
> behavior of UVC, if device is broken, there is nothing driver can do. I
> will not wonder if Microsoft will have quirks for devices it produce.
> For some time i send here some jpeg patches, you can test it on your own
> risk and force the bandwidth. But this patches will probably never go to
> upstream.

Thanks Alexey. What I was suggesting is that, under Windows, the camera 
doesn't seem to suffer from this bug - as it is possible to run two of 
them at the same time. I don't know how this is accomplished, I don't 
know if the Windows driver makes use of special signalling to stop the 
camera from asking for all the available usb bandwidth. I was only 
thinking that if it would be possible to find out how the camera is 
"convinced" to not asked for full bandwidth under Windows - maybe that 
can be replicated in the uvc driver under Linux. However, I know almost 
nothing about the intricacies of the uvc standard and the corresponding 
Linux (or Windows) implementation - that is why I was asking if there is 
anyway to probe the uvc driver in Windows and find out more that way.

Many thanks,

Sebastian



From pj.assis at gmail.com  Thu Oct 13 00:18:51 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Wed, 12 Oct 2011 23:18:51 +0100
Subject: [Linux-uvc-devel] guvcview moves to sourceforge
Message-ID: <CAPueXH7UN=DYJ0chCpgxo0foGx6-h297TOW-a6B0iWKXs8mZNQ@mail.gmail.com>

Hi all,
Just dropping a line to inform you that guvcview has moved to sourceforge:

project page: http://sourceforge.net/p/guvcview/home/Home/
home page: guvcview.sourceforge.net

This change was prompted by the closing of berlios on 31-12-2011, the
lack of funding has forced them to shut-down their services, so all
projects were "invited" to move to a new service provider.
My decision was to move to sourceforge since they run pretty much the
same services as berlios.

On a side note I just released version 1.5.1 it adds support for gtk3
and improves support for libavcodec 7 (the prior versions had most
codecs broken under ubuntu 11.10)

Best Regards,
Paulo


From member at linkedin.com  Thu Oct 13 09:20:51 2011
From: member at linkedin.com (Jean-Christophe BEGUE via LinkedIn)
Date: Thu, 13 Oct 2011 07:20:51 +0000 (UTC)
Subject: [Linux-uvc-devel] Join my network on LinkedIn
Message-ID: <435354457.4760878.1318490451818.JavaMail.app@ela4-app0134.prod>

LinkedIn
------------




    Jean-Christophe BEGUE requested to add you as a connection on LinkedIn:
  
------------------------------------------

Liu,

I'd like to add you to my professional network on LinkedIn.

Accept invitation from Jean-Christophe BEGUE
http://www.linkedin.com/e/2d8m4g-gtpf67om-59/YhLeBtiJ1S_RPnQZ02mJgWFyYP4RYKjG0EhEfiqeMY29FTi7/blk/I172777320_13/1BpC5vrmRLoRZcjkkZt5YCpnlOt3RApnhMpmdzgmhxrSNBszYPclYMczcTdPsOdP59bOREklpPqnt8bPoNdj8Td3oQdjgLrCBxbOYWrSlI/EML_comm_afe/?hs=false&tok=1ZEIWh6UsUjQY1

View invitation from Jean-Christophe BEGUE
http://www.linkedin.com/e/2d8m4g-gtpf67om-59/YhLeBtiJ1S_RPnQZ02mJgWFyYP4RYKjG0EhEfiqeMY29FTi7/blk/I172777320_13/3cNnP0OcPsTdP8TckALqnpPbOYWrSlI/svi/?hs=false&tok=1TWUUb_eQUjQY1

------------------------------------------ 
DID YOU KNOW your LinkedIn profile helps you control your public image when people search for you? Setting your profile as public means your LinkedIn profile will come up when people enter your name in leading search engines. Take control of your image! 
http://www.linkedin.com/e/2d8m4g-gtpf67om-59/ewp/inv-22/?hs=false&tok=3HPWUHo4kUjQY1
 
-- 
(c) 2011, LinkedIn Corporation
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111013/9b55f655/attachment.html>

From max.lapshin at gmail.com  Fri Oct 14 17:57:02 2011
From: max.lapshin at gmail.com (Max Lapshin)
Date: Fri, 14 Oct 2011 19:57:02 +0400
Subject: [Linux-uvc-devel] Microsoft Lifecam Studio catch button
Message-ID: <CAMxVRxBFRhQxFO-1Kxi0tYsamxAhTq6534SmkJPSvgdpHTathA@mail.gmail.com>

Hi. Is it possible to capture button press on microsoft lifecam studio?

There is small button on top of camera and it would be nice to be able
to catch pressing on it. It there any way?


From pj.assis at gmail.com  Sat Oct 15 01:09:47 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Sat, 15 Oct 2011 00:09:47 +0100
Subject: [Linux-uvc-devel] Microsoft Lifecam Studio catch button
In-Reply-To: <CAMxVRxBFRhQxFO-1Kxi0tYsamxAhTq6534SmkJPSvgdpHTathA@mail.gmail.com>
References: <CAMxVRxBFRhQxFO-1Kxi0tYsamxAhTq6534SmkJPSvgdpHTathA@mail.gmail.com>
Message-ID: <CAPueXH4YfxL708pvB0TUWs-qrg3UrKc_ybM1N=SeQ-5+n1GA+Q@mail.gmail.com>

Hi,
have you tried it on guvcview ?
You should be able to use that button to capture a image or video
depending on the default action you select.

Regards,
Paulo

2011/10/14 Max Lapshin <max.lapshin at gmail.com>:
> Hi. Is it possible to capture button press on microsoft lifecam studio?
>
> There is small button on top of camera and it would be nice to be able
> to catch pressing on it. It there any way?
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>


From overclocked at yandex.ru  Sat Oct 15 22:41:53 2011
From: overclocked at yandex.ru (overclocked)
Date: Sun, 16 Oct 2011 00:41:53 +0400
Subject: [Linux-uvc-devel] 05c8:0403 listed as supported but is not
	working
In-Reply-To: <4E482B3B.1040708@yandex.ru>
References: <4E47853C.2060709@yandex.ru> <4E479CA9.5030208@fisher-privat.net>
	<4E47B86D.70701@yandex.ru> <4E47F3E1.3010603@fisher-privat.net>
	<4E482B3B.1040708@yandex.ru>
Message-ID: <356271318711313@web138.yandex.ru>

Hello,

Now, after 3 months, I have checked my webcam (05c8:0403, which does not work on Ubuntu 11.04 - video stops after several seconds) under Windows 7 (Enterprise Edition, Trial) and all is working perfectly. So now I'm sure that it's not a hardware problem, or, at least it could be avoided.

Thank You in advance,
Kind Regards,
Andrey Sapegin.

15.08.2011, 00:08, "overclocked" <overclocked at yandex.ru>:
> Hello,
>
> unfortunately, I have no possibility to check webcam on Windows (I have
> only Ubuntu 11.04 on my laptop and currently do not have a storage to
> backup all and install Windows to check it).
>
> I have used wireshark on Linux...
>
> There are 2 usb interfaces:
> usbmon1 and usbmon2
>
> I have captured the usbmon1... See ?file attached.
>
> I also have captured usbdump.
> It's 120 Mb, so I have used depositfiles for it:
> http://depositfiles.com/files/ssee74mok
>
> Also I have noticed that after some time webcam disappears from lsusb...
>
> Thank You in advance,
> Kind Regards,
>
> Andrey.
>
> On 08/14/2011 06:12 PM, Alexey Fisher wrote:
>
>> ?Hi,
>>
>> ?can you confirm, this webcam do work on windows with uvcvideo driver?
>>
>> ?If yes, can you capture usb traffic like it described here:
>> ?http://lindi.iki.fi/lindi/usb/usbsnoop.txt
>>
>> ?As alternative you can use wireshark.
>> ?Your webcam located on Bus 001 Device 017, some times you need to know
>> ?it to capture usb dump.
>>
>> ?Also it will be good to have usb dump from linux, usbmon module should
>> ?be loaded/compiled.
>>
>> ?To capture you need:
>> ?cat /dev/usbmon1 > usbdump
>>
>> ?use Ctrl+C to stop it.
>>
>> ?gzip usbdump
>>
>> ?Actually you can use wireshark on linux as well.
>>
>> ?if it really big use rapidshare or filesonic or some thing like this
>> ?for upload.
>>
>> ?Am 14.08.2011 13:58, schrieb overclocked:
>>> ?Yes, thank you for the answer.
>>>
>>> ?See files in the attachment.
> --
> Andrey Sapegin,
>
> PhD Student,
> University of Leipzig,
> Software Developer,
> Unister GmbH,
> +4915778339304,
> andrey at sapegin.org.
>
> Promotionstudent,
> Universitaet Leipzig,
> Software Entwickler,
> Unister GmbH,
> +4915778339304,
> andrey at sapegin.org.
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel


From danielecoccato at gmail.com  Sun Oct 16 02:06:55 2011
From: danielecoccato at gmail.com (Daniele Coccato)
Date: Sun, 16 Oct 2011 02:06:55 +0200
Subject: [Linux-uvc-devel] Please fix this bug of 5986:0203
Message-ID: <CAGOpBeEz=rHo0vg6xUsfcSZWWzv0mJoi_prG0pYJ=+budVzHVQ@mail.gmail.com>

Hello,
there is a bug of 5986:0203 which causes the webcam to automatically
turn to "red and black" after some seconds since initialization.
This happens only on the FIRST initialization of the webcam, later
initializations will not cause this problem anymore, until reboot.
This bug exists since LONG time (more than 2 years) and it is pretty annoying.
Could any developer please fix it?
If any more info is needed, feel free to ask.
Thanks.


From bug-track at fisher-privat.net  Sun Oct 16 12:54:45 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 16 Oct 2011 12:54:45 +0200
Subject: [Linux-uvc-devel] Please fix this bug of 5986:0203
In-Reply-To: <CAGOpBeEz=rHo0vg6xUsfcSZWWzv0mJoi_prG0pYJ=+budVzHVQ@mail.gmail.com>
References: <CAGOpBeEz=rHo0vg6xUsfcSZWWzv0mJoi_prG0pYJ=+budVzHVQ@mail.gmail.com>
Message-ID: <4E9AB7F5.1070909@fisher-privat.net>

Hi Daniele,

can you please apply this patch on top of current kernel git.
With this patch you can get access to some webcams  infos without 
spaming the sys log.
After you compiled kernel and rebooted, or reloaded uvcvideo module, you 
can do this:
watch cat /sys/kernel/debug/usb/uvcvideo/001.007_046d.0808/stats

or just "cat" it, to monitore what's happening. Instead of 
"001.007_046d.0808" you need to set some thing different.

The field i interested in, is "error bit" or "uvc_stream_err". Seems 
like some cams depends on this bit, and current uvcvideo code do not use it.
If your cam hangs after it set err_bit than may be we can do some thing. 
I plan to invest my time to err_bit  handler right after uvc_debugfs 
patch will go upstream.

Regards,
Alexey.

Am 16.10.2011 02:06, schrieb Daniele Coccato:
> Hello,
> there is a bug of 5986:0203 which causes the webcam to automatically
> turn to "red and black" after some seconds since initialization.
> This happens only on the FIRST initialization of the webcam, later
> initializations will not cause this problem anymore, until reboot.
> This bug exists since LONG time (more than 2 years) and it is pretty annoying.
> Could any developer please fix it?
> If any more info is needed, feel free to ask.
> Thanks.
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel

-------------- next part --------------
A non-text attachment was scrubbed...
Name: uvc_debugfs_2.diff
Type: text/x-patch
Size: 13893 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111016/773a3fdd/attachment.bin>

From bug-track at fisher-privat.net  Sun Oct 16 12:59:19 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 16 Oct 2011 12:59:19 +0200
Subject: [Linux-uvc-devel] 05c8:0403 listed as supported but is not
	working
In-Reply-To: <356271318711313@web138.yandex.ru>
References: <4E47853C.2060709@yandex.ru> <4E479CA9.5030208@fisher-privat.net>
	<4E47B86D.70701@yandex.ru> <4E47F3E1.3010603@fisher-privat.net>
	<4E482B3B.1040708@yandex.ru> <356271318711313@web138.yandex.ru>
Message-ID: <4E9AB907.2030009@fisher-privat.net>

Hi Andrey,

can you please apply this patch on top of current kernel git.
With this patch you can get access to some webcams  infos without 
spaming the sys log.
After you compiled kernel and rebooted, or reloaded uvcvideo module, you 
can do this:
watch cat /sys/kernel/debug/usb/uvcvideo/001.007_046d.0808/stats

or just "cat" it, to monitore what's happening. Instead of 
"001.007_046d.0808" you need to set some thing different.

The field i interested in, is "error bit" or "uvc_stream_err". Seems 
like some cams depends on this bit, and current uvcvideo code do not use it.
If your cam hangs after it set err_bit than may be we can do some thing. 
I plan to invest my time to err_bit  handler right after uvc_debugfs 
patch will go upstream.

It looks like you are software developer, you are kindly invited to help 
if you like. We need it.

Regards,
Alexey.

Am 15.10.2011 22:41, schrieb overclocked:
> Hello,
>
> Now, after 3 months, I have checked my webcam (05c8:0403, which does not work on Ubuntu 11.04 - video stops after several seconds) under Windows 7 (Enterprise Edition, Trial) and all is working perfectly. So now I'm sure that it's not a hardware problem, or, at least it could be avoided.
>
> Thank You in advance,
> Kind Regards,
> Andrey Sapegin.
>
> 15.08.2011, 00:08, "overclocked"<overclocked at yandex.ru>:
>> Hello,
>>
>> unfortunately, I have no possibility to check webcam on Windows (I have
>> only Ubuntu 11.04 on my laptop and currently do not have a storage to
>> backup all and install Windows to check it).
>>
>> I have used wireshark on Linux...
>>
>> There are 2 usb interfaces:
>> usbmon1 and usbmon2
>>
>> I have captured the usbmon1... See  file attached.
>>
>> I also have captured usbdump.
>> It's 120 Mb, so I have used depositfiles for it:
>> http://depositfiles.com/files/ssee74mok
>>
>> Also I have noticed that after some time webcam disappears from lsusb...
>>
>> Thank You in advance,
>> Kind Regards,
>>
>> Andrey.
>>
>> On 08/14/2011 06:12 PM, Alexey Fisher wrote:
>>
>>>   Hi,
>>>
>>>   can you confirm, this webcam do work on windows with uvcvideo driver?
>>>
>>>   If yes, can you capture usb traffic like it described here:
>>>   http://lindi.iki.fi/lindi/usb/usbsnoop.txt
>>>
>>>   As alternative you can use wireshark.
>>>   Your webcam located on Bus 001 Device 017, some times you need to know
>>>   it to capture usb dump.
>>>
>>>   Also it will be good to have usb dump from linux, usbmon module should
>>>   be loaded/compiled.
>>>
>>>   To capture you need:
>>>   cat /dev/usbmon1>  usbdump
>>>
>>>   use Ctrl+C to stop it.
>>>
>>>   gzip usbdump
>>>
>>>   Actually you can use wireshark on linux as well.
>>>
>>>   if it really big use rapidshare or filesonic or some thing like this
>>>   for upload.
>>>
>>>   Am 14.08.2011 13:58, schrieb overclocked:
>>>>   Yes, thank you for the answer.
>>>>
>>>>   See files in the attachment.
>> --
>> Andrey Sapegin,
>>
>> PhD Student,
>> University of Leipzig,
>> Software Developer,
>> Unister GmbH,
>> +4915778339304,
>> andrey at sapegin.org.
>>
>> Promotionstudent,
>> Universitaet Leipzig,
>> Software Entwickler,
>> Unister GmbH,
>> +4915778339304,
>> andrey at sapegin.org.
>>
>> _______________________________________________
>> Linux-uvc-devel mailing list
>> Linux-uvc-devel at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel

-------------- next part --------------
A non-text attachment was scrubbed...
Name: uvc_debugfs_2.diff
Type: text/x-patch
Size: 13893 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111016/682b7916/attachment.bin>

From cheshirekow at gmail.com  Tue Oct 18 01:35:41 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Mon, 17 Oct 2011 19:35:41 -0400
Subject: [Linux-uvc-devel] report of UVC device and request for info
Message-ID: <1318894541.1421.10.camel@Nadie>

Hello UVC devs, 

I've got an HP Slate 500 that I've installed Ubuntu on. It has two
web-cams: one forward facing and one rear facing. I want to report that
the rear-facing camera works quite well with the UVC driver. Perhaps you
may want to add it to your list of working devices. Here's some info
from lsusb.

Bus 001 Device 006: ID 10f1:1a26 Importek 
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass          239 Miscellaneous Device
  bDeviceSubClass         2 ?
  bDeviceProtocol         1 Interface Association
  bMaxPacketSize0        64
  idVendor           0x10f1 Importek
  idProduct          0x1a26 
  bcdDevice            2.37
  iManufacturer           1 Importek
  iProduct                2 HP Webcam
  iSerial                 3 Dual Sensor
  bNumConfigurations      1

Unfortunately, the forward-facing camera isn't working at all. There is
only one /dev/video device which is the rear facing one. I'm not all
that experienced in these things but it doesn't appear that the forward
facing camera is listed with "lsusb" (I've identified all the devices
which are). I noticed this "Dual Sensor" line from the above, so perhaps
the two cameras are in fact incorporated into a single device? Could
that be the case? If so, is it possible to activate the forward facing
camera, or is this "too unusual" to be handled by the UVC Driver?

Thanks!



From harshu.hs at gmail.com  Tue Oct 18 07:11:53 2011
From: harshu.hs at gmail.com (Harshitha H.S)
Date: Tue, 18 Oct 2011 10:41:53 +0530
Subject: [Linux-uvc-devel] UVC Query
Message-ID: <CADanNGysDo4Lth14B=egPtx-rbFZF6x+Jn5e+yg+xqhgHq4Fgg@mail.gmail.com>

Hi,

I am writing an application to capture H.264 video stream from my Logitech
USB camera. My camera is h.264 capable. I am using V4L2 APIs for opening the
/dev/video and capturing it as V4L2_BUF_TYPE_VIDEO_CAPTURE. I am able to
capture the raw video format. But what i am not able to find is to capture
the video stream on in specific format(i.e H.264), specific resolution and
specific framerate. Please guide on what API's to be used for this purpose
and how.  I am not interested in any Dynamic format change support. Just
that before capturing i want to capture in H.264 through  my app.

I am writing an app on fedora 14. My kernal version is 2.6.35

Please guide on how to proceed?

-Harshitha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111018/4f42d72d/attachment.html>

From ajay.bhargav at einfochips.com  Tue Oct 18 08:02:01 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Tue, 18 Oct 2011 11:32:01 +0530 (IST)
Subject: [Linux-uvc-devel] UVC Query
In-Reply-To: <370024900.244455.1318917586282.JavaMail.root@ahm.einfochips.com>
Message-ID: <988907852.244470.1318917721562.JavaMail.root@ahm.einfochips.com>


----- "Harshitha H.S" <harshu.hs at gmail.com> wrote: 


Hi, 


I am writing an application to capture H.264 video stream from my Logitech USB camera. My camera is h.264 capable. I am using V4L2 APIs for opening the /dev/video and capturing it as V4L2_BUF_TYPE_VIDEO_CAPTURE. I am able to capture the raw video format. But what i am not able to find is to capture the video stream on in specific format(i.e H.264), specific resolution and specific framerate. Please guide on what API's to be used for this purpose and how. I am not interested in any Dynamic format change support. Just that before capturing i want to capture in H.264 through my app. 


I am writing an app on fedora 14. My kernal version is 2.6.35 


Please guide on how to proceed? 


-Harshitha 
Which Logitech camera are you using? can you provide lsusb for it? 
regarding h.264 support, you might like to follow discussion we had on list, I just picked one message from list, better browse through archive. 
http://lists.berlios.de/pipermail/linux-uvc-devel/2011-September/006891.html 

Regards, 
Ajay Bhargav 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111018/591ae01e/attachment.html>

From max.lapshin at gmail.com  Tue Oct 18 08:55:24 2011
From: max.lapshin at gmail.com (Max Lapshin)
Date: Tue, 18 Oct 2011 10:55:24 +0400
Subject: [Linux-uvc-devel] UVC Query
In-Reply-To: <988907852.244470.1318917721562.JavaMail.root@ahm.einfochips.com>
References: <370024900.244455.1318917586282.JavaMail.root@ahm.einfochips.com>
	<988907852.244470.1318917721562.JavaMail.root@ahm.einfochips.com>
Message-ID: <CAMxVRxAbT35vSt15jAt2uyLzY2uMv19HwL1jfeJgKnNj2H0pEw@mail.gmail.com>

There is a very long discussion about H.264 cameras.

Once some of them were supported, but later their support was broken.


From harshu.hs at gmail.com  Tue Oct 18 17:49:18 2011
From: harshu.hs at gmail.com (Harshitha H.S)
Date: Tue, 18 Oct 2011 21:19:18 +0530
Subject: [Linux-uvc-devel] UVC Query
In-Reply-To: <988907852.244470.1318917721562.JavaMail.root@ahm.einfochips.com>
References: <370024900.244455.1318917586282.JavaMail.root@ahm.einfochips.com>
	<988907852.244470.1318917721562.JavaMail.root@ahm.einfochips.com>
Message-ID: <CADanNGyqncz+EJJ03yDD7yeqEgLHsOo+S_JU=dm5PcxVH=UzQw@mail.gmail.com>

Hi Ajay,

Thank you so much for your response!.

I am using Logitech B990 Camera.

Can i control that for h.264 video streaming through V4L2 APIs or UVC XUs
are required for this?

Regards,
Harshitha

On Tue, Oct 18, 2011 at 11:32 AM, Ajay Bhargav
<ajay.bhargav at einfochips.com>wrote:

>
> ----- "Harshitha H.S" <harshu.hs at gmail.com> wrote:
>
> Hi,
>
> I am writing an application to capture H.264 video stream from my Logitech
> USB camera. My camera is h.264 capable. I am using V4L2 APIs for opening the
> /dev/video and capturing it as V4L2_BUF_TYPE_VIDEO_CAPTURE. I am able to
> capture the raw video format. But what i am not able to find is to capture
> the video stream on in specific format(i.e H.264), specific resolution and
> specific framerate. Please guide on what API's to be used for this purpose
> and how.  I am not interested in any Dynamic format change support. Just
> that before capturing i want to capture in H.264 through  my app.
>
> I am writing an app on fedora 14. My kernal version is 2.6.35
>
> Please guide on how to proceed?
>
> -Harshitha
>
> Which Logitech camera are you using? can you provide lsusb for it?
> regarding h.264 support, you might like to follow discussion we had on
> list, I just picked one message from list, better browse through archive.
>
> http://lists.berlios.de/pipermail/linux-uvc-devel/2011-September/006891.html
>
> Regards,
> Ajay Bhargav
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111018/90ec9ce4/attachment.html>

From ngharo at gmail.com  Thu Oct 20 19:38:39 2011
From: ngharo at gmail.com (Nicholas Hall)
Date: Thu, 20 Oct 2011 12:38:39 -0500
Subject: [Linux-uvc-devel] Flipped video on (13d3:5126)
Message-ID: <CAK6ywbJrTOdrS3=Cj6-69X3V3pPfK4qF-fatt9PK-Yi6Of54Uw@mail.gmail.com>

uvcvideo: Found UVC 1.00 device USB 2.0 PC Cam (13d3:5126)

I applied one of the "flip video" patches floating around to correct the issue.

This is an Asus Eee PC T101MT.  Unfortunately, I don't have dmidecode
on this system.  Please let me know if there is any other information
I can get you.

Thanks
--
Nicholas Hall
262.706.1337
ngharo at gmail.com


From arto.karila at karila.com  Fri Oct 21 15:32:32 2011
From: arto.karila at karila.com (Arto Karila)
Date: Fri, 21 Oct 2011 16:32:32 +0300
Subject: [Linux-uvc-devel] Is 064E:E285 supported?
Message-ID: <4EA17470.9090407@karila.com>

Hello,

I have a Lenovo ThinkPad X121e 30515PG with an AMD C-50 processor and a
USB webcam with hardware ID 064E:E285.

I haven't found a Linux driver for the webcam and it is not on the UVC
supported hardware list.

The hardware ID suggests that the webcam is made by SuYin but Windows 7
recognizes it as Silicon Motion.

Will the UVC driver work with this webcam? It should not be a rare one
because ThinkPad X121e is quite popular as a Linux laptop.

Art
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111021/73e77859/attachment.html>

From arto.karila at karila.com  Fri Oct 21 15:55:10 2011
From: arto.karila at karila.com (Arto Karila)
Date: Fri, 21 Oct 2011 16:55:10 +0300
Subject: [Linux-uvc-devel] Is 064E:E285 supported?
Message-ID: <4EA179BE.7070709@karila.com>

Yes it is! I have been fighting for several days to get it to work with
Ubuntu 11.10. I now downgraded to 11.04 and it just started working. I
don't want to use Unity anyway - so 11.04 is fine for me.

Sorry for spamming the list.

Art


From cheshirekow at gmail.com  Fri Oct 21 16:25:45 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Fri, 21 Oct 2011 10:25:45 -0400
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <1318894541.1421.10.camel@Nadie>
References: <1318894541.1421.10.camel@Nadie>
Message-ID: <1319207145.1421.44.camel@Nadie>

Sorry to bump, but I haven't gotten any reply. Is there anyone who has
any experience with a dual/camera setup... forward + rear facing
(similar to a smartphone). 

>From reading the manpage on lsusb, it appears that all usb devices are
listed: even those that don't have drivers. Because there is no second
device listed in lsusb, I suspect that 10f1:1a26 is in fact *both* the
forward facing and rear facing camera. This suggests to me there must be
a way to tell the device *which* physical camera to use for input.
Alternatively, perhaps the single device "publishes" two separate
streams. Perhaps this is not part of UVC. Is there anything in the UVC
spec that provides an interface for switching between two inputs/streams
on the same USB device? Is there anything in the linux UVC driver that
allows for this?

Thanks

On Mon, 2011-10-17 at 19:35 -0400, cheshirekow wrote:
> Hello UVC devs, 
> 
> I've got an HP Slate 500 that I've installed Ubuntu on. It has two
> web-cams: one forward facing and one rear facing. I want to report that
> the rear-facing camera works quite well with the UVC driver. Perhaps you
> may want to add it to your list of working devices. Here's some info
> from lsusb.
> 
> Bus 001 Device 006: ID 10f1:1a26 Importek 
> Device Descriptor:
>   bLength                18
>   bDescriptorType         1
>   bcdUSB               2.00
>   bDeviceClass          239 Miscellaneous Device
>   bDeviceSubClass         2 ?
>   bDeviceProtocol         1 Interface Association
>   bMaxPacketSize0        64
>   idVendor           0x10f1 Importek
>   idProduct          0x1a26 
>   bcdDevice            2.37
>   iManufacturer           1 Importek
>   iProduct                2 HP Webcam
>   iSerial                 3 Dual Sensor
>   bNumConfigurations      1
> 
> Unfortunately, the forward-facing camera isn't working at all. There is
> only one /dev/video device which is the rear facing one. I'm not all
> that experienced in these things but it doesn't appear that the forward
> facing camera is listed with "lsusb" (I've identified all the devices
> which are). I noticed this "Dual Sensor" line from the above, so perhaps
> the two cameras are in fact incorporated into a single device? Could
> that be the case? If so, is it possible to activate the forward facing
> camera, or is this "too unusual" to be handled by the UVC Driver?
> 
> Thanks!
> 




From aab at cichlid.com  Fri Oct 21 17:15:56 2011
From: aab at cichlid.com (Andrew Burgess)
Date: Fri, 21 Oct 2011 08:15:56 -0700
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <1319207145.1421.44.camel@Nadie> (from cheshirekow@gmail.com on
	Fri Oct 21 07:25:45 2011)
Message-ID: <1319210156.30755.130@hogo>

On 10/21/2011 07:25:45 AM, cheshirekow wrote:
> Sorry to bump, but I haven't gotten any reply. Is there anyone who has
> any experience with a dual/camera setup... forward + rear facing
> (similar to a smartphone).
> 
> >From reading the manpage on lsusb, it appears that all usb devices  
> are
> listed: even those that don't have drivers. Because there is no second
> device listed in lsusb, I suspect that 10f1:1a26 is in fact *both* the
> forward facing and rear facing camera. This suggests to me there must  
> be
> a way to tell the device *which* physical camera to use for input.
> Alternatively, perhaps the single device "publishes" two separate
> streams. Perhaps this is not part of UVC. Is there anything in the UVC
> spec that provides an interface for switching between two  
> inputs/streams
> on the same USB device? Is there anything in the linux UVC driver that
> allows for this?

perhaps the 2nd camera is on the pci bus or an i2c bus?
lspci tells the former, i don't know how to determine the latter.
does dmesg show anything suspicious?

it seems a little odd to me to use the same sensor for cameras pointing
in different directions, wouldn't it take some mirrors or something?
vga resolution cameras are probably dirt cheap. just guessing though...

can you take it apart far enough to see if it looks like one or two  
cameras?

maybe one of the android phone forums would have an idea since they
presumably handle phones with similar setups?

hth


From cheshirekow at gmail.com  Fri Oct 21 17:35:19 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Fri, 21 Oct 2011 11:35:19 -0400
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <1319210156.30755.130@hogo>
References: <1319210156.30755.130@hogo>
Message-ID: <1319211319.1421.54.camel@Nadie>

On Fri, 2011-10-21 at 08:15 -0700, Andrew Burgess wrote:
> On 10/21/2011 07:25:45 AM, cheshirekow wrote:
> > Sorry to bump, but I haven't gotten any reply. Is there anyone who has
> > any experience with a dual/camera setup... forward + rear facing
> > (similar to a smartphone).
> > 
> > >From reading the manpage on lsusb, it appears that all usb devices  
> > are
> > listed: even those that don't have drivers. Because there is no second
> > device listed in lsusb, I suspect that 10f1:1a26 is in fact *both* the
> > forward facing and rear facing camera. This suggests to me there must  
> > be
> > a way to tell the device *which* physical camera to use for input.
> > Alternatively, perhaps the single device "publishes" two separate
> > streams. Perhaps this is not part of UVC. Is there anything in the UVC
> > spec that provides an interface for switching between two  
> > inputs/streams
> > on the same USB device? Is there anything in the linux UVC driver that
> > allows for this?
> 
> perhaps the 2nd camera is on the pci bus or an i2c bus?
> lspci tells the former, i don't know how to determine the latter.
> does dmesg show anything suspicious?
Good idea. I guess I just *assumed* it would be on USB. LSPCI shows only
the graphics controller stuff, the usb controllers, ISA Bridge, IDE
interface, crystal HD, and network controller. dmesg didn't show
anything suspicious. Grepping around syslog didn't show much either. I
can see where the "HP Webcam" is found and where uvc logs some things
about it. But there isn't anything in there about another device, or
warnings about something found but without a driver or anything.

> 
> it seems a little odd to me to use the same sensor for cameras pointing
> in different directions, wouldn't it take some mirrors or something?
> vga resolution cameras are probably dirt cheap. just guessing though...
I wouldn't suspect that they use the same sensor. You're right that
would probably be weird. I just figured that there was a single hardware
controller for both physical cameras.

> 
> can you take it apart far enough to see if it looks like one or two  
> cameras?
Unfortunately not. It's a tablet pc and it's got this flashy outer
casing that doesn't look like I could take it apart without doing any
damage.

> 
> maybe one of the android phone forums would have an idea since they
> presumably handle phones with similar setups?
Good idea, I should ask there as well.


> 
> hth




From aab at cichlid.com  Fri Oct 21 17:50:48 2011
From: aab at cichlid.com (Andrew Burgess)
Date: Fri, 21 Oct 2011 08:50:48 -0700
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <1319211319.1421.54.camel@Nadie> (from cheshirekow@gmail.com on
	Fri Oct 21 08:35:19 2011)
Message-ID: <1319212248.30755.135@hogo>

On 10/21/2011 08:35:19 AM, cheshirekow wrote:

> > it seems a little odd to me to use the same sensor for cameras  
> pointing
> > in different directions, wouldn't it take some mirrors or something?
> > vga resolution cameras are probably dirt cheap. just guessing  
> though...
> I wouldn't suspect that they use the same sensor. You're right that
> would probably be weird. I just figured that there was a single  
> hardware
> controller for both physical cameras.

ah. didn't get that.

perhaps try 'vlc -vv v4l2:///dev/video0'
it displays a bunch of available controls; does one look like a switch?
(v4l-info will also display this)

anything in the vlc gui that looks like a switch?



From cheshirekow at gmail.com  Fri Oct 21 23:57:59 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Fri, 21 Oct 2011 17:57:59 -0400
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <1319212248.30755.135@hogo>
References: <1319212248.30755.135@hogo>
Message-ID: <1319234279.2048.8.camel@Nadie>

On Fri, 2011-10-21 at 08:50 -0700, Andrew Burgess wrote:
> On 10/21/2011 08:35:19 AM, cheshirekow wrote:
> 
> > > it seems a little odd to me to use the same sensor for cameras  
> > pointing
> > > in different directions, wouldn't it take some mirrors or something?
> > > vga resolution cameras are probably dirt cheap. just guessing  
> > though...
> > I wouldn't suspect that they use the same sensor. You're right that
> > would probably be weird. I just figured that there was a single  
> > hardware
> > controller for both physical cameras.
> 
> ah. didn't get that.
> 
> perhaps try 'vlc -vv v4l2:///dev/video0'
> it displays a bunch of available controls; does one look like a switch?
> (v4l-info will also display this)
> 
> anything in the vlc gui that looks like a switch?
The only controls that are switches are:
White Balance Temperature, Auto
Exposure, Auto Priority

It appears these are the same controls that are shown with 
uvcdynctrl -c -d /dev/video0

In particular:
Brightness
Contrast
Saturation
Hue
White Balance Temperature, Auto
Gamma
Gain
Power Line Ferquency
White Balance Temperature
Sharpness
Backlight Compensation
Exposure (Absolute)
Exposure Auto Priority


When I do uvcdynctrl -f -d /dev/video0

I get the following list of resolutions:
640x480
1024x768
1280x1024

320x240
160x120
1280x720
1600x1200
2048x1536

Since there are two aspect ratios, perhaps these are the two different
cameras? I cant figure out how to change the resolution though.



From max.lapshin at gmail.com  Sat Oct 22 02:35:22 2011
From: max.lapshin at gmail.com (Max Lapshin)
Date: Sat, 22 Oct 2011 04:35:22 +0400
Subject: [Linux-uvc-devel] Microsoft Lifecam Studio catch button
In-Reply-To: <CAPueXH4YfxL708pvB0TUWs-qrg3UrKc_ybM1N=SeQ-5+n1GA+Q@mail.gmail.com>
References: <CAMxVRxBFRhQxFO-1Kxi0tYsamxAhTq6534SmkJPSvgdpHTathA@mail.gmail.com>
	<CAPueXH4YfxL708pvB0TUWs-qrg3UrKc_ybM1N=SeQ-5+n1GA+Q@mail.gmail.com>
Message-ID: <CAMxVRxC64eJnay3OrwQZhO3t=O8YCGe3OGEECMpDvXmjh2JD+Q@mail.gmail.com>

On Sat, Oct 15, 2011 at 3:09 AM, Paulo Assis <pj.assis at gmail.com> wrote:
> Hi,
> have you tried it on guvcview ?
> You should be able to use that button to capture a image or video
> depending on the default action you select.
>

I'm launching guvcview, pressing button and nothing happens.

Maybe there are some logs, in kernel or anywhere else, where these
keypress should be logged?


From bug-track at fisher-privat.net  Sat Oct 22 09:16:06 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sat, 22 Oct 2011 09:16:06 +0200
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <4EA26D7E.6030907@gmx.net>
References: <1319212248.30755.135@hogo> <1319234279.2048.8.camel@Nadie>
	<4EA26D7E.6030907@gmx.net>
Message-ID: <4EA26DB6.1000601@fisher-privat.net>

Can you please attach the output of this command:
lsusb -vd 10f1:1a26 > lsusb_dump


> Am 21.10.2011 23:57, schrieb cheshirekow:
>> On Fri, 2011-10-21 at 08:50 -0700, Andrew Burgess wrote:
>>> On 10/21/2011 08:35:19 AM, cheshirekow wrote:
>>>
>>>>> it seems a little odd to me to use the same sensor for cameras
>>>> pointing
>>>>> in different directions, wouldn't it take some mirrors or something?
>>>>> vga resolution cameras are probably dirt cheap. just guessing
>>>> though...
>>>> I wouldn't suspect that they use the same sensor. You're right that
>>>> would probably be weird. I just figured that there was a single
>>>> hardware
>>>> controller for both physical cameras.
>>>
>>> ah. didn't get that.
>>>
>>> perhaps try 'vlc -vv v4l2:///dev/video0'
>>> it displays a bunch of available controls; does one look like a switch?
>>> (v4l-info will also display this)
>>>
>>> anything in the vlc gui that looks like a switch?
>> The only controls that are switches are:
>> White Balance Temperature, Auto
>> Exposure, Auto Priority
>>
>> It appears these are the same controls that are shown with
>> uvcdynctrl -c -d /dev/video0
>>
>> In particular:
>> Brightness
>> Contrast
>> Saturation
>> Hue
>> White Balance Temperature, Auto
>> Gamma
>> Gain
>> Power Line Ferquency
>> White Balance Temperature
>> Sharpness
>> Backlight Compensation
>> Exposure (Absolute)
>> Exposure Auto Priority
>>
>>
>> When I do uvcdynctrl -f -d /dev/video0
>>
>> I get the following list of resolutions:
>> 640x480
>> 1024x768
>> 1280x1024
>>
>> 320x240
>> 160x120
>> 1280x720
>> 1600x1200
>> 2048x1536
>>
>> Since there are two aspect ratios, perhaps these are the two different
>> cameras? I cant figure out how to change the resolution though.
>>
>> _______________________________________________
>> Linux-uvc-devel mailing list
>> Linux-uvc-devel at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>



From bug-track at fisher-privat.net  Sat Oct 22 09:19:28 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sat, 22 Oct 2011 09:19:28 +0200
Subject: [Linux-uvc-devel] Is 064E:E285 supported?
In-Reply-To: <4EA179BE.7070709@karila.com>
References: <4EA179BE.7070709@karila.com>
Message-ID: <4EA26E80.7070700@fisher-privat.net>

Can you please attach the output of this command:
lsusb -vd 064e:e285 > lsusb_dump

Am 21.10.2011 15:55, schrieb Arto Karila:
> Yes it is! I have been fighting for several days to get it to work with
> Ubuntu 11.10. I now downgraded to 11.04 and it just started working. I
> don't want to use Unity anyway - so 11.04 is fine for me.
>
> Sorry for spamming the list.
>
> Art
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel



From pj.assis at gmail.com  Sat Oct 22 18:24:49 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Sat, 22 Oct 2011 17:24:49 +0100
Subject: [Linux-uvc-devel] Microsoft Lifecam Studio catch button
In-Reply-To: <CAMxVRxC64eJnay3OrwQZhO3t=O8YCGe3OGEECMpDvXmjh2JD+Q@mail.gmail.com>
References: <CAMxVRxBFRhQxFO-1Kxi0tYsamxAhTq6534SmkJPSvgdpHTathA@mail.gmail.com>
	<CAPueXH4YfxL708pvB0TUWs-qrg3UrKc_ybM1N=SeQ-5+n1GA+Q@mail.gmail.com>
	<CAMxVRxC64eJnay3OrwQZhO3t=O8YCGe3OGEECMpDvXmjh2JD+Q@mail.gmail.com>
Message-ID: <CAPueXH4FjfgJ71vTcYwA8jdYyj8LgzTHEMzDp=8SW9N_g2n_-w@mail.gmail.com>

Hi,
Have you check your home dir ?
by default the picture is stored there.

You can check the console output of 'guvcview --verbose' it should
indicate that a image was stored and give you the location.
(in the latest version 1.5.1 you should be able to choose between
image capture or video capture for the default action of the camera
button)

regards,
Paulo

2011/10/22 Max Lapshin <max.lapshin at gmail.com>:
> On Sat, Oct 15, 2011 at 3:09 AM, Paulo Assis <pj.assis at gmail.com> wrote:
>> Hi,
>> have you tried it on guvcview ?
>> You should be able to use that button to capture a image or video
>> depending on the default action you select.
>>
>
> I'm launching guvcview, pressing button and nothing happens.
>
> Maybe there are some logs, in kernel or anywhere else, where these
> keypress should be logged?
>


From andrej at podzimek.org  Sun Oct 23 02:15:00 2011
From: andrej at podzimek.org (Andrej Podzimek)
Date: Sun, 23 Oct 2011 02:15:00 +0200
Subject: [Linux-uvc-devel] Logitech QuickCam Sphere AF not working
Message-ID: <4EA35C84.1070008@podzimek.org>

Hello,

my webcam used to work almost fine with older kernels, but failures have become too frequent since 3.0:

	usb 2-6.1: new high speed USB device number 19 using ehci_hcd
	uvcvideo: Found UVC 1.00 device <unnamed> (046d:0994)
	input: UVC Camera (046d:0994) as /devices/pci0000:00/0000:00:1d.7/usb2/2-6/2-6.1/2-6.1:1.0/input/input17
	uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110 (exp. 2).
	uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110 (exp. 2).
	uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110 (exp. 2).
	uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110 (exp. 2).
	uvcvideo: Failed to query (GET_DEF) UVC control 3 on unit 2: -110 (exp. 2).

The camera is nearly unusable right now. The video stops soon after an application that reads it (e.g. cheese) is started. There are numerous error messages related to uvcvideo in dmesg. Examples follow:

	uvcvideo: Found UVC 1.00 device <unnamed> (046d:0994)
	uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround.
	uvcvideo: Failed to query (129) UVC probe control : -110 (exp. 26).
	uvcvideo: Failed to initialize the device (-5).
	uvcvideo: Deprecated UVCIOC_CTRL_{ADD,MAP_OLD,GET,SET} ioctls will be removed in 2.6.42.
	uvcvideo: See http://www.ideasonboard.org/uvc/upgrade/ for upgrade instructions.
	uvcvideo: Failed to query (SET_CUR) UVC control 3 on unit 1: -110 (exp. 1).
	uvcvideo: Failed to set UVC probe control : -75 (exp. 26).
	uvcvideo: Failed to set UVC probe control : -110 (exp. 26).
	uvcvideo: Failed to set UVC commit control : -110 (exp. 26).
	uvcvideo: Deprecated UVCIOC_CTRL_{ADD,MAP_OLD,GET,SET} ioctls will be removed in 2.6.42.
	uvcvideo: See http://www.ideasonboard.org/uvc/upgrade/ for upgrade instructions.
	uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110 (exp. 2).
	uvcvideo: Failed to query (GET_MAX) UVC control 4 on unit 2: -110 (exp. 2).

All these mesasges were observed on a 3.0.7 kernel when plugging/unplugging the camera a couple of times, both with and without a hub between the computer and the camera. (There was still the same problem in all cases.)

BTW, is there any possibility to get the motion and autofocus features running? They used to work fine on 32-bit kernels using the uvcdynctrl/guvcview combination, but there seems to be *no* way to make it work on my 64-bit machines. It simply doesn't work, no matter what I try. Is there an updated howto for this?

A piece of advice would be very heplpful. :-)

Andrej

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4032 bytes
Desc: Elektronick?? podpis S/MIME
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111023/7002154f/attachment.bin>

From pj.assis at gmail.com  Sun Oct 23 11:10:07 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Sun, 23 Oct 2011 10:10:07 +0100
Subject: [Linux-uvc-devel] Logitech QuickCam Sphere AF not working
In-Reply-To: <4EA35C84.1070008@podzimek.org>
References: <4EA35C84.1070008@podzimek.org>
Message-ID: <CAPueXH58b8zr4OYe63Z=d7vfGRgihFM6HoRLQjP1qy2RXR8-Tw@mail.gmail.com>

Hi,
I have my logitech sphere up and running with a 64 bit 3.0 kernel.
All controls are working including pan/tilt/ and focus.

In ubuntu at least you can't cold plug the camera, or uvcdynctrl won't
get triggered.
The easiest way is just to rmmod and then modprobe uvcvideo, this will
get everything working.
At least for me it did.

Regards,
Paulo

2011/10/23 Andrej Podzimek <andrej at podzimek.org>:
> Hello,
>
> my webcam used to work almost fine with older kernels, but failures have
> become too frequent since 3.0:
>
> ? ? ? ?usb 2-6.1: new high speed USB device number 19 using ehci_hcd
> ? ? ? ?uvcvideo: Found UVC 1.00 device <unnamed> (046d:0994)
> ? ? ? ?input: UVC Camera (046d:0994) as
> /devices/pci0000:00/0000:00:1d.7/usb2/2-6/2-6.1/2-6.1:1.0/input/input17
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110
> (exp. 2).
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110
> (exp. 2).
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110
> (exp. 2).
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110
> (exp. 2).
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 3 on unit 2: -110
> (exp. 2).
>
> The camera is nearly unusable right now. The video stops soon after an
> application that reads it (e.g. cheese) is started. There are numerous error
> messages related to uvcvideo in dmesg. Examples follow:
>
> ? ? ? ?uvcvideo: Found UVC 1.00 device <unnamed> (046d:0994)
> ? ? ? ?uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling
> workaround.
> ? ? ? ?uvcvideo: Failed to query (129) UVC probe control : -110 (exp. 26).
> ? ? ? ?uvcvideo: Failed to initialize the device (-5).
> ? ? ? ?uvcvideo: Deprecated UVCIOC_CTRL_{ADD,MAP_OLD,GET,SET} ioctls will be
> removed in 2.6.42.
> ? ? ? ?uvcvideo: See http://www.ideasonboard.org/uvc/upgrade/ for upgrade
> instructions.
> ? ? ? ?uvcvideo: Failed to query (SET_CUR) UVC control 3 on unit 1: -110
> (exp. 1).
> ? ? ? ?uvcvideo: Failed to set UVC probe control : -75 (exp. 26).
> ? ? ? ?uvcvideo: Failed to set UVC probe control : -110 (exp. 26).
> ? ? ? ?uvcvideo: Failed to set UVC commit control : -110 (exp. 26).
> ? ? ? ?uvcvideo: Deprecated UVCIOC_CTRL_{ADD,MAP_OLD,GET,SET} ioctls will be
> removed in 2.6.42.
> ? ? ? ?uvcvideo: See http://www.ideasonboard.org/uvc/upgrade/ for upgrade
> instructions.
> ? ? ? ?uvcvideo: Failed to query (GET_DEF) UVC control 2 on unit 2: -110
> (exp. 2).
> ? ? ? ?uvcvideo: Failed to query (GET_MAX) UVC control 4 on unit 2: -110
> (exp. 2).
>
> All these mesasges were observed on a 3.0.7 kernel when plugging/unplugging
> the camera a couple of times, both with and without a hub between the
> computer and the camera. (There was still the same problem in all cases.)
>
> BTW, is there any possibility to get the motion and autofocus features
> running? They used to work fine on 32-bit kernels using the
> uvcdynctrl/guvcview combination, but there seems to be *no* way to make it
> work on my 64-bit machines. It simply doesn't work, no matter what I try. Is
> there an updated howto for this?
>
> A piece of advice would be very heplpful. :-)
>
> Andrej
>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>


From cheshirekow at gmail.com  Sun Oct 23 19:50:17 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Sun, 23 Oct 2011 13:50:17 -0400
Subject: [Linux-uvc-devel] report of UVC device and request for info
In-Reply-To: <4EA26DB6.1000601@fisher-privat.net>
References: <1319212248.30755.135@hogo> <1319234279.2048.8.camel@Nadie>
	<4EA26D7E.6030907@gmx.net> <4EA26DB6.1000601@fisher-privat.net>
Message-ID: <4EA453D9.6000606@gmail.com>

On 10/22/2011 03:16 AM, Alexey Fisher wrote:
> Can you please attach the output of this command:
> lsusb -vd 10f1:1a26 > lsusb_dump
>
Sure. The dump file is attached.

Thanks!


>
>> Am 21.10.2011 23:57, schrieb cheshirekow:
>>> On Fri, 2011-10-21 at 08:50 -0700, Andrew Burgess wrote:
>>>> On 10/21/2011 08:35:19 AM, cheshirekow wrote:
>>>>
>>>>>> it seems a little odd to me to use the same sensor for cameras
>>>>> pointing
>>>>>> in different directions, wouldn't it take some mirrors or something?
>>>>>> vga resolution cameras are probably dirt cheap. just guessing
>>>>> though...
>>>>> I wouldn't suspect that they use the same sensor. You're right that
>>>>> would probably be weird. I just figured that there was a single
>>>>> hardware
>>>>> controller for both physical cameras.
>>>>
>>>> ah. didn't get that.
>>>>
>>>> perhaps try 'vlc -vv v4l2:///dev/video0'
>>>> it displays a bunch of available controls; does one look like a 
>>>> switch?
>>>> (v4l-info will also display this)
>>>>
>>>> anything in the vlc gui that looks like a switch?
>>> The only controls that are switches are:
>>> White Balance Temperature, Auto
>>> Exposure, Auto Priority
>>>
>>> It appears these are the same controls that are shown with
>>> uvcdynctrl -c -d /dev/video0
>>>
>>> In particular:
>>> Brightness
>>> Contrast
>>> Saturation
>>> Hue
>>> White Balance Temperature, Auto
>>> Gamma
>>> Gain
>>> Power Line Ferquency
>>> White Balance Temperature
>>> Sharpness
>>> Backlight Compensation
>>> Exposure (Absolute)
>>> Exposure Auto Priority
>>>
>>>
>>> When I do uvcdynctrl -f -d /dev/video0
>>>
>>> I get the following list of resolutions:
>>> 640x480
>>> 1024x768
>>> 1280x1024
>>>
>>> 320x240
>>> 160x120
>>> 1280x720
>>> 1600x1200
>>> 2048x1536
>>>
>>> Since there are two aspect ratios, perhaps these are the two different
>>> cameras? I cant figure out how to change the resolution though.
>>>
>>> _______________________________________________
>>> Linux-uvc-devel mailing list
>>> Linux-uvc-devel at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>>
>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: lsusb_dump
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111023/3f7c19ac/attachment.ksh>

From harshu.hs at gmail.com  Tue Oct 25 08:30:32 2011
From: harshu.hs at gmail.com (Harshitha H.S)
Date: Tue, 25 Oct 2011 12:00:32 +0530
Subject: [Linux-uvc-devel] UVC H264 Support
Message-ID: <CADanNGyGx+v9wPpGiXrkVzzTVpMH93DPKm+4Jc6CZprksdvNNg@mail.gmail.com>

Hello,

I had few queries regarding the UVC support for H264 video stream. Please
help me in resolving this. (I am just getting started with linux. Not much
experienced in it. So please bear with my basic questions )

1:  I understand that for the raw video formats, i can use the V4L2 APIs to
get the things done for me. For MJPG i can use V4L2_PIX_FMT_MJPEG. But from
the V4L2 API specification document, i could not find any APIs provided for
H264 video streaming from the camera.
    -> Am i missing something ? Is there an V4L2 API available to get the
H264 streaming from my camera(Ofcourse my camera is H264 capabe) ? Is this
support vendor specific or generic ?  Or Is H264 support is not very matured
at UVC/V4L2 ?

2: When i was going through the USB_Video_Payload_H264_1.0.pdf, i came
across UVCX_VIDEO_CONFIG_PROBE/
UVCX_VIDEO_CONFIG_COMMIT APIs. I am using *kernel 2.6.31*.
   -> Are these generic APIs? Is there any generic patch i can apply to my
uvc, if any, to call these APIs at my application to achieve H264 video
streaming ?
   -> For me to call this APIs from my application, should i have to take
care of any dependencies (codec specifics) ? Like what device type to be
open (/dev/video) to read the video stream from the camera ? Is there any
sample H264 video capture which can help me in this ?
   -> Can i use V4L2 and UVCX both together ?

Awaiting for the response!. Thanks in advance!

( Note: Sometime back regarding one of my H264 questions to the UVC group. I
did receive an reply from Ajay Bhargav directing me to a mail thread of H264
discussion and some patches on V4L2 for achieving the H264. But i didnot
find those files for which the patches were available in my kernel version.
:-(. I do have the UVC code but not sys/v4l2. And i do not want to upgrade
my kernel version )

Thanks,
Harshitha HS
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111025/e683784e/attachment.html>

From harshu.hs at gmail.com  Tue Oct 25 08:33:51 2011
From: harshu.hs at gmail.com (Harshitha H.S)
Date: Tue, 25 Oct 2011 12:03:51 +0530
Subject: [Linux-uvc-devel] UVC H264 Support
In-Reply-To: <CADanNGyGx+v9wPpGiXrkVzzTVpMH93DPKm+4Jc6CZprksdvNNg@mail.gmail.com>
References: <CADanNGyGx+v9wPpGiXrkVzzTVpMH93DPKm+4Jc6CZprksdvNNg@mail.gmail.com>
Message-ID: <CADanNGx+ZWZE2Z_bKR96_xhCXLDV8fzzW=A6PjJdbVCz5EbBaw@mail.gmail.com>

Forgot to mention the camera on which i am trying the below

i am trying with Logitech B990

Regards,
Harshitha

On Tue, Oct 25, 2011 at 12:00 PM, Harshitha H.S <harshu.hs at gmail.com> wrote:

> Hello,
>
> I had few queries regarding the UVC support for H264 video stream. Please
> help me in resolving this. (I am just getting started with linux. Not much
> experienced in it. So please bear with my basic questions )
>
> 1:  I understand that for the raw video formats, i can use the V4L2 APIs to
> get the things done for me. For MJPG i can use V4L2_PIX_FMT_MJPEG. But from
> the V4L2 API specification document, i could not find any APIs provided for
> H264 video streaming from the camera.
>     -> Am i missing something ? Is there an V4L2 API available to get the
> H264 streaming from my camera(Ofcourse my camera is H264 capabe) ? Is this
> support vendor specific or generic ?  Or Is H264 support is not very matured
> at UVC/V4L2 ?
>
> 2: When i was going through the USB_Video_Payload_H264_1.0.pdf, i came
> across UVCX_VIDEO_CONFIG_PROBE/
> UVCX_VIDEO_CONFIG_COMMIT APIs. I am using *kernel 2.6.31*.
>    -> Are these generic APIs? Is there any generic patch i can apply to my
> uvc, if any, to call these APIs at my application to achieve H264 video
> streaming ?
>    -> For me to call this APIs from my application, should i have to take
> care of any dependencies (codec specifics) ? Like what device type to be
> open (/dev/video) to read the video stream from the camera ? Is there any
> sample H264 video capture which can help me in this ?
>    -> Can i use V4L2 and UVCX both together ?
>
> Awaiting for the response!. Thanks in advance!
>
> ( Note: Sometime back regarding one of my H264 questions to the UVC group.
> I did receive an reply from Ajay Bhargav directing me to a mail thread of
> H264 discussion and some patches on V4L2 for achieving the H264. But i
> didnot find those files for which the patches were available in my kernel
> version. :-(. I do have the UVC code but not sys/v4l2. And i do not want to
> upgrade my kernel version )
>
> Thanks,
> Harshitha HS
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111025/f746e938/attachment.html>

From max.lapshin at gmail.com  Tue Oct 25 08:53:15 2011
From: max.lapshin at gmail.com (Max Lapshin)
Date: Tue, 25 Oct 2011 10:53:15 +0400
Subject: [Linux-uvc-devel] UVC H264 Support
In-Reply-To: <CADanNGx+ZWZE2Z_bKR96_xhCXLDV8fzzW=A6PjJdbVCz5EbBaw@mail.gmail.com>
References: <CADanNGyGx+v9wPpGiXrkVzzTVpMH93DPKm+4Jc6CZprksdvNNg@mail.gmail.com>
	<CADanNGx+ZWZE2Z_bKR96_xhCXLDV8fzzW=A6PjJdbVCz5EbBaw@mail.gmail.com>
Message-ID: <CAMxVRxDQoFwnf+f+Lg9uqRK9F7mRmmKxu2S1escxBmcSyCJDpw@mail.gmail.com>

Looks like this camera is not supported for no serious reasons.


From harshu.hs at gmail.com  Tue Oct 25 11:49:01 2011
From: harshu.hs at gmail.com (Harshitha H.S)
Date: Tue, 25 Oct 2011 15:19:01 +0530
Subject: [Linux-uvc-devel] UVC H264 Support
In-Reply-To: <CAMxVRxDQoFwnf+f+Lg9uqRK9F7mRmmKxu2S1escxBmcSyCJDpw@mail.gmail.com>
References: <CADanNGyGx+v9wPpGiXrkVzzTVpMH93DPKm+4Jc6CZprksdvNNg@mail.gmail.com>
	<CADanNGx+ZWZE2Z_bKR96_xhCXLDV8fzzW=A6PjJdbVCz5EbBaw@mail.gmail.com>
	<CAMxVRxDQoFwnf+f+Lg9uqRK9F7mRmmKxu2S1escxBmcSyCJDpw@mail.gmail.com>
Message-ID: <CADanNGwxna+gOYRcFzzBpdfd8hov9peNEppPGzShz+BQC7E=hQ@mail.gmail.com>

"Logitech, Inc. HD Webcam B990" is not supported ?

I am sorry i dont quiet understand this ?

Regards,
Harshitha HS

On Tue, Oct 25, 2011 at 12:23 PM, Max Lapshin <max.lapshin at gmail.com> wrote:

> Looks like this camera is not supported for no serious reasons.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111025/df43e1e7/attachment.html>

From laurent.pinchart at ideasonboard.com  Thu Oct 27 16:24:14 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Thu, 27 Oct 2011 16:24:14 +0200
Subject: [Linux-uvc-devel] [PATCH] fix uvcvideo crash on device hotplug
In-Reply-To: <4EA96528.4010706@maxim-ic.com>
References: <4EA96528.4010706@maxim-ic.com>
Message-ID: <201110271624.14934.laurent.pinchart@ideasonboard.com>

Hi Jayakrishnan,

Thank you for the patch.

On Thursday 27 October 2011 16:05:28 Jayakrishnan wrote:
>   This patch is a fix for uvcvideo crash observed on device hotplug. If
> the camera is removed when streaming is going on, close(fd) call by the
> streaming application could lead to a crash.
> 
> The issue is that memory allocated to instances of uvc_streaming
> structure is freed in the handler for device disconnect notification.

I'm surprised by that. When the device is disconnected the USB subsystem will 
call the driver's disconnection handler, uvc_disconnect(). This in turn calls 
uvc_unregister_video(), which calls video_unregister_device().

video_unregister_device() will call the uvcvideo release handler 
(uvc_release()) back when the last reference to the video device is released. 
This happens when all file handles are closed, so the uvc_streaming instance 
should not get freed until all uvcvideo file handles are closed by 
applications.

Could you elaborate on how you produced the crash, and send me a backtrace ?

> But these instances will be accessed when device is closed. The
> instances of data structure is protected by reference count to avoid
> this crash. Stream count is removed to avoid redundancy.
> 
> This logic is quite similar to what was present in uvcvideo earlier.
> Commit 716fdee110ceb816cca8c46c0890d08c5a1addb9 had removed kref.

The kref was required back then as the videodev was racy. This has been fixed 
in videodev a while ago, so the kref got removed from uvcvideo.

> Signed-off-by: Jayakrishnan Memana <jayakrishnan.memana at maxim-ic.com>
> ---
> 
> diff --git a/drivers/media/video/uvc/uvc_driver.c
> b/drivers/media/video/uvc/uvc_driver.c
> index 656d4c9..af50624 100644
> --- a/drivers/media/video/uvc/uvc_driver.c
> +++ b/drivers/media/video/uvc/uvc_driver.c
> @@ -1593,8 +1593,9 @@ static int uvc_scan_device(struct uvc_device *dev)
>    * already been canceled by the USB core. There is no need to kill the
>    * interrupt URB manually.
>    */
> -static void uvc_delete(struct uvc_device *dev)
> +void uvc_delete(struct kref *kref)
>   {
> +    struct uvc_device *dev = container_of(kref, struct uvc_device, kref);
>       struct list_head *p, *n;
> 
>       usb_put_intf(dev->intf);
> @@ -1648,11 +1649,8 @@ static void uvc_release(struct video_device *vdev)
>       struct uvc_streaming *stream = video_get_drvdata(vdev);
>       struct uvc_device *dev = stream->dev;
> 
> -    /* Decrement the registered streams count and delete the device when
> it -     * reaches zero.
> -     */
> -    if (atomic_dec_and_test(&dev->nstreams))
> -        uvc_delete(dev);
> +    /* Delete the device when all references are removed */
> +    kref_put(&dev->kref, uvc_delete);
>   }
> 
>   /*
> @@ -1664,10 +1662,9 @@ static void uvc_unregister_video(struct
> uvc_device *dev)
> 
>       /* Unregistering all video devices might result in uvc_delete() being
>        * called from inside the loop if there's no open file handle. To
> avoid
> -     * that, increment the stream count before iterating over the streams
> -     * and decrement it when done.
> +     * that, take a reference now and remove it after the loop
>        */
> -    atomic_inc(&dev->nstreams);
> +    kref_get(&dev->kref);
> 
>       list_for_each_entry(stream, &dev->streams, list) {
>           if (stream->vdev == NULL)
> @@ -1677,11 +1674,10 @@ static void uvc_unregister_video(struct
> uvc_device *dev)
>           stream->vdev = NULL;
>       }
> 
> -    /* Decrement the stream count and call uvc_delete explicitly if there
> -     * are no stream left.
> +    /* Remove the reference and delete the device if all references are
> +     * removed
>        */
> -    if (atomic_dec_and_test(&dev->nstreams))
> -        uvc_delete(dev);
> +    kref_put(&dev->kref, uvc_delete);
>   }
> 
>   static int uvc_register_video(struct uvc_device *dev,
> @@ -1732,7 +1728,6 @@ static int uvc_register_video(struct uvc_device *dev,
>           return ret;
>       }
> 
> -    atomic_inc(&dev->nstreams);
>       return 0;
>   }
> 
> @@ -1816,9 +1811,9 @@ static int uvc_probe(struct usb_interface *intf,
>       INIT_LIST_HEAD(&dev->entities);
>       INIT_LIST_HEAD(&dev->chains);
>       INIT_LIST_HEAD(&dev->streams);
> -    atomic_set(&dev->nstreams, 0);
>       atomic_set(&dev->users, 0);
>       atomic_set(&dev->nmappings, 0);
> +    kref_init(&dev->kref);
> 
>       dev->udev = usb_get_dev(udev);
>       dev->intf = usb_get_intf(intf);
> diff --git a/drivers/media/video/uvc/uvc_v4l2.c
> b/drivers/media/video/uvc/uvc_v4l2.c
> index dadf11f..0c21a56 100644
> --- a/drivers/media/video/uvc/uvc_v4l2.c
> +++ b/drivers/media/video/uvc/uvc_v4l2.c
> @@ -500,6 +500,8 @@ static int uvc_v4l2_open(struct file *file)
>       handle->state = UVC_HANDLE_PASSIVE;
>       file->private_data = handle;
> 
> +    kref_get(&stream->dev->kref);
> +
>       return 0;
>   }
> 
> @@ -528,6 +530,7 @@ static int uvc_v4l2_release(struct file *file)
>           uvc_status_stop(stream->dev);
> 
>       usb_autopm_put_interface(stream->dev->intf);
> +    kref_put(&stream->dev->kref, uvc_delete);
>       return 0;
>   }
> 
> diff --git a/drivers/media/video/uvc/uvcvideo.h
> b/drivers/media/video/uvc/uvcvideo.h
> index 4c1392e..0925642 100644
> --- a/drivers/media/video/uvc/uvcvideo.h
> +++ b/drivers/media/video/uvc/uvcvideo.h
> @@ -423,6 +423,7 @@ struct uvc_device {
>       char name[32];
> 
>       enum uvc_device_state state;
> +    struct kref kref;
>       atomic_t users;
>       atomic_t nmappings;
> 
> @@ -439,7 +440,6 @@ struct uvc_device {
> 
>       /* Video Streaming interfaces */
>       struct list_head streams;
> -    atomic_t nstreams;
> 
>       /* Status Interrupt Endpoint */
>       struct usb_host_endpoint *int_ep;
> @@ -509,6 +509,7 @@ extern unsigned int uvc_timeout_param;
> 
>   /* Core driver */
>   extern struct uvc_driver uvc_driver;
> +extern void uvc_delete(struct kref *kref);
> 
>   extern struct uvc_entity *uvc_entity_by_id(struct uvc_device *dev, int
> id);

-- 
Regards,

Laurent Pinchart


From jayakrishnan.memana at maxim-ic.com  Thu Oct 27 16:05:28 2011
From: jayakrishnan.memana at maxim-ic.com (Jayakrishnan)
Date: Thu, 27 Oct 2011 19:35:28 +0530
Subject: [Linux-uvc-devel] [PATCH] fix uvcvideo crash on device hotplug
Message-ID: <4EA96528.4010706@maxim-ic.com>

  This patch is a fix for uvcvideo crash observed on device hotplug. If 
the camera is removed when streaming is going on, close(fd) call by the 
streaming application could lead to a crash.

The issue is that memory allocated to instances of uvc_streaming 
structure is freed in the handler for device disconnect notification. 
But these instances will be accessed when device is closed. The 
instances of data structure is protected by reference count to avoid 
this crash. Stream count is removed to avoid redundancy.

This logic is quite similar to what was present in uvcvideo earlier. 
Commit 716fdee110ceb816cca8c46c0890d08c5a1addb9 had removed kref.

Signed-off-by: Jayakrishnan Memana <jayakrishnan.memana at maxim-ic.com>
---

diff --git a/drivers/media/video/uvc/uvc_driver.c 
b/drivers/media/video/uvc/uvc_driver.c
index 656d4c9..af50624 100644
--- a/drivers/media/video/uvc/uvc_driver.c
+++ b/drivers/media/video/uvc/uvc_driver.c
@@ -1593,8 +1593,9 @@ static int uvc_scan_device(struct uvc_device *dev)
   * already been canceled by the USB core. There is no need to kill the
   * interrupt URB manually.
   */
-static void uvc_delete(struct uvc_device *dev)
+void uvc_delete(struct kref *kref)
  {
+    struct uvc_device *dev = container_of(kref, struct uvc_device, kref);
      struct list_head *p, *n;

      usb_put_intf(dev->intf);
@@ -1648,11 +1649,8 @@ static void uvc_release(struct video_device *vdev)
      struct uvc_streaming *stream = video_get_drvdata(vdev);
      struct uvc_device *dev = stream->dev;

-    /* Decrement the registered streams count and delete the device when it
-     * reaches zero.
-     */
-    if (atomic_dec_and_test(&dev->nstreams))
-        uvc_delete(dev);
+    /* Delete the device when all references are removed */
+    kref_put(&dev->kref, uvc_delete);
  }

  /*
@@ -1664,10 +1662,9 @@ static void uvc_unregister_video(struct 
uvc_device *dev)

      /* Unregistering all video devices might result in uvc_delete() being
       * called from inside the loop if there's no open file handle. To 
avoid
-     * that, increment the stream count before iterating over the streams
-     * and decrement it when done.
+     * that, take a reference now and remove it after the loop
       */
-    atomic_inc(&dev->nstreams);
+    kref_get(&dev->kref);

      list_for_each_entry(stream, &dev->streams, list) {
          if (stream->vdev == NULL)
@@ -1677,11 +1674,10 @@ static void uvc_unregister_video(struct 
uvc_device *dev)
          stream->vdev = NULL;
      }

-    /* Decrement the stream count and call uvc_delete explicitly if there
-     * are no stream left.
+    /* Remove the reference and delete the device if all references are
+     * removed
       */
-    if (atomic_dec_and_test(&dev->nstreams))
-        uvc_delete(dev);
+    kref_put(&dev->kref, uvc_delete);
  }

  static int uvc_register_video(struct uvc_device *dev,
@@ -1732,7 +1728,6 @@ static int uvc_register_video(struct uvc_device *dev,
          return ret;
      }

-    atomic_inc(&dev->nstreams);
      return 0;
  }

@@ -1816,9 +1811,9 @@ static int uvc_probe(struct usb_interface *intf,
      INIT_LIST_HEAD(&dev->entities);
      INIT_LIST_HEAD(&dev->chains);
      INIT_LIST_HEAD(&dev->streams);
-    atomic_set(&dev->nstreams, 0);
      atomic_set(&dev->users, 0);
      atomic_set(&dev->nmappings, 0);
+    kref_init(&dev->kref);

      dev->udev = usb_get_dev(udev);
      dev->intf = usb_get_intf(intf);
diff --git a/drivers/media/video/uvc/uvc_v4l2.c 
b/drivers/media/video/uvc/uvc_v4l2.c
index dadf11f..0c21a56 100644
--- a/drivers/media/video/uvc/uvc_v4l2.c
+++ b/drivers/media/video/uvc/uvc_v4l2.c
@@ -500,6 +500,8 @@ static int uvc_v4l2_open(struct file *file)
      handle->state = UVC_HANDLE_PASSIVE;
      file->private_data = handle;

+    kref_get(&stream->dev->kref);
+
      return 0;
  }

@@ -528,6 +530,7 @@ static int uvc_v4l2_release(struct file *file)
          uvc_status_stop(stream->dev);

      usb_autopm_put_interface(stream->dev->intf);
+    kref_put(&stream->dev->kref, uvc_delete);
      return 0;
  }

diff --git a/drivers/media/video/uvc/uvcvideo.h 
b/drivers/media/video/uvc/uvcvideo.h
index 4c1392e..0925642 100644
--- a/drivers/media/video/uvc/uvcvideo.h
+++ b/drivers/media/video/uvc/uvcvideo.h
@@ -423,6 +423,7 @@ struct uvc_device {
      char name[32];

      enum uvc_device_state state;
+    struct kref kref;
      atomic_t users;
      atomic_t nmappings;

@@ -439,7 +440,6 @@ struct uvc_device {

      /* Video Streaming interfaces */
      struct list_head streams;
-    atomic_t nstreams;

      /* Status Interrupt Endpoint */
      struct usb_host_endpoint *int_ep;
@@ -509,6 +509,7 @@ extern unsigned int uvc_timeout_param;

  /* Core driver */
  extern struct uvc_driver uvc_driver;
+extern void uvc_delete(struct kref *kref);

  extern struct uvc_entity *uvc_entity_by_id(struct uvc_device *dev, int 
id);



From jayakrishnan.memana at maxim-ic.com  Thu Oct 27 18:29:28 2011
From: jayakrishnan.memana at maxim-ic.com (Jayakrishnan)
Date: Thu, 27 Oct 2011 21:59:28 +0530
Subject: [Linux-uvc-devel] [PATCH] fix uvcvideo crash on device hotplug
In-Reply-To: <201110271624.14934.laurent.pinchart@ideasonboard.com>
References: <4EA96528.4010706@maxim-ic.com>
	<201110271624.14934.laurent.pinchart@ideasonboard.com>
Message-ID: <4EA986E8.6080704@maxim-ic.com>

  Hi Laurent,

uvc_unregister_video() itself will call uvc_delete() if nstreams is 
zero. As nstreams is zero at that point, uvc_delete() will get called 
and all data structures will get cleaned up.
If uvc_v4l2_release() - invoked by close(fd) - is called after 
uvc_delete() is called, uvc_video_enable() may crash.

Regards,
Jayakrishnan

On 10/27/2011 07:54 PM, Laurent Pinchart wrote:
> Hi Jayakrishnan,
>
> Thank you for the patch.
>
> On Thursday 27 October 2011 16:05:28 Jayakrishnan wrote:
>>    This patch is a fix for uvcvideo crash observed on device hotplug. If
>> the camera is removed when streaming is going on, close(fd) call by the
>> streaming application could lead to a crash.
>>
>> The issue is that memory allocated to instances of uvc_streaming
>> structure is freed in the handler for device disconnect notification.
> I'm surprised by that. When the device is disconnected the USB subsystem will
> call the driver's disconnection handler, uvc_disconnect(). This in turn calls
> uvc_unregister_video(), which calls video_unregister_device().
>
> video_unregister_device() will call the uvcvideo release handler
> (uvc_release()) back when the last reference to the video device is released.
> This happens when all file handles are closed, so the uvc_streaming instance
> should not get freed until all uvcvideo file handles are closed by
> applications.
>
> Could you elaborate on how you produced the crash, and send me a backtrace ?
>
>> But these instances will be accessed when device is closed. The
>> instances of data structure is protected by reference count to avoid
>> this crash. Stream count is removed to avoid redundancy.
>>
>> This logic is quite similar to what was present in uvcvideo earlier.
>> Commit 716fdee110ceb816cca8c46c0890d08c5a1addb9 had removed kref.
> The kref was required back then as the videodev was racy. This has been fixed
> in videodev a while ago, so the kref got removed from uvcvideo.
>
>> Signed-off-by: Jayakrishnan Memana<jayakrishnan.memana at maxim-ic.com>
>> ---
>>
>> diff --git a/drivers/media/video/uvc/uvc_driver.c
>> b/drivers/media/video/uvc/uvc_driver.c
>> index 656d4c9..af50624 100644
>> --- a/drivers/media/video/uvc/uvc_driver.c
>> +++ b/drivers/media/video/uvc/uvc_driver.c
>> @@ -1593,8 +1593,9 @@ static int uvc_scan_device(struct uvc_device *dev)
>>     * already been canceled by the USB core. There is no need to kill the
>>     * interrupt URB manually.
>>     */
>> -static void uvc_delete(struct uvc_device *dev)
>> +void uvc_delete(struct kref *kref)
>>    {
>> +    struct uvc_device *dev = container_of(kref, struct uvc_device, kref);
>>        struct list_head *p, *n;
>>
>>        usb_put_intf(dev->intf);
>> @@ -1648,11 +1649,8 @@ static void uvc_release(struct video_device *vdev)
>>        struct uvc_streaming *stream = video_get_drvdata(vdev);
>>        struct uvc_device *dev = stream->dev;
>>
>> -    /* Decrement the registered streams count and delete the device when
>> it -     * reaches zero.
>> -     */
>> -    if (atomic_dec_and_test(&dev->nstreams))
>> -        uvc_delete(dev);
>> +    /* Delete the device when all references are removed */
>> +    kref_put(&dev->kref, uvc_delete);
>>    }
>>
>>    /*
>> @@ -1664,10 +1662,9 @@ static void uvc_unregister_video(struct
>> uvc_device *dev)
>>
>>        /* Unregistering all video devices might result in uvc_delete() being
>>         * called from inside the loop if there's no open file handle. To
>> avoid
>> -     * that, increment the stream count before iterating over the streams
>> -     * and decrement it when done.
>> +     * that, take a reference now and remove it after the loop
>>         */
>> -    atomic_inc(&dev->nstreams);
>> +    kref_get(&dev->kref);
>>
>>        list_for_each_entry(stream,&dev->streams, list) {
>>            if (stream->vdev == NULL)
>> @@ -1677,11 +1674,10 @@ static void uvc_unregister_video(struct
>> uvc_device *dev)
>>            stream->vdev = NULL;
>>        }
>>
>> -    /* Decrement the stream count and call uvc_delete explicitly if there
>> -     * are no stream left.
>> +    /* Remove the reference and delete the device if all references are
>> +     * removed
>>         */
>> -    if (atomic_dec_and_test(&dev->nstreams))
>> -        uvc_delete(dev);
>> +    kref_put(&dev->kref, uvc_delete);
>>    }
>>
>>    static int uvc_register_video(struct uvc_device *dev,
>> @@ -1732,7 +1728,6 @@ static int uvc_register_video(struct uvc_device *dev,
>>            return ret;
>>        }
>>
>> -    atomic_inc(&dev->nstreams);
>>        return 0;
>>    }
>>
>> @@ -1816,9 +1811,9 @@ static int uvc_probe(struct usb_interface *intf,
>>        INIT_LIST_HEAD(&dev->entities);
>>        INIT_LIST_HEAD(&dev->chains);
>>        INIT_LIST_HEAD(&dev->streams);
>> -    atomic_set(&dev->nstreams, 0);
>>        atomic_set(&dev->users, 0);
>>        atomic_set(&dev->nmappings, 0);
>> +    kref_init(&dev->kref);
>>
>>        dev->udev = usb_get_dev(udev);
>>        dev->intf = usb_get_intf(intf);
>> diff --git a/drivers/media/video/uvc/uvc_v4l2.c
>> b/drivers/media/video/uvc/uvc_v4l2.c
>> index dadf11f..0c21a56 100644
>> --- a/drivers/media/video/uvc/uvc_v4l2.c
>> +++ b/drivers/media/video/uvc/uvc_v4l2.c
>> @@ -500,6 +500,8 @@ static int uvc_v4l2_open(struct file *file)
>>        handle->state = UVC_HANDLE_PASSIVE;
>>        file->private_data = handle;
>>
>> +    kref_get(&stream->dev->kref);
>> +
>>        return 0;
>>    }
>>
>> @@ -528,6 +530,7 @@ static int uvc_v4l2_release(struct file *file)
>>            uvc_status_stop(stream->dev);
>>
>>        usb_autopm_put_interface(stream->dev->intf);
>> +    kref_put(&stream->dev->kref, uvc_delete);
>>        return 0;
>>    }
>>
>> diff --git a/drivers/media/video/uvc/uvcvideo.h
>> b/drivers/media/video/uvc/uvcvideo.h
>> index 4c1392e..0925642 100644
>> --- a/drivers/media/video/uvc/uvcvideo.h
>> +++ b/drivers/media/video/uvc/uvcvideo.h
>> @@ -423,6 +423,7 @@ struct uvc_device {
>>        char name[32];
>>
>>        enum uvc_device_state state;
>> +    struct kref kref;
>>        atomic_t users;
>>        atomic_t nmappings;
>>
>> @@ -439,7 +440,6 @@ struct uvc_device {
>>
>>        /* Video Streaming interfaces */
>>        struct list_head streams;
>> -    atomic_t nstreams;
>>
>>        /* Status Interrupt Endpoint */
>>        struct usb_host_endpoint *int_ep;
>> @@ -509,6 +509,7 @@ extern unsigned int uvc_timeout_param;
>>
>>    /* Core driver */
>>    extern struct uvc_driver uvc_driver;
>> +extern void uvc_delete(struct kref *kref);
>>
>>    extern struct uvc_entity *uvc_entity_by_id(struct uvc_device *dev, int
>> id);


From shop at open-t.co.uk  Thu Oct 27 22:49:07 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Thu, 27 Oct 2011 21:49:07 +0100
Subject: [Linux-uvc-devel] Mark Microsoft LifeCam Studio as having the usb
	bandwidth bug
Message-ID: <4EA9C3C3.1010504@open-t.co.uk>

Hello all,

Would it be possible to add the corresponding note next to the Microsoft 
LifeCam Studio in the supported devices list on the Linux uvc website 
(http://www.ideasonboard.org/uvc/), so that people will know that it has 
the same usb bandwidth bug as the Microsoft LifeCam Cinema, please.

Thank you,

Sebastian


From jayakrishnan.memana at maxim-ic.com  Fri Oct 28 10:56:19 2011
From: jayakrishnan.memana at maxim-ic.com (Jayakrishnan)
Date: Fri, 28 Oct 2011 14:26:19 +0530
Subject: [Linux-uvc-devel] [PATCH] fix uvcvideo crash on device hotplug
In-Reply-To: <4EA986E8.6080704@maxim-ic.com>
References: <4EA96528.4010706@maxim-ic.com>	<201110271624.14934.laurent.pinchart@ideasonboard.com>
	<4EA986E8.6080704@maxim-ic.com>
Message-ID: <4EAA6E33.9070008@maxim-ic.com>

  Please ignore this patch. This is not required for newer kernels.
Apologies for the confusion.

Regards,
Jayakrishnan

On 10/27/2011 09:59 PM, Jayakrishnan wrote:
>    Hi Laurent,
>
> uvc_unregister_video() itself will call uvc_delete() if nstreams is
> zero. As nstreams is zero at that point, uvc_delete() will get called
> and all data structures will get cleaned up.
> If uvc_v4l2_release() - invoked by close(fd) - is called after
> uvc_delete() is called, uvc_video_enable() may crash.
>
> Regards,
> Jayakrishnan
>
> On 10/27/2011 07:54 PM, Laurent Pinchart wrote:
>> Hi Jayakrishnan,
>>
>> Thank you for the patch.
>>
>> On Thursday 27 October 2011 16:05:28 Jayakrishnan wrote:
>>>     This patch is a fix for uvcvideo crash observed on device hotplug. If
>>> the camera is removed when streaming is going on, close(fd) call by the
>>> streaming application could lead to a crash.
>>>
>>> The issue is that memory allocated to instances of uvc_streaming
>>> structure is freed in the handler for device disconnect notification.
>> I'm surprised by that. When the device is disconnected the USB subsystem will
>> call the driver's disconnection handler, uvc_disconnect(). This in turn calls
>> uvc_unregister_video(), which calls video_unregister_device().
>>
>> video_unregister_device() will call the uvcvideo release handler
>> (uvc_release()) back when the last reference to the video device is released.
>> This happens when all file handles are closed, so the uvc_streaming instance
>> should not get freed until all uvcvideo file handles are closed by
>> applications.
>>
>> Could you elaborate on how you produced the crash, and send me a backtrace ?
>>
>>> But these instances will be accessed when device is closed. The
>>> instances of data structure is protected by reference count to avoid
>>> this crash. Stream count is removed to avoid redundancy.
>>>
>>> This logic is quite similar to what was present in uvcvideo earlier.
>>> Commit 716fdee110ceb816cca8c46c0890d08c5a1addb9 had removed kref.
>> The kref was required back then as the videodev was racy. This has been fixed
>> in videodev a while ago, so the kref got removed from uvcvideo.
>>
>>> Signed-off-by: Jayakrishnan Memana<jayakrishnan.memana at maxim-ic.com>
>>> ---
>>>
>>> diff --git a/drivers/media/video/uvc/uvc_driver.c
>>> b/drivers/media/video/uvc/uvc_driver.c
>>> index 656d4c9..af50624 100644
>>> --- a/drivers/media/video/uvc/uvc_driver.c
>>> +++ b/drivers/media/video/uvc/uvc_driver.c
>>> @@ -1593,8 +1593,9 @@ static int uvc_scan_device(struct uvc_device *dev)
>>>      * already been canceled by the USB core. There is no need to kill the
>>>      * interrupt URB manually.
>>>      */
>>> -static void uvc_delete(struct uvc_device *dev)
>>> +void uvc_delete(struct kref *kref)
>>>     {
>>> +    struct uvc_device *dev = container_of(kref, struct uvc_device, kref);
>>>         struct list_head *p, *n;
>>>
>>>         usb_put_intf(dev->intf);
>>> @@ -1648,11 +1649,8 @@ static void uvc_release(struct video_device *vdev)
>>>         struct uvc_streaming *stream = video_get_drvdata(vdev);
>>>         struct uvc_device *dev = stream->dev;
>>>
>>> -    /* Decrement the registered streams count and delete the device when
>>> it -     * reaches zero.
>>> -     */
>>> -    if (atomic_dec_and_test(&dev->nstreams))
>>> -        uvc_delete(dev);
>>> +    /* Delete the device when all references are removed */
>>> +    kref_put(&dev->kref, uvc_delete);
>>>     }
>>>
>>>     /*
>>> @@ -1664,10 +1662,9 @@ static void uvc_unregister_video(struct
>>> uvc_device *dev)
>>>
>>>         /* Unregistering all video devices might result in uvc_delete() being
>>>          * called from inside the loop if there's no open file handle. To
>>> avoid
>>> -     * that, increment the stream count before iterating over the streams
>>> -     * and decrement it when done.
>>> +     * that, take a reference now and remove it after the loop
>>>          */
>>> -    atomic_inc(&dev->nstreams);
>>> +    kref_get(&dev->kref);
>>>
>>>         list_for_each_entry(stream,&dev->streams, list) {
>>>             if (stream->vdev == NULL)
>>> @@ -1677,11 +1674,10 @@ static void uvc_unregister_video(struct
>>> uvc_device *dev)
>>>             stream->vdev = NULL;
>>>         }
>>>
>>> -    /* Decrement the stream count and call uvc_delete explicitly if there
>>> -     * are no stream left.
>>> +    /* Remove the reference and delete the device if all references are
>>> +     * removed
>>>          */
>>> -    if (atomic_dec_and_test(&dev->nstreams))
>>> -        uvc_delete(dev);
>>> +    kref_put(&dev->kref, uvc_delete);
>>>     }
>>>
>>>     static int uvc_register_video(struct uvc_device *dev,
>>> @@ -1732,7 +1728,6 @@ static int uvc_register_video(struct uvc_device *dev,
>>>             return ret;
>>>         }
>>>
>>> -    atomic_inc(&dev->nstreams);
>>>         return 0;
>>>     }
>>>
>>> @@ -1816,9 +1811,9 @@ static int uvc_probe(struct usb_interface *intf,
>>>         INIT_LIST_HEAD(&dev->entities);
>>>         INIT_LIST_HEAD(&dev->chains);
>>>         INIT_LIST_HEAD(&dev->streams);
>>> -    atomic_set(&dev->nstreams, 0);
>>>         atomic_set(&dev->users, 0);
>>>         atomic_set(&dev->nmappings, 0);
>>> +    kref_init(&dev->kref);
>>>
>>>         dev->udev = usb_get_dev(udev);
>>>         dev->intf = usb_get_intf(intf);
>>> diff --git a/drivers/media/video/uvc/uvc_v4l2.c
>>> b/drivers/media/video/uvc/uvc_v4l2.c
>>> index dadf11f..0c21a56 100644
>>> --- a/drivers/media/video/uvc/uvc_v4l2.c
>>> +++ b/drivers/media/video/uvc/uvc_v4l2.c
>>> @@ -500,6 +500,8 @@ static int uvc_v4l2_open(struct file *file)
>>>         handle->state = UVC_HANDLE_PASSIVE;
>>>         file->private_data = handle;
>>>
>>> +    kref_get(&stream->dev->kref);
>>> +
>>>         return 0;
>>>     }
>>>
>>> @@ -528,6 +530,7 @@ static int uvc_v4l2_release(struct file *file)
>>>             uvc_status_stop(stream->dev);
>>>
>>>         usb_autopm_put_interface(stream->dev->intf);
>>> +    kref_put(&stream->dev->kref, uvc_delete);
>>>         return 0;
>>>     }
>>>
>>> diff --git a/drivers/media/video/uvc/uvcvideo.h
>>> b/drivers/media/video/uvc/uvcvideo.h
>>> index 4c1392e..0925642 100644
>>> --- a/drivers/media/video/uvc/uvcvideo.h
>>> +++ b/drivers/media/video/uvc/uvcvideo.h
>>> @@ -423,6 +423,7 @@ struct uvc_device {
>>>         char name[32];
>>>
>>>         enum uvc_device_state state;
>>> +    struct kref kref;
>>>         atomic_t users;
>>>         atomic_t nmappings;
>>>
>>> @@ -439,7 +440,6 @@ struct uvc_device {
>>>
>>>         /* Video Streaming interfaces */
>>>         struct list_head streams;
>>> -    atomic_t nstreams;
>>>
>>>         /* Status Interrupt Endpoint */
>>>         struct usb_host_endpoint *int_ep;
>>> @@ -509,6 +509,7 @@ extern unsigned int uvc_timeout_param;
>>>
>>>     /* Core driver */
>>>     extern struct uvc_driver uvc_driver;
>>> +extern void uvc_delete(struct kref *kref);
>>>
>>>     extern struct uvc_entity *uvc_entity_by_id(struct uvc_device *dev, int
>>> id);
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel


From cheshirekow at gmail.com  Fri Oct 28 18:01:09 2011
From: cheshirekow at gmail.com (cheshirekow)
Date: Fri, 28 Oct 2011 12:01:09 -0400
Subject: [Linux-uvc-devel] Dual sensor, single controller,
 one USB Device (was: report of UVC device and request for info)
In-Reply-To: <4EA453D9.6000606@gmail.com>
References: <1319212248.30755.135@hogo> <1319234279.2048.8.camel@Nadie>
	<4EA26D7E.6030907@gmx.net> <4EA26DB6.1000601@fisher-privat.net>
	<4EA453D9.6000606@gmail.com>
Message-ID: <1319817669.32254.21.camel@Nadie>

On Sun, 2011-10-23 at 13:50 -0400, cheshirekow wrote:
> On 10/22/2011 03:16 AM, Alexey Fisher wrote:
> > Can you please attach the output of this command:
> > lsusb -vd 10f1:1a26 > lsusb_dump
> >
> Sure. The dump file is attached.
> 
> Thanks!
> 

Has anyone by chance managed to take a look at this lsusb dump?

To recap: 
the HP Slate has two integrated we cams: One forward facing for video
calls, and one higher-resolution rear-facing for snapping photos. There
appears to be a single controller for both cameras. In linux, lsusb only
shows one webcam device. In windows, the device manager also shows only
one device for the webcam. However, in windows applications that use the
webcam (i.e. HP's webcam application, and in skype) I'm able to select
which one to use as an option. In linux, there is only one video
device, /dev/video0. 

There does not appear to be any control available from uvcdynctrl or
within vlc to select which physical camera to use. I've tried setting
the resolution in vlc when I use the "open capture device" menu item. I
know that the forward facing camera is VGA so I tried specifying
640x480, but the result is that it shows the rear-camera stream at a low
resolution, rather then showing the forward-camera stream. 

I'd appreciate any suggestions on how to get the forward-facing camera
to work in linux (for skype/google video calls). Also, if it is clear
that this facility is not available in UVC and that there is no way this
is possilble, that would also be useful information.

Thanks again


-------------- next part --------------

Bus 001 Device 006: ID 10f1:1a26 Importek 
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass          239 Miscellaneous Device
  bDeviceSubClass         2 ?
  bDeviceProtocol         1 Interface Association
  bMaxPacketSize0        64
  idVendor           0x10f1 Importek
  idProduct          0x1a26 
  bcdDevice            2.37
  iManufacturer           1 Importek
  iProduct                2 HP Webcam
  iSerial                 3 Dual Sensor
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength         1001
    bNumInterfaces          2
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0x80
      (Bus Powered)
    MaxPower              500mA
    Interface Association:
      bLength                 8
      bDescriptorType        11
      bFirstInterface         0
      bInterfaceCount         2
      bFunctionClass         14 Video
      bFunctionSubClass       3 Video Interface Collection
      bFunctionProtocol       0 
      iFunction               0 
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      1 Video Control
      bInterfaceProtocol      0 
      iInterface              0 
      VideoControl Interface Descriptor:
        bLength                13
        bDescriptorType        36
        bDescriptorSubtype      1 (HEADER)
        bcdUVC               1.00
        wTotalLength           77
        dwClockFrequency       30.000000MHz
        bInCollection           1
        baInterfaceNr( 0)       1
      VideoControl Interface Descriptor:
        bLength                18
        bDescriptorType        36
        bDescriptorSubtype      2 (INPUT_TERMINAL)
        bTerminalID             1
        wTerminalType      0x0201 Camera Sensor
        bAssocTerminal          0
        iTerminal               0 
        wObjectiveFocalLengthMin      0
        wObjectiveFocalLengthMax      0
        wOcularFocalLength            0
        bControlSize                  3
        bmControls           0x0000000e
          Auto-Exposure Mode
          Auto-Exposure Priority
          Exposure Time (Absolute)
      VideoControl Interface Descriptor:
        bLength                26
        bDescriptorType        36
        bDescriptorSubtype      6 (EXTENSION_UNIT)
        bUnitID                 2
        guidExtensionCode         {92423946-d10c-e34a-8783-3133f9eaaa3b}
        bNumControl             3
        bNrPins                 1
        baSourceID( 0)          1
        bControlSize            1
        bmControls( 0)       0xff
        iExtension              0 
      VideoControl Interface Descriptor:
        bLength                11
        bDescriptorType        36
        bDescriptorSubtype      5 (PROCESSING_UNIT)
      Warning: Descriptor too short
        bUnitID                 3
        bSourceID               2
        wMaxMultiplier          0
        bControlSize            2
        bmControls     0x0000177f
          Brightness
          Contrast
          Hue
          Saturation
          Sharpness
          Gamma
          White Balance Temperature
          Backlight Compensation
          Gain
          Power Line Frequency
          White Balance Temperature, Auto
        iProcessing             0 
        bmVideoStandards     0x 9
          None
          SECAM - 625/50
      VideoControl Interface Descriptor:
        bLength                 9
        bDescriptorType        36
        bDescriptorSubtype      3 (OUTPUT_TERMINAL)
        bTerminalID             4
        wTerminalType      0x0101 USB Streaming
        bAssocTerminal          0
        bSourceID               3
        iTerminal               0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0008  1x 8 bytes
        bInterval              16
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0 
      iInterface              0 
      VideoStreaming Interface Descriptor:
        bLength                            15
        bDescriptorType                    36
        bDescriptorSubtype                  1 (INPUT_HEADER)
        bNumFormats                         2
        wTotalLength                      813
        bEndPointAddress                  129
        bmInfo                              0
        bTerminalLink                       4
        bStillCaptureMethod                 2
        bTriggerSupport                     1
        bTriggerUsage                       1
        bControlSize                        1
        bmaControls( 0)                    27
        bmaControls( 1)                    27
      VideoStreaming Interface Descriptor:
        bLength                            27
        bDescriptorType                    36
        bDescriptorSubtype                  4 (FORMAT_UNCOMPRESSED)
        bFormatIndex                        1
        bNumFrameDescriptors                8
        guidFormat                            {59555932-0000-1000-8000-00aa00389b71}
        bBitsPerPixel                      16
        bDefaultFrameIndex                  1
        bAspectRatioX                       0
        bAspectRatioY                       0
        bmInterlaceFlags                 0x00
          Interlaced stream or variable: No
          Fields per frame: 2 fields
          Field 1 first: No
          Field pattern: Field 1 only
          bCopyProtect                      0
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         1
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            640
        wHeight                           480
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize      614400
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         2
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1024
        wHeight                           768
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     1572864
        dwDefaultFrameInterval         666666
        bFrameIntervalType                  4
        dwFrameInterval( 0)            666666
        dwFrameInterval( 1)            666667
        dwFrameInterval( 2)            666668
        dwFrameInterval( 3)            666669
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         3
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1280
        wHeight                          1024
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     2621440
        dwDefaultFrameInterval        4000000
        bFrameIntervalType                  4
        dwFrameInterval( 0)           4000000
        dwFrameInterval( 1)           4000001
        dwFrameInterval( 2)           4000002
        dwFrameInterval( 3)           4000003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         4
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            320
        wHeight                           240
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize      153600
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         5
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            160
        wHeight                           120
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize       38400
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         6
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1280
        wHeight                           720
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     1843200
        dwDefaultFrameInterval        4000000
        bFrameIntervalType                  4
        dwFrameInterval( 0)           4000000
        dwFrameInterval( 1)           4000001
        dwFrameInterval( 2)           4000002
        dwFrameInterval( 3)           4000003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         7
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1600
        wHeight                          1200
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     3840000
        dwDefaultFrameInterval        4000000
        bFrameIntervalType                  4
        dwFrameInterval( 0)           4000000
        dwFrameInterval( 1)           4000001
        dwFrameInterval( 2)           4000002
        dwFrameInterval( 3)           4000003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         8
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           2048
        wHeight                          1536
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     6291456
        dwDefaultFrameInterval        4000000
        bFrameIntervalType                  4
        dwFrameInterval( 0)           4000000
        dwFrameInterval( 1)           4000001
        dwFrameInterval( 2)           4000002
        dwFrameInterval( 3)           4000003
      VideoStreaming Interface Descriptor:
        bLength                            38
        bDescriptorType                    36
        bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
        bEndpointAddress                    0
        bNumImageSizePatterns               8
        wWidth( 0)                        640
        wHeight( 0)                       480
        wWidth( 1)                       1024
        wHeight( 1)                       768
        wWidth( 2)                       1280
        wHeight( 2)                      1024
        wWidth( 3)                        320
        wHeight( 3)                       240
        wWidth( 4)                        160
        wHeight( 4)                       120
        wWidth( 5)                       1280
        wHeight( 5)                       720
        wWidth( 6)                       1600
        wHeight( 6)                      1200
        wWidth( 7)                       2048
        wHeight( 7)                      1536
        bNumCompressionPatterns             8
      VideoStreaming Interface Descriptor:
        bLength                             6
        bDescriptorType                    36
        bDescriptorSubtype                 13 (COLORFORMAT)
        bColorPrimaries                     0 (Unspecified)
        bTransferCharacteristics            0 (Unspecified)
        bMatrixCoefficients                 0 (Unspecified)
      VideoStreaming Interface Descriptor:
        bLength                            11
        bDescriptorType                    36
        bDescriptorSubtype                  6 (FORMAT_MJPEG)
        bFormatIndex                        2
        bNumFrameDescriptors                8
        bFlags                              1
          Fixed-size samples: Yes
        bDefaultFrameIndex                  1
        bAspectRatioX                       0
        bAspectRatioY                       0
        bmInterlaceFlags                 0x00
          Interlaced stream or variable: No
          Fields per frame: 1 fields
          Field 1 first: No
          Field pattern: Field 1 only
          bCopyProtect                      0
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         1
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            640
        wHeight                           480
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize      614400
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         2
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1024
        wHeight                           768
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     1572864
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         3
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1280
        wHeight                          1024
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     2621440
        dwDefaultFrameInterval         666666
        bFrameIntervalType                  4
        dwFrameInterval( 0)            666666
        dwFrameInterval( 1)            666667
        dwFrameInterval( 2)            666668
        dwFrameInterval( 3)            666669
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         4
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            320
        wHeight                           240
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize      153600
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         5
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            160
        wHeight                           120
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize       38400
        dwDefaultFrameInterval         400000
        bFrameIntervalType                  4
        dwFrameInterval( 0)            400000
        dwFrameInterval( 1)            400001
        dwFrameInterval( 2)            400002
        dwFrameInterval( 3)            400003
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         6
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1280
        wHeight                           720
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     1843200
        dwDefaultFrameInterval         666666
        bFrameIntervalType                  4
        dwFrameInterval( 0)            666666
        dwFrameInterval( 1)            666667
        dwFrameInterval( 2)            666668
        dwFrameInterval( 3)            666669
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         7
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           1600
        wHeight                          1200
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     3840000
        dwDefaultFrameInterval         666666
        bFrameIntervalType                  4
        dwFrameInterval( 0)            666666
        dwFrameInterval( 1)            666667
        dwFrameInterval( 2)            666668
        dwFrameInterval( 3)            666669
      VideoStreaming Interface Descriptor:
        bLength                            42
        bDescriptorType                    36
        bDescriptorSubtype                  7 (FRAME_MJPEG)
        bFrameIndex                         8
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                           2048
        wHeight                          1536
        dwMinBitRate                   912384
        dwMaxBitRate                   912384
        dwMaxVideoFrameBufferSize     6291456
        dwDefaultFrameInterval         666666
        bFrameIntervalType                  4
        dwFrameInterval( 0)            666666
        dwFrameInterval( 1)            666667
        dwFrameInterval( 2)            666668
        dwFrameInterval( 3)            666669
      VideoStreaming Interface Descriptor:
        bLength                            38
        bDescriptorType                    36
        bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
        bEndpointAddress                    0
        bNumImageSizePatterns               8
        wWidth( 0)                        640
        wHeight( 0)                       480
        wWidth( 1)                       1024
        wHeight( 1)                       768
        wWidth( 2)                       1280
        wHeight( 2)                      1024
        wWidth( 3)                        320
        wHeight( 3)                       240
        wWidth( 4)                        160
        wHeight( 4)                       120
        wWidth( 5)                       1280
        wHeight( 5)                       720
        wWidth( 6)                       1600
        wHeight( 6)                      1200
        wWidth( 7)                       2048
        wHeight( 7)                      1536
        bNumCompressionPatterns             8
      VideoStreaming Interface Descriptor:
        bLength                             6
        bDescriptorType                    36
        bDescriptorSubtype                 13 (COLORFORMAT)
        bColorPrimaries                     0 (Unspecified)
        bTransferCharacteristics            0 (Unspecified)
        bMatrixCoefficients                 0 (Unspecified)
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       1
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0 
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x1400  3x 1024 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       2
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0 
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x1340  3x 832 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       3
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0 
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x1300  3x 768 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       4
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0 
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x12c0  3x 704 bytes
        bInterval               1
Device Qualifier (for other device speed):
  bLength                10
  bDescriptorType         6
  bcdUSB               2.00
  bDeviceClass          239 Miscellaneous Device
  bDeviceSubClass         2 ?
  bDeviceProtocol         1 Interface Association
  bMaxPacketSize0        64
  bNumConfigurations      1
Device Status:     0x0000
  (Bus Powered)

From pmichaud at pobox.com  Fri Oct 28 21:17:46 2011
From: pmichaud at pobox.com (Patrick R. Michaud)
Date: Fri, 28 Oct 2011 14:17:46 -0500
Subject: [Linux-uvc-devel] Microsoft Lifecam Studio catch button
Message-ID: <20111028191746.GA14362@pmichaud.com>

On my system (Kubuntu 11.10, Oneiric) running guvcview 1.5.1, the 
catch button works to capture images for a LifeCam Cinema webcam 
but not for the LifeCam Studio.  I'm using the .deb package available
from http://sourceforge.net/projects/guvcview/files/debian-bin/ .

Pm

Paulo wrote:
> Hi,
> Have you check your home dir ?
> by default the picture is stored there.
> 
> You can check the console output of 'guvcview --verbose' it should
> indicate that a image was stored and give you the location.
> (in the latest version 1.5.1 you should be able to choose between
> image capture or video capture for the default action of the camera
> button)
> 
> regards,
> Paulo
> 
> 2011/10/22 Max Lapshin <max.lapshin at gmail.com>:
> > On Sat, Oct 15, 2011 at 3:09 AM, Paulo Assis <pj.assis at gmail.com> wrote:
> >> Hi,
> >> have you tried it on guvcview ?
> >> You should be able to use that button to capture a image or video
> >> depending on the default action you select.
> >
> > I'm launching guvcview, pressing button and nothing happens.
> >
> > Maybe there are some logs, in kernel or anywhere else, where these
> > keypress should be logged?


From bug-track at fisher-privat.net  Sat Oct 29 09:30:04 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sat, 29 Oct 2011 09:30:04 +0200
Subject: [Linux-uvc-devel] Dual sensor, single controller, one USB Device
In-Reply-To: <1319817669.32254.21.camel@Nadie>
References: <1319212248.30755.135@hogo> <1319234279.2048.8.camel@Nadie>
	<4EA26D7E.6030907@gmx.net> <4EA26DB6.1000601@fisher-privat.net>
	<4EA453D9.6000606@gmail.com> <1319817669.32254.21.camel@Nadie>
Message-ID: <4EABAB7C.2070709@fisher-privat.net>

Am 28.10.2011 18:01, schrieb cheshirekow:
> On Sun, 2011-10-23 at 13:50 -0400, cheshirekow wrote:
>> On 10/22/2011 03:16 AM, Alexey Fisher wrote:
>>> Can you please attach the output of this command:
>>> lsusb -vd 10f1:1a26>  lsusb_dump
>>>
>> Sure. The dump file is attached.
>>
>> Thanks!
>>
>
> Has anyone by chance managed to take a look at this lsusb dump?
>
> To recap:
> the HP Slate has two integrated we cams: One forward facing for video
> calls, and one higher-resolution rear-facing for snapping photos. There
> appears to be a single controller for both cameras. In linux, lsusb only
> shows one webcam device. In windows, the device manager also shows only
> one device for the webcam. However, in windows applications that use the
> webcam (i.e. HP's webcam application, and in skype) I'm able to select
> which one to use as an option. In linux, there is only one video
> device, /dev/video0.
>
> There does not appear to be any control available from uvcdynctrl or
> within vlc to select which physical camera to use. I've tried setting
> the resolution in vlc when I use the "open capture device" menu item. I
> know that the forward facing camera is VGA so I tried specifying
> 640x480, but the result is that it shows the rear-camera stream at a low
> resolution, rather then showing the forward-camera stream.
>
> I'd appreciate any suggestions on how to get the forward-facing camera
> to work in linux (for skype/google video calls). Also, if it is clear
> that this facility is not available in UVC and that there is no way this
> is possilble, that would also be useful information.
>
> Thanks again

Hi,

suddenly i do not see any control to switch the sensor. I assume there 
can be two variants how it may work:
1. vendor specific extension unit for uvc
2. or usb mode switcher

if both sensors have same capabilities, the 1. make sense. If not then 
second. Because this usb dump report settings only for one sensor.

For 1. it will be probably possible to control it with libwebcam. For 2. 
it should be possible to control it with some kind of usb_modeswitch 
(i'm not up to date).

To find what it is actually, there can be fallowing options:
1. sniff usb traffic
2. see if the windows driver has some advise for us
3. unscrew your laptop and find what control use your webcam.

Regards,
Alexey


From JBurg88 at gmx.net  Sun Oct 30 19:12:30 2011
From: JBurg88 at gmx.net (Josef Burg)
Date: Sun, 30 Oct 2011 19:12:30 +0100
Subject: [Linux-uvc-devel] (no subject)
Message-ID: <20111030181230.30350@gmx.net>

Hi,

I have found 2 devices supported by uvcvideo in quirks mode, which are not currently on the list of supported devices:

The first is an integrated Webcam in my Dell Vostro 3550 (1bcf:2809) which only works with quirks set to 4 (and up).

The second one is an external wireless usb webcam from LogiLink (0416:a91a). This one only works with quirks set to 2.

As far as i saw, you need the output of lsusb, so I attached it as two text files.


Greetings, Josef
-- 
NEU: FreePhone - 0ct/min Handyspartarif mit Geld-zur?ck-Garantie!		
Jetzt informieren: http://www.gmx.net/de/go/freephone
-------------- next part --------------
A non-text attachment was scrubbed...
Name: integrated
Type: application/octet-stream
Size: 30027 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111030/ccb159a5/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: logilink
Type: application/octet-stream
Size: 13919 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111030/ccb159a5/attachment-0001.obj>

From bug-track at fisher-privat.net  Mon Oct 31 08:24:56 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Mon, 31 Oct 2011 08:24:56 +0100
Subject: [Linux-uvc-devel] (no subject)
In-Reply-To: <20111030181230.30350@gmx.net>
References: <20111030181230.30350@gmx.net>
Message-ID: <4EAE4D48.4000906@fisher-privat.net>

Hi Josef,

fallowing quirk are supported:
#define UVC_QUIRK_STATUS_INTERVAL       0x00000001
#define UVC_QUIRK_PROBE_MINMAX          0x00000002
#define UVC_QUIRK_PROBE_EXTRAFIELDS     0x00000004
#define UVC_QUIRK_BUILTIN_ISIGHT        0x00000008
#define UVC_QUIRK_STREAM_NO_FID         0x00000010
#define UVC_QUIRK_IGNORE_SELECTOR_UNIT  0x00000020
#define UVC_QUIRK_FIX_BANDWIDTH         0x00000080
#define UVC_QUIRK_PROBE_DEF             0x00000100
#define UVC_QUIRK_RESTRICT_FRAME_RATE   0x00000200

Assume your Dell webcam need UVC_QUIRK_PROBE_EXTRAFIELDS, and Logilink
need UVC_QUIRK_PROBE_EXTRAFIELDS. If you wont to use only one quirk at 
time you should use only numbers from the list.
Can you please confirm my assumption.

Am 30.10.2011 19:12, schrieb Josef Burg:
> Hi,
>
> I have found 2 devices supported by uvcvideo in quirks mode, which are not currently on the list of supported devices:
>
> The first is an integrated Webcam in my Dell Vostro 3550 (1bcf:2809) which only works with quirks set to 4 (and up).
>
> The second one is an external wireless usb webcam from LogiLink (0416:a91a). This one only works with quirks set to 2.
>
> As far as i saw, you need the output of lsusb, so I attached it as two text files.
>
>
> Greetings, Josef
>
>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel



From ajay.bhargav at einfochips.com  Mon Oct 31 09:06:12 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Mon, 31 Oct 2011 13:36:12 +0530 (IST)
Subject: [Linux-uvc-devel] UVC H264 Support
In-Reply-To: <CADanNGwxna+gOYRcFzzBpdfd8hov9peNEppPGzShz+BQC7E=hQ@mail.gmail.com>
Message-ID: <2100324756.281566.1320048372035.JavaMail.root@ahm.einfochips.com>

Hi Harshitha, 

Logitech B990 is not supported by Linux-uvc yet. and regarding sys/v4l2 they belong to gstreamer not v4l2 code. so just apply the v4l2 related patches and use v4l2 sample capture program to read the raw h264 stream. You can test the stream by playing it using vlc or mplayer (totem). 

Regards, 
Ajay Bhargav 


----- "Harshitha H.S" <harshu.hs at gmail.com> wrote: 


"Logitech, Inc. HD Webcam B990" is not supported ? I am sorry i dont quiet understand this ? Regards, 
Harshitha HS 


On Tue, Oct 25, 2011 at 12:23 PM, Max Lapshin < max.lapshin at gmail.com > wrote: 


Looks like this camera is not supported for no serious reasons. 


-- 
This message has been scanned for viruses and 
dangerous content by Clean Mail Gateway , and is 
believed to be clean. 
_______________________________________________ 
Linux-uvc-devel mailing list 
Linux-uvc-devel at lists.berlios.de 
https://lists.berlios.de/mailman/listinfo/linux-uvc-devel 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20111031/f516f643/attachment.html>

From JBurg88 at gmx.net  Mon Oct 31 12:22:35 2011
From: JBurg88 at gmx.net (Josef Burg)
Date: Mon, 31 Oct 2011 12:22:35 +0100
Subject: [Linux-uvc-devel] (no subject)
In-Reply-To: <4EAE4D48.4000906@fisher-privat.net>
References: <20111030181230.30350@gmx.net> <4EAE4D48.4000906@fisher-privat.net>
Message-ID: <20111031112235.256810@gmx.net>

Hi Alexey,

I tested all the modes you reported and came up with te following table:

                               |     Dell    |  Logilink
-------------------------------+--------------------------
without quirks                 | working     | not working
UVC_QUIRK_STATUS_INTERVAL      | working     | not working
UVC_QUIRK_PROBE_MINMAX         | working *1  | working
UVC_QUIRK_PROBE_EXTRAFIELDS    | not working | not working
UVC_QUIRK_BUILTIN_ISIGHT       | not working | not working
UVC_QUIRK_STREAM_NO_FID        | not working | not working
UVC_QUIRK_IGNORE_SELECTOR_UNIT | working     | not working
UVC_QUIRK_FIX_BANDWIDTH        | working     | not working
UVC_QUIRK_PROBE_DEF            | working     | not working
UVC_QUIRK_RESTRICT_FRAME_RATE  | working     | not working

*1 the image looks very pixelated


So sorry for the report for the Dell webcam. I had quirks enabled by default for my Logilink-Webcam and didn't test it without quirks :-/

But the Logilink USB-Webcam is only working with quirks set to 0x2 (UVC_QUIRK_PROBE_MINMAX). Otherwise I get 'Unable to set format: Input/output error\n Init v4L2 failed !! exit fatal' when starting luvcview.

Greetings,
  Josef

-------- Original-Nachricht --------
> Datum: Mon, 31 Oct 2011 08:24:56 +0100
> Von: Alexey Fisher <bug-track at fisher-privat.net>
> An: Josef Burg <JBurg88 at gmx.net>
> CC: linux-uvc-devel at lists.berlios.de
> Betreff: Re: [Linux-uvc-devel] (no subject)

> Hi Josef,
> 
> fallowing quirk are supported:
> #define UVC_QUIRK_STATUS_INTERVAL       0x00000001
> #define UVC_QUIRK_PROBE_MINMAX          0x00000002
> #define UVC_QUIRK_PROBE_EXTRAFIELDS     0x00000004
> #define UVC_QUIRK_BUILTIN_ISIGHT        0x00000008
> #define UVC_QUIRK_STREAM_NO_FID         0x00000010
> #define UVC_QUIRK_IGNORE_SELECTOR_UNIT  0x00000020
> #define UVC_QUIRK_FIX_BANDWIDTH         0x00000080
> #define UVC_QUIRK_PROBE_DEF             0x00000100
> #define UVC_QUIRK_RESTRICT_FRAME_RATE   0x00000200
> 
> Assume your Dell webcam need UVC_QUIRK_PROBE_EXTRAFIELDS, and Logilink
> need UVC_QUIRK_PROBE_EXTRAFIELDS. If you wont to use only one quirk at 
> time you should use only numbers from the list.
> Can you please confirm my assumption.
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de


