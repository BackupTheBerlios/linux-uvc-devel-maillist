From stephan.lachowsky at maxim-ic.com  Wed Jun  1 00:24:21 2011
From: stephan.lachowsky at maxim-ic.com (Stephan Lachowsky)
Date: Tue, 31 May 2011 15:24:21 -0700
Subject: [Linux-uvc-devel] [PATCH] [media] uvcvideo: Fix control mapping for
 devices with multiple chains
Message-ID: <1306880661.2916.39.camel@svmlwks101>

The search for matching extension units fails to take account of the
current chain.  In the case where you have two distinct video chains,
both containing an XU with the same GUID but different unit ids, you
will be unable to perform a mapping on the second chain because entity
on the first chain will always be found first

Fix this by only searching the current chain when performing a control
mapping.  This is analogous to the search used by uvc_find_control(),
and is the correct behaviour.

Signed-off-by: Stephan Lachowsky <stephan.lachowsky at maxim-ic.com>
---
 drivers/media/video/uvc/uvc_ctrl.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/media/video/uvc/uvc_ctrl.c b/drivers/media/video/uvc/uvc_ctrl.c
index 59f8a9a..a77648f 100644
--- a/drivers/media/video/uvc/uvc_ctrl.c
+++ b/drivers/media/video/uvc/uvc_ctrl.c
@@ -1565,8 +1565,8 @@ int uvc_ctrl_add_mapping(struct uvc_video_chain *chain,
 		return -EINVAL;
 	}
 
-	/* Search for the matching (GUID/CS) control in the given device */
-	list_for_each_entry(entity, &dev->entities, list) {
+	/* Search for the matching (GUID/CS) control on the current chain */
+	list_for_each_entry(entity, &chain->entities, chain) {
 		unsigned int i;
 
 		if (UVC_ENTITY_TYPE(entity) != UVC_VC_EXTENSION_UNIT ||
-- 
1.7.4.4




From hdegoede at redhat.com  Wed Jun  1 09:53:42 2011
From: hdegoede at redhat.com (Hans de Goede)
Date: Wed, 01 Jun 2011 09:53:42 +0200
Subject: [Linux-uvc-devel] Acer Orbicam ID 0402:5602 ALi Corp.
 M5602	Video Camera Controller
In-Reply-To: <201105312328.21198.laurent.pinchart@ideasonboard.com>
References: <DUB105-w241151273CEB7E0F94D0C7DB9D0@phx.gbl>
	<201105312328.21198.laurent.pinchart@ideasonboard.com>
Message-ID: <4DE5F006.9040807@redhat.com>

Hi,

On 05/31/2011 11:28 PM, Laurent Pinchart wrote:
> Hi Marco,
>
> On Saturday 30 April 2011 12:26:26 Marco Favetta wrote:
>> Hi,
>> I have Acer Orbicam ID 0402:5602 ALi Corp. M5602 Video Camera Controller in
>> my Acer Aspire 5100 and I don't find the drive for it on OS Linux.
>
> First of all, is your camera a UVC device ?

AFAIK it is not, the m5602 is not a UVC bridge, it is supported under Linux
by the gspca_m5602 driver.

Regards,

Hans


From giacomo.oliveri at gmail.com  Thu Jun  2 10:20:12 2011
From: giacomo.oliveri at gmail.com (Giacomo)
Date: Thu, 2 Jun 2011 10:20:12 +0200
Subject: [Linux-uvc-devel] VAIO Webcam - 04f2:b26d Chicony Electronics Co.
Message-ID: <BANLkTimFAZ9hXR4v+=iCJEr7qwwFpooJLQ@mail.gmail.com>

Dear Linux UVC development team,

I've just bought a SONY VAIO VPCSB laptop, which includes the
following built-in webcam

04f2:b26d Chicony Electronics Co., Ltd

Unfortunately, if I try to switch on the webcam, the laptop freezes
(btw, I'm using Debian Squeeze, kernel 2.6.38-2-686).
Is such a webcam already supported? Or may I ask to enlist it for
the development?

Thanks!
g.o.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110602/42971d06/attachment.html>

From philip at gladstonefamily.net  Fri Jun  3 04:58:27 2011
From: philip at gladstonefamily.net (Philip Gladstone)
Date: Thu, 02 Jun 2011 22:58:27 -0400
Subject: [Linux-uvc-devel] Logitech C910 -- trying to run more than one.
In-Reply-To: <1299495229.15216.8.camel@zwerg>
References: <4D618034.5030807@gladstonefamily.net>	
	<201103061214.19341.laurent.pinchart@ideasonboard.com>	
	<4D740AFA.5010803@gladstonefamily.net>
	<1299495229.15216.8.camel@zwerg>
Message-ID: <4DE84DD3.7080804@gladstonefamily.net>

Sorry for the long delay in responding. I will try these changes.

However, the scoop on the other various patches is as follows:

in 2592x1944 mode, at 10fps, 4bpp for mjpg, the fix_jpeg_bandwidth makes 
things worse with 3476 B/frame rather than the device specified 3060 
B/frame.

At 2592x1944 mode at 5fps, 2bpp for mjpg, the fix_jpeg_bandwidth ends up 
at 1024 B/frame, which allows me to run the three cameras that I want.

At 2592x1944 mode at 5fps, 4bpp for mjpg, the fix_jpeg_bandwidth ends up 
at 1984 B/frame, which allows me to run two cameras, but not the third.

However, these numbers are funny. The frame size for 2592x1944x4bpp is 
2.5 Megabytes or 20 Mbits. At 5fps, this is 100 Mbits/sec. There should 
be ample bandwidth to support three of these streams.

To be honest, I don't understand the units of the B/frame. Can someone 
explain it to me?

Philip




On 07-Mar-11 5:53 AM, Alexey Fisher wrote:
> Hi Philip,
>
> i probably will not solve your problem but i wont to take a look on it.
> Can you please apply attached debug patch and send me the log.
> this patch was made on top of fd2b6dd22743f7c96f7c6e97d49ff5f4b422e741
>
> Make sure you have CONFIG_DYNAMIC_DEBUG=y enabled. To start dynamic
> debug you need do as root:
>
> echo "module uvcvideo +p">  /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_video_decode_end -p"
>> /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_video_decode_start -p"
>> /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_video_decode_data -p"
>> /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_video_decode_isoc -p"
>> /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_video_complete -p"
>> /sys/kernel/debug/dynamic_debug/control
> echo "func uvc_v4l2_do_ioctl -p"
>> /sys/kernel/debug/dynamic_debug/control
> and start video with this, it will make onl?y one shot:
> gst-launch-0.10 -v v4l2src num-buffers=1 ! jpegdec ! ffmpegcolorspace !
> autovideosink
>
> Am Sonntag, den 06.03.2011, 17:30 -0500 schrieb Philip Gladstone:
>> It turned out that my kernel had an old uvcvideo module which didn't
>> have the right debug log messages, and so I'm in the process of
>> upgrading to a current kernel version. So far, I've managed to render my
>> machine unbootable [it is a little embedded linux box].
>>
>> Philip
>>
>> On 3/6/2011 6:14 AM, Laurent Pinchart wrote:
>>> Hi Philip,
>>>
>>> On Sunday 20 February 2011 21:57:24 Philip Gladstone wrote:
>>>> I attached two C910s to a small linux box, and ran into the 'Failed to
>>>> submit URB' problem.
>>>>
>>>> When I look at the descriptors for this camera, I think I understand the
>>>> problem. I'm capturing at 5 Mpixels and I'm trying two cameras.
>>>>
>>>>          VideoStreaming Interface Descriptor:
>>>>            bLength                            38
>>>>            bDescriptorType                    36
>>>>            bDescriptorSubtype                  7 (FRAME_MJPEG)
>>>>            bFrameIndex                        28
>>>>            bmCapabilities                   0x01
>>>>              Still image supported
>>>>            wWidth                           2592
>>>>            wHeight                          1944
>>>>            dwMinBitRate                403107840
>>>>            dwMaxBitRate                806215680
>>>>            dwMaxVideoFrameBufferSize    10077696
>>>>            dwDefaultFrameInterval        1000000
>>>>            bFrameIntervalType                  3
>>>>            dwFrameInterval( 0)           1000000
>>>>            dwFrameInterval( 1)           1333333
>>>>            dwFrameInterval( 2)           2000000
>>>>
>>>> The video frame size is set to 10Mb. This is surprisingly large as
>>>> actual frames captured with MJPEG on this camera are typically 500kb or
>>>> less. When I checked the descriptor for the uncompressed version of the
>>>> same frame, it came back with the same value of dwMaxVideoFrameBufferSize
>>>> (effectively 16 bits per pixel). The values for min/max bit rate are
>>>> (correctly) calculated from the frame intervals and the buffer size.
>>> The uvcvideo driver doesn't use the dwMaxVideoFrameBufferSize field to compute
>>> the required bandwidth but queries the device at runtime instead.
>>>
>>> You can enable the UVC_TRACE_VIDEO trace flag to get the driver to print the
>>> bandwidth requested by the device to the kernel log.
>>>
>>>> Typical JPEG compression gets down to 1 bit per pixel, and 2 bits is
>>>> very unusual.
>>>>
>>>> What I want to know is what the impact would be of defining a new QUIRK
>>>> that overrode the frame buffer size for compressed frames and calculated
>>>> them at (say) 2 bits per pixel?
>>>>
>>>> Do other webcams get this right?
>>> You would be surprised by how many webcams get things wrong.
>>>



From ducktayp at gmail.com  Fri Jun  3 07:25:04 2011
From: ducktayp at gmail.com (Duck Tayp)
Date: Fri, 03 Jun 2011 01:25:04 -0400
Subject: [Linux-uvc-devel] Microsoft LifeCam Studio and multiple webcam
 setups?
In-Reply-To: <4DD6549E.8090301@open-t.co.uk>
References: <4DD6549E.8090301@open-t.co.uk>
Message-ID: <4DE87030.4070502@gmail.com>

I tried this with a Lifecam Studio and a Microsoft VX 6000 connected to
the same USB hub and could view live video simultaneously from both. My
impression of the Lifecam Studio: excellent video and audio quality
(even in low light), and it "just works" (at least on the Ubuntu
versions I've tried --- 10.10 and up).


On 05/20/2011 07:46 AM, Sebastian Arcus wrote:

> I really liked the Microsoft LifeCam Cinema webcam - but it had a bug
> (feature?) which requested all usb bandwidth so no other webcam could
> be used alongside it on the same usb root hub.
>
> Could someone here who has the new Microsoft LifeCam Studio please
> test and confirm if this new model also suffers from the same
> "feature". Just plug another webcam alongside the LifeCam studio, and
> if you come up with various messages alongside "no space left on
> device" on Linux, or similar in Windows - and you can't use both at
> the same time - it means it has the same problem as the LifeCam Cinema.
>
> Also - any general impressions of this webcam would be welcome.
>
> Thank you in advance,
>
> Sebastian
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel



From yann at minet.net  Fri Jun  3 15:48:59 2011
From: yann at minet.net (Yann Sionneau)
Date: Fri, 03 Jun 2011 15:48:59 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
Message-ID: <4DE8E64B.3030009@minet.net>

Hi Laurent and the UVC list,

Here is a patch (that applies against the linux-2.6.39 vanilla tree) 
that shows the number of frames whose header (the one described at 
section 2.4.3.3 of the document "USB Device Class Definition for Video 
Devices") contains the SCR, PTS and ERR bits.
The patch is attached in the e-mail.

The patch works as follow :

(*) Apply the patch
(*) Compile the patched UVC module
(*) Unload the previous module and load the new one
(*) Start a video capture
(*) Upon "stop" of the video capture (ioctl STREAMOFF) it will print 
statistics about the stream in the dmesg (/var/log/syslog)

It will show the number of frames whose header contains the bits SCR, 
PTS and ERR. It will show the total number of frames of the stream as 
well (the stream->sequence).

I have tested this patch with 2 webcams so far, one is the Logitech HD 
Pro C910, the other is the Freetalk "skype" webcam made by Tatung, model 
"Talk 7190", board "R00C", firmware "SDK8RC26".

The second one is featuring a MG3500 chip from Maxim IC, it does 
hardware encoding to stream H.264 codec inside a MPEG-2 TS container.

During my test I used it without any hardware encoding, it was doing 
normal raw YUV 4:2:2 streaming.

I noticed both webcams are putting PTS and SCR bits on all (or all but 
one, not sure) frames.
Moreover no frame got the ERR bit on (good :)).

Here are two examples of what the patch should output :

Jun  3 11:58:43 obiwan kernel: [180779.218667] [uvcvideo] stats about 
previous stream :
Jun  3 11:58:43 obiwan kernel: [180779.218672] nb_pts = 140 ; nb_scr = 
140 ; nb_err = 0 over 139 frames

and

Jun  3 11:46:33 obiwan kernel: [180050.637465] [uvcvideo] stats about 
previous stream :
Jun  3 11:46:33 obiwan kernel: [180050.637471] nb_pts = 258 ; nb_scr = 
258 ; nb_err = 0 over 257 frames

I don't know why I have one extra frame in my pts, scr and err counters 
than in the stream->sequence.

I used "guvcview -d /dev/video0" to start the stream, and closed the GTK 
window to stop the stream.

Feel free to test this patch with your webcams are report back your 
dmesg output (with framerate and the duration of the test please).

This test is the first step of a bigger goal : implementing a correct 
timestamp support.

Regards,

-- 
Yann Sionneau
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-added-some-stats-about-streams-in-UVC-driver.patch
Type: text/x-patch
Size: 2469 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110603/d15bdf04/attachment.bin>

From marco.gulino at gmail.com  Sun Jun  5 12:42:43 2011
From: marco.gulino at gmail.com (Marco Gulino)
Date: Sun, 5 Jun 2011 12:42:43 +0200
Subject: [Linux-uvc-devel] Microsoft Lifecam HD 3000 (exposure + led
	issues)
In-Reply-To: <201105312335.29526.laurent.pinchart@ideasonboard.com>
References: <BANLkTi=+7gHg1ZSL8HpqE2_f7VviTsgfTQ@mail.gmail.com>
	<201105312335.29526.laurent.pinchart@ideasonboard.com>
Message-ID: <BANLkTikLfSn39PKZwpN7xzBgbqUNLs6UuA@mail.gmail.com>

>
> Could you please send me the output of lsusb -v (running as root if
> possible)
> for your webcam ?
>

Sure... you can find it in the attachment.
I also found out (reading another thread in this list:
https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006321.html )
that the camera does accept some discrete values for exposure control, i
guess the sensor is exactly the same as Lifecam HD 5000 then.
I patched v4l2ucp to display a combo in place of a slider to easly setup
these values, so at least this problem is partially fixed (still annoying,
but it's usable at least).

UVC doesn't provide a standard control for this. Some cameras support
> controlling the LED manually, and implements that using UVC extension
> units.
> Without manufacturer documentation it might be difficult to find out how to
> control the LED, but trial/error is possible (be warned that this could in
> theory brick the camera).
>

I see... it seems kinda hard then...
Anyway worth trying, it would really help cooling down the camera... Any
hints on what to try?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110605/58590f99/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lsusb-microsoft-lifecam
Type: application/octet-stream
Size: 36811 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110605/58590f99/attachment.obj>

From pauljurczak at yahoo.com  Sun Jun  5 19:42:22 2011
From: pauljurczak at yahoo.com (Paul Jurczak)
Date: Sun, 5 Jun 2011 10:42:22 -0700 (PDT)
Subject: [Linux-uvc-devel] Microsoft Lifecam HD 3000 (exposure + led
	issues)
In-Reply-To: <BANLkTikLfSn39PKZwpN7xzBgbqUNLs6UuA@mail.gmail.com>
Message-ID: <976163.60277.qm@web65414.mail.ac4.yahoo.com>

Marco,
I don't think the LED produces a lot to heat. The primary heat sources are USB controller, image sensor and voltage regulators.
Paul

--- On Sun, 6/5/11, Marco Gulino <marco.gulino at gmail.com> wrote:
............I see... it seems kinda hard then...Anyway worth trying, it would really help cooling down the camera... Any hints on what to try?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110605/73af830c/attachment.html>

From ktowns at live.com.au  Sun Jun  5 21:17:53 2011
From: ktowns at live.com.au (Kyle Towns)
Date: Mon, 6 Jun 2011 05:17:53 +1000
Subject: [Linux-uvc-devel] UVC device not listed on the Linux UVC project
	homepage
Message-ID: <BLU0-SMTP25622E7291D1C818A6C33983610@phx.gbl>

Heya.

I just want to report 1e4e:0102 USB 2.0 camera by Etron Technologies 
does appear to work after updating my distribution with the media built 
git repository. It didn't work at all before that. I'm using Linux Mint 10.


From laurent.pinchart at ideasonboard.com  Mon Jun  6 19:42:20 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Mon, 6 Jun 2011 19:42:20 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <4DE8E64B.3030009@minet.net>
References: <4DE8E64B.3030009@minet.net>
Message-ID: <201106061942.20970.laurent.pinchart@ideasonboard.com>

Hi Yann,

Thanks for the patch.

On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
> Hi Laurent and the UVC list,
> 
> Here is a patch (that applies against the linux-2.6.39 vanilla tree)
> that shows the number of frames whose header (the one described at
> section 2.4.3.3 of the document "USB Device Class Definition for Video
> Devices") contains the SCR, PTS and ERR bits.
> The patch is attached in the e-mail.
> 
> The patch works as follow :
> 
> (*) Apply the patch
> (*) Compile the patched UVC module
> (*) Unload the previous module and load the new one
> (*) Start a video capture
> (*) Upon "stop" of the video capture (ioctl STREAMOFF) it will print
> statistics about the stream in the dmesg (/var/log/syslog)
> 
> It will show the number of frames whose header contains the bits SCR,
> PTS and ERR. It will show the total number of frames of the stream as
> well (the stream->sequence).

You should take all UVC packets into account, not just the first one for each 
frame. the important information are

- do all frames have a PTS timestamp in their first packet ?
- do all non-empty packets for a frame have a PTS timestamp, and is it 
constant through the whole frame as it should be ?
- how many SCR timestamps do we have per frame ? are they constant through the 
whole frame or do they vary as they should ?

> I have tested this patch with 2 webcams so far, one is the Logitech HD
> Pro C910, the other is the Freetalk "skype" webcam made by Tatung, model
> "Talk 7190", board "R00C", firmware "SDK8RC26".
> 
> The second one is featuring a MG3500 chip from Maxim IC, it does
> hardware encoding to stream H.264 codec inside a MPEG-2 TS container.
> 
> During my test I used it without any hardware encoding, it was doing
> normal raw YUV 4:2:2 streaming.
> 
> I noticed both webcams are putting PTS and SCR bits on all (or all but
> one, not sure) frames.
> Moreover no frame got the ERR bit on (good :)).
> 
> Here are two examples of what the patch should output :
> 
> Jun  3 11:58:43 obiwan kernel: [180779.218667] [uvcvideo] stats about
> previous stream :
> Jun  3 11:58:43 obiwan kernel: [180779.218672] nb_pts = 140 ; nb_scr =
> 140 ; nb_err = 0 over 139 frames
> 
> and
> 
> Jun  3 11:46:33 obiwan kernel: [180050.637465] [uvcvideo] stats about
> previous stream :
> Jun  3 11:46:33 obiwan kernel: [180050.637471] nb_pts = 258 ; nb_scr =
> 258 ; nb_err = 0 over 257 frames
> 
> I don't know why I have one extra frame in my pts, scr and err counters
> than in the stream->sequence.
> 
> I used "guvcview -d /dev/video0" to start the stream, and closed the GTK
> window to stop the stream.
> 
> Feel free to test this patch with your webcams are report back your
> dmesg output (with framerate and the duration of the test please).
> 
> This test is the first step of a bigger goal : implementing a correct
> timestamp support.
> 
> Regards,

-- 
Regards,

Laurent Pinchart


From yann at minet.net  Mon Jun  6 23:22:52 2011
From: yann at minet.net (Yann Sionneau)
Date: Mon, 06 Jun 2011 23:22:52 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <201106061942.20970.laurent.pinchart@ideasonboard.com>
References: <4DE8E64B.3030009@minet.net>
	<201106061942.20970.laurent.pinchart@ideasonboard.com>
Message-ID: <4DED452C.10502@minet.net>

Le 06/06/11 19:42, Laurent Pinchart a ?crit :
> Hi Yann,
> 
> Thanks for the patch.
> 
> On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
>> Hi Laurent and the UVC list,
>>
>> Here is a patch (that applies against the linux-2.6.39 vanilla tree)
>> that shows the number of frames whose header (the one described at
>> section 2.4.3.3 of the document "USB Device Class Definition for Video
>> Devices") contains the SCR, PTS and ERR bits.
>> The patch is attached in the e-mail.
>>
>> The patch works as follow :
>>
>> (*) Apply the patch
>> (*) Compile the patched UVC module
>> (*) Unload the previous module and load the new one
>> (*) Start a video capture
>> (*) Upon "stop" of the video capture (ioctl STREAMOFF) it will print
>> statistics about the stream in the dmesg (/var/log/syslog)
>>
>> It will show the number of frames whose header contains the bits SCR,
>> PTS and ERR. It will show the total number of frames of the stream as
>> well (the stream->sequence).
> 
> You should take all UVC packets into account, not just the first one for each 
> frame. 

Yes I don't know why in my head I thought only the first uvc packet
would have a header for the frame with timestamps and such, but it makes
no sense, each packet has its own header and the start of frame is just
signaled by the toggling of the FID :)

> the important information are
> 
> - do all frames have a PTS timestamp in their first packet ?

It seems so yes, at least on the two webcams I tried with the patch.

> - do all non-empty packets for a frame have a PTS timestamp, and is it 
> constant through the whole frame as it should be ?

Let's modify the patch to count the PTS and SCR of all packets instead
of only one per frame in order to sort this out !

> - how many SCR timestamps do we have per frame ? are they constant through the 
> whole frame or do they vary as they should ?
> 

Same here !

>> I have tested this patch with 2 webcams so far, one is the Logitech HD
>> Pro C910, the other is the Freetalk "skype" webcam made by Tatung, model
>> "Talk 7190", board "R00C", firmware "SDK8RC26".
>>
>> The second one is featuring a MG3500 chip from Maxim IC, it does
>> hardware encoding to stream H.264 codec inside a MPEG-2 TS container.
>>
>> During my test I used it without any hardware encoding, it was doing
>> normal raw YUV 4:2:2 streaming.
>>
>> I noticed both webcams are putting PTS and SCR bits on all (or all but
>> one, not sure) frames.
>> Moreover no frame got the ERR bit on (good :)).
>>
>> Here are two examples of what the patch should output :
>>
>> Jun  3 11:58:43 obiwan kernel: [180779.218667] [uvcvideo] stats about
>> previous stream :
>> Jun  3 11:58:43 obiwan kernel: [180779.218672] nb_pts = 140 ; nb_scr =
>> 140 ; nb_err = 0 over 139 frames
>>
>> and
>>
>> Jun  3 11:46:33 obiwan kernel: [180050.637465] [uvcvideo] stats about
>> previous stream :
>> Jun  3 11:46:33 obiwan kernel: [180050.637471] nb_pts = 258 ; nb_scr =
>> 258 ; nb_err = 0 over 257 frames
>>
>> I don't know why I have one extra frame in my pts, scr and err counters
>> than in the stream->sequence.
>>
>> I used "guvcview -d /dev/video0" to start the stream, and closed the GTK
>> window to stop the stream.
>>
>> Feel free to test this patch with your webcams are report back your
>> dmesg output (with framerate and the duration of the test please).
>>
>> This test is the first step of a bigger goal : implementing a correct
>> timestamp support.
>>
>> Regards,
> 

Thanks for your review and comments, will submit a new patch ASAP !

Regards,

-- 
Yann Sionneau


From shop at open-t.co.uk  Tue Jun  7 00:56:19 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Mon, 06 Jun 2011 23:56:19 +0100
Subject: [Linux-uvc-devel] Microsoft LifeCam Studio and multiple webcam
 setups?
In-Reply-To: <4DE87030.4070502@gmail.com>
References: <4DD6549E.8090301@open-t.co.uk> <4DE87030.4070502@gmail.com>
Message-ID: <4DED5B13.2080802@open-t.co.uk>

Thank you for the report. It seems that only the LifeCam Cinema had the 
usb bandwidth reservation bug then.

Thanks again,

Sebastian

On 03/06/11 06:25, Duck Tayp wrote:
> I tried this with a Lifecam Studio and a Microsoft VX 6000 connected to
> the same USB hub and could view live video simultaneously from both. My
> impression of the Lifecam Studio: excellent video and audio quality
> (even in low light), and it "just works" (at least on the Ubuntu
> versions I've tried --- 10.10 and up).
>
>
> On 05/20/2011 07:46 AM, Sebastian Arcus wrote:
>
>> I really liked the Microsoft LifeCam Cinema webcam - but it had a bug
>> (feature?) which requested all usb bandwidth so no other webcam could
>> be used alongside it on the same usb root hub.
>>
>> Could someone here who has the new Microsoft LifeCam Studio please
>> test and confirm if this new model also suffers from the same
>> "feature". Just plug another webcam alongside the LifeCam studio, and
>> if you come up with various messages alongside "no space left on
>> device" on Linux, or similar in Windows - and you can't use both at
>> the same time - it means it has the same problem as the LifeCam Cinema.
>>
>> Also - any general impressions of this webcam would be welcome.
>>
>> Thank you in advance,
>>
>> Sebastian
>> _______________________________________________
>> Linux-uvc-devel mailing list
>> Linux-uvc-devel at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>


From shop at open-t.co.uk  Tue Jun  7 00:59:47 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Mon, 06 Jun 2011 23:59:47 +0100
Subject: [Linux-uvc-devel] Footage of objects in motion recorded from
 webcam is blurry
In-Reply-To: <201105312332.58605.laurent.pinchart@ideasonboard.com>
References: <4DB7D0CD.6070909@open-t.co.uk>
	<201104291056.57844.laurent.pinchart@ideasonboard.com>
	<4DBB0EB3.1090207@open-t.co.uk>
	<201105312332.58605.laurent.pinchart@ideasonboard.com>
Message-ID: <4DED5BE3.50006@open-t.co.uk>

Hi Laurent,

On 31/05/11 22:32, Laurent Pinchart wrote:
> Hi Sebastian,
>
> On Friday 29 April 2011 21:17:07 Sebastian Arcus wrote:
>> On 04/29/2011 09:56 AM, Laurent Pinchart wrote:
>>> On Wednesday 27 April 2011 10:42:14 Paulo Assis wrote:
>>>>> 1. Would this be fairly specific to the Logitech QuickCam 9000, or is a
>>>>> more generic issue with webcam sensors?
>>>>
>>>> Neither, you just need to lower exposure time.
>>>>
>>>>> 2. Are other webcams better in this respect?
>>>>
>>>> I don't think so, you can control exposure quite easily with this cam.
>>>>
>>>>> 3. Can I use any of the UVC features to tweak the driver parameters in
>>>>> order to force sharper images of objects on the move?
>>>>
>>>> Yes, just set exposure mode to manual, and tweak exposure absolute,
>>>> also remember to disable "exposure, auto priority".
>>>> You should also use the highest fps possible (30 fps I think)
>>>>
>>>>> 4. Is this to do with the auto-focus of the camera, and can I turn it
>>>>> off or peg it in software at a certain value, to improve things?
>>>>
>>>> Yes, use uvcdynctrl (command line) or guvcview (gtk) (guvcview
>>>> --control_only will let you use your program along side it)
>>>
>>> As far as I know, auto-focus for the Logitech QuickCam Pro 9000 is
>>> implemented in software in the Windows driver. The camera has a manual
>>> focus control only. You can tune it with any V4L2 application that
>>> supports controls, such as uvcdynctrl, guvcview, v4l2-ctl, yavta, ...
>>
>> I've had a look and it indeed there is a focus control. Considering that
>> by default it is set on 0 (and it was set on 0 during operation), does
>> this mean that it is on auto?
>
> No, the camera doesn't implement auto-focus. Which focus control does your
> camera report, absolute or relative focus ?

I'm not sure any more. The cameras are actually installed on a bus, so I 
don't have them here to test the. They are part of a cctv system I've 
built to be installed on the bus. However, in practice, in normal 
daylight - it seems that there is no motion blurring. So the results are 
very good so far without needing to adjust the focus controls in any way.

Thanks for all the answers.

Sebastian

>


From shop at open-t.co.uk  Tue Jun  7 01:05:22 2011
From: shop at open-t.co.uk (Sebastian Arcus)
Date: Tue, 07 Jun 2011 00:05:22 +0100
Subject: [Linux-uvc-devel] Microsoft Lifecam HD 3000 (exposure + led
	issues)
In-Reply-To: <BANLkTi=+7gHg1ZSL8HpqE2_f7VviTsgfTQ@mail.gmail.com>
References: <BANLkTi=+7gHg1ZSL8HpqE2_f7VviTsgfTQ@mail.gmail.com>
Message-ID: <4DED5D32.6070306@open-t.co.uk>

Hi Marco

On 08/05/11 11:45, Marco Gulino wrote:
> Hi everybody!
> My new Microsoft Lifecam HD 3000 webcam works quite fine in linux, but i
> can't get the exposure controls to work.
> Is there a way to improve the driver?
> I can provide usb snoops if needed.
>
> I'm also wondering if it's possible to disable the LED which is quite
> annoying (i'm using the cam for astronomical images, i need to get it
> dark and cold).

I don't know if this helps your case, but I remember looking at some 
pages created by somebody who modded the Logitech QuickCam Pro 9500 for 
astronomical use - and they opened it up (because the LED is inside the 
QuickCam Pro 9000) and carefully painted black paint on the led to make 
it dark.

Also - I used the Logitech QuickCam Pro 9500 for a cctv project - and, 
after opening the webcams, I've carefully destroyed the LED's with fine 
nosed plyers. Note that such procedure could theoretically damage the 
camera. However, of the 6 cameras I've "modified" that way - all of them 
are alive and well. Just be warned that you would be taking some risks.

Sebastian



From michal at physics.ubc.ca  Tue Jun  7 02:31:17 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Mon, 6 Jun 2011 17:31:17 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
Message-ID: <alpine.LNX.2.00.1106061713110.19493@tristan>

Hello,

I'm having some trouble with a Quanta integrated webcam.  It identifies 
itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is built 
in to a Dell XPS-15 (L501X).

The uvcvideo module works, but the video stutters and has some 
distortions, even at low resolutions and frame rates.

With the Camera Output set to MJPG (in guvcview) "Ignoring empty buffer ..."
messages occur with most glitches.

If the output is set to YV12, the errors look like:

VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
Error grabbing image
libv4l2: error converting / decoding frame data: v4l-convert: error 
parsing JPEG header: Not a JPG file ?

With cheese, the video preview looks ok, but video capture is
unusable - the video stutters badly at low resolution, and the capture 
hangs at high resolution (the program doesn't hang, but after a couple of 
frames no more get captured).

This is kernel 2.6.39 on gentoo with libv4l-0.8.3

Any advice would be appreciated.

Carl




From thejunk.b at gmail.com  Tue Jun  7 03:41:49 2011
From: thejunk.b at gmail.com (Randy)
Date: Mon, 6 Jun 2011 21:41:49 -0400
Subject: [Linux-uvc-devel] may be unsupported webcam
Message-ID: <201106062141.49831.thejunk.b@gmail.com>

This webcam is in an HP G7-1070US laptop

lsusb
Bus 002 Device 007: ID 0461:4de7 Primax Electronics, Ltd 

Info from Windows7
HP Webcam-101

Hardware ID's
USB\VID_0461&PID_4DE7&REV_0005&MI_00
USB\VID_0461&PID_4DE7&MI_00

Compatible ID's
USB\Class_0e&SubClass_03&Prot_00
USB\Class_0e&SubClass_03
USB\Class_0e

Power data
Current power state:
D3

Power capabilities:
00000019
PDCAP_D0_SUPPORTED
PDCAP_D3_SUPPORTED
PDCAP_WAKE_FROM_D0_SUPPORTED

Power state mappings:
S0 -> D0
S1 -> D2
S2 -> D2
S3 -> D2
S4 -> D2
S5 -> D3

Driver files
C:\Windows\system32\drivers\ksthunk.sys
C:\Windows\system32\drivers\usbvideo.sys
file version 6.1.7600.16385(win7_rtm.090713-1255)

If there is any more I can do the get this cam up and working let me know

Thanks
-- 
If it ain't broke tweek it


From reddyapuru at gmail.com  Tue Jun  7 07:12:29 2011
From: reddyapuru at gmail.com (purushotham reddy)
Date: Tue, 7 Jun 2011 10:42:29 +0530
Subject: [Linux-uvc-devel] Request to help me in bringing up UVC driver for
	linux-2.6.18 version
Message-ID: <BANLkTinVPVzAbMeEVqOAnUgLavGZKYt+LQ@mail.gmail.com>

Hello Sir/madam,

I would like to build UVC driver in old linux kernel-2.6.18 in which there
is no UVC driver in it. I would like to know is there any patch which can be
applied to my kernel.

Also, please let me know the procedure to build this driver to my kernel.



With regards and thanks,
Purushotham Reddy A
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110607/6a5c4f7f/attachment.html>

From bug-track at fisher-privat.net  Tue Jun  7 08:32:08 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 07 Jun 2011 08:32:08 +0200
Subject: [Linux-uvc-devel] may be unsupported webcam
In-Reply-To: <201106062141.49831.thejunk.b@gmail.com>
References: <201106062141.49831.thejunk.b@gmail.com>
Message-ID: <1307428328.3274.3.camel@zwerg>

On Mo, 2011-06-06 at 21:41 -0400, Randy wrote:
> This webcam is in an HP G7-1070US laptop
> 
> lsusb
> Bus 002 Device 007: ID 0461:4de7 Primax Electronics, Ltd 

please attach lsusb_dump file after you execute the command:
sudo lsusb -vvd 0461:4de7 > lsusb_dump

> Info from Windows7
> HP Webcam-101
> 
> Hardware ID's
> USB\VID_0461&PID_4DE7&REV_0005&MI_00
> USB\VID_0461&PID_4DE7&MI_00
> 
> Compatible ID's
> USB\Class_0e&SubClass_03&Prot_00
> USB\Class_0e&SubClass_03
> USB\Class_0e
> 
> Power data
> Current power state:
> D3
> 
> Power capabilities:
> 00000019
> PDCAP_D0_SUPPORTED
> PDCAP_D3_SUPPORTED
> PDCAP_WAKE_FROM_D0_SUPPORTED
> 
> Power state mappings:
> S0 -> D0
> S1 -> D2
> S2 -> D2
> S3 -> D2
> S4 -> D2
> S5 -> D3
> 
> Driver files
> C:\Windows\system32\drivers\ksthunk.sys
> C:\Windows\system32\drivers\usbvideo.sys
> file version 6.1.7600.16385(win7_rtm.090713-1255)
> 
> If there is any more I can do the get this cam up and working let me know
> 
> Thanks

-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Tue Jun  7 08:35:34 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 07 Jun 2011 08:35:34 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106061713110.19493@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
Message-ID: <1307428534.3274.6.camel@zwerg>

On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
> Hello,
> 
> I'm having some trouble with a Quanta integrated webcam.  It identifies 
> itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is built 
> in to a Dell XPS-15 (L501X).
> 
> The uvcvideo module works, but the video stutters and has some 
> distortions, even at low resolutions and frame rates.
> 
> With the Camera Output set to MJPG (in guvcview) "Ignoring empty buffer ..."
> messages occur with most glitches.
> 
> If the output is set to YV12, the errors look like:
> 
> VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
> Error grabbing image
> libv4l2: error converting / decoding frame data: v4l-convert: error 
> parsing JPEG header: Not a JPG file ?
> 
> With cheese, the video preview looks ok, but video capture is
> unusable - the video stutters badly at low resolution, and the capture 
> hangs at high resolution (the program doesn't hang, but after a couple of 
> frames no more get captured).

It looks more like cheese bug. If video preview works fine then webcam
do it too. Take a look at this bug:
https://bugzilla.gnome.org/show_bug.cgi?id=564957
-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Tue Jun  7 08:54:16 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 07 Jun 2011 08:54:16 +0200
Subject: [Linux-uvc-devel] Logitech C910 -- trying to run more than one.
In-Reply-To: <4DE84DD3.7080804@gladstonefamily.net>
References: <4D618034.5030807@gladstonefamily.net>
	<201103061214.19341.laurent.pinchart@ideasonboard.com>
	<4D740AFA.5010803@gladstonefamily.net> <1299495229.15216.8.camel@zwerg>
	<4DE84DD3.7080804@gladstonefamily.net>
Message-ID: <1307429656.3274.13.camel@zwerg>

On Do, 2011-06-02 at 22:58 -0400, Philip Gladstone wrote:
> Sorry for the long delay in responding. I will try these changes.

did you used this patch?
http://www.mail-archive.com/linux-uvc-devel at lists.berlios.de/msg05724.html

> However, the scoop on the other various patches is as follows:
> 
> in 2592x1944 mode, at 10fps, 4bpp for mjpg, the fix_jpeg_bandwidth makes 
> things worse with 3476 B/frame rather than the device specified 3060 
> B/frame.

It probably just filed, is it?
There is a check, if dwMaxPayloadTransferSize is bigger than max
possible it will just exit. Probably it will be good to make on sure
recalculated is not bigger.

> At 2592x1944 mode at 5fps, 2bpp for mjpg, the fix_jpeg_bandwidth ends up 
> at 1024 B/frame, which allows me to run the three cameras that I want.
> 
> At 2592x1944 mode at 5fps, 4bpp for mjpg, the fix_jpeg_bandwidth ends up 
> at 1984 B/frame, which allows me to run two cameras, but not the third.
> 
> However, these numbers are funny. The frame size for 2592x1944x4bpp is 
> 2.5 Megabytes or 20 Mbits. At 5fps, this is 100 Mbits/sec. There should 
> be ample bandwidth to support three of these streams.
> 
> To be honest, I don't understand the units of the B/frame. Can someone 
> explain it to me?

from the uvc source code:
...
bandwidth = stream->ctrl.dwMaxPayloadTransferSize;
...
uvc_trace(UVC_TRACE_VIDEO, "Device requested %u B/frame bandwidth.\n",
bandwidth);

>From this link:
http://rember-english-word.googlecode.com/svn-history/r6/trunk/USB_Video_Class_1.0a.pdf

dwMaxPayloadTransferSize:
Specifies the maximum number of bytes that the device can transmit or
receive in a single payload transfer.


> Philip
> 
> 
> 
> 
> On 07-Mar-11 5:53 AM, Alexey Fisher wrote:
> > Hi Philip,
> >
> > i probably will not solve your problem but i wont to take a look on it.
> > Can you please apply attached debug patch and send me the log.
> > this patch was made on top of fd2b6dd22743f7c96f7c6e97d49ff5f4b422e741
> >
> > Make sure you have CONFIG_DYNAMIC_DEBUG=y enabled. To start dynamic
> > debug you need do as root:
> >
> > echo "module uvcvideo +p">  /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_video_decode_end -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_video_decode_start -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_video_decode_data -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_video_decode_isoc -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_video_complete -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > echo "func uvc_v4l2_do_ioctl -p"
> >> /sys/kernel/debug/dynamic_debug/control
> > and start video with this, it will make onl?y one shot:
> > gst-launch-0.10 -v v4l2src num-buffers=1 ! jpegdec ! ffmpegcolorspace !
> > autovideosink
> >
> > Am Sonntag, den 06.03.2011, 17:30 -0500 schrieb Philip Gladstone:
> >> It turned out that my kernel had an old uvcvideo module which didn't
> >> have the right debug log messages, and so I'm in the process of
> >> upgrading to a current kernel version. So far, I've managed to render my
> >> machine unbootable [it is a little embedded linux box].
> >>
> >> Philip
> >>
> >> On 3/6/2011 6:14 AM, Laurent Pinchart wrote:
> >>> Hi Philip,
> >>>
> >>> On Sunday 20 February 2011 21:57:24 Philip Gladstone wrote:
> >>>> I attached two C910s to a small linux box, and ran into the 'Failed to
> >>>> submit URB' problem.
> >>>>
> >>>> When I look at the descriptors for this camera, I think I understand the
> >>>> problem. I'm capturing at 5 Mpixels and I'm trying two cameras.
> >>>>
> >>>>          VideoStreaming Interface Descriptor:
> >>>>            bLength                            38
> >>>>            bDescriptorType                    36
> >>>>            bDescriptorSubtype                  7 (FRAME_MJPEG)
> >>>>            bFrameIndex                        28
> >>>>            bmCapabilities                   0x01
> >>>>              Still image supported
> >>>>            wWidth                           2592
> >>>>            wHeight                          1944
> >>>>            dwMinBitRate                403107840
> >>>>            dwMaxBitRate                806215680
> >>>>            dwMaxVideoFrameBufferSize    10077696
> >>>>            dwDefaultFrameInterval        1000000
> >>>>            bFrameIntervalType                  3
> >>>>            dwFrameInterval( 0)           1000000
> >>>>            dwFrameInterval( 1)           1333333
> >>>>            dwFrameInterval( 2)           2000000
> >>>>
> >>>> The video frame size is set to 10Mb. This is surprisingly large as
> >>>> actual frames captured with MJPEG on this camera are typically 500kb or
> >>>> less. When I checked the descriptor for the uncompressed version of the
> >>>> same frame, it came back with the same value of dwMaxVideoFrameBufferSize
> >>>> (effectively 16 bits per pixel). The values for min/max bit rate are
> >>>> (correctly) calculated from the frame intervals and the buffer size.
> >>> The uvcvideo driver doesn't use the dwMaxVideoFrameBufferSize field to compute
> >>> the required bandwidth but queries the device at runtime instead.
> >>>
> >>> You can enable the UVC_TRACE_VIDEO trace flag to get the driver to print the
> >>> bandwidth requested by the device to the kernel log.
> >>>
> >>>> Typical JPEG compression gets down to 1 bit per pixel, and 2 bits is
> >>>> very unusual.
> >>>>
> >>>> What I want to know is what the impact would be of defining a new QUIRK
> >>>> that overrode the frame buffer size for compressed frames and calculated
> >>>> them at (say) 2 bits per pixel?
> >>>>
> >>>> Do other webcams get this right?
> >>> You would be surprised by how many webcams get things wrong.
> >>>
> 

-- 
Regards,
        Alexey



From pj.assis at gmail.com  Tue Jun  7 10:54:53 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Tue, 7 Jun 2011 09:54:53 +0100
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1307428534.3274.6.camel@zwerg>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
Message-ID: <BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>

Hi,

2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
> On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>> Hello,
>>
>> I'm having some trouble with a Quanta integrated webcam. ?It identifies
>> itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1. ?This is built
>> in to a Dell XPS-15 (L501X).
>>
>> The uvcvideo module works, but the video stutters and has some
>> distortions, even at low resolutions and frame rates.
>>
>> With the Camera Output set to MJPG (in guvcview) "Ignoring empty buffer ..."
>> messages occur with most glitches.

I would say the camera is not returning the full frame (or maybe empty
ones) for same reason.

>>
>> If the output is set to YV12, the errors look like:
>>
>> VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>> Error grabbing image
>> libv4l2: error converting / decoding frame data: v4l-convert: error
>> parsing JPEG header: Not a JPG file ?
>>

YV12 is a format returned by libv4l, and it's obtained by
decompressing the MJPG stream, so in fact the camera is still in MJPG
format like above.

>> With cheese, the video preview looks ok, but video capture is
>> unusable - the video stutters badly at low resolution, and the capture
>> hangs at high resolution (the program doesn't hang, but after a couple of
>> frames no more get captured).
>

Probably the same situation as above (incomplete or empty frames)


You should also increase uvc video verbosity and check dmesg for errors.

>From the looks of it I would say you are having some hardware sync
issues, did you try all possible resolutions and frame rates ?
Do these issues happen in all formats

Regards,
Paulo


From yann at minet.net  Tue Jun  7 17:56:47 2011
From: yann at minet.net (Yann Sionneau)
Date: Tue, 07 Jun 2011 17:56:47 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <4DED452C.10502@minet.net>
References: <4DE8E64B.3030009@minet.net>	<201106061942.20970.laurent.pinchart@ideasonboard.com>
	<4DED452C.10502@minet.net>
Message-ID: <4DEE4A3F.10308@minet.net>

Hi again,

here is as attached file a new patch that applies to linux 2.6.39 tree 
(linux-2.6.git, tag v2.6.39).

This patch now prints at the end of each stream :

(*) total number of PTS (taking into account each packet)
(*) total number of SCR
(*) total number of ERR
(*) number of packets without PTS (nb_missing_pts)
(*) number of packets without SCR (nb_missing_scr)

It will print as well for each packet (beware, it will hugely flood your 
syslog) :

(*) SCR
(*) diff with previous packet's SCR
(*) PTS
(*) diff with previous packet's PTS

Beware, to see the "end of stream" statistics, you have to scroll up a 
little bit, it will be somewhere in the end of the per-packet 
information flood.

Some results inline in the e-mail.

On 06/06/2011 11:22 PM, Yann Sionneau wrote:
> Le 06/06/11 19:42, Laurent Pinchart a ?crit :
>> Hi Yann,
>>
>> Thanks for the patch.
>>
>> On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
>>> Hi Laurent and the UVC list,
>>>
>>> Here is a patch [snip]
>> You should take all UVC packets into account, not just the first one for each
>> frame.
> Yes I don't know why in my head I thought only the first uvc packet
> would have a header for the frame with timestamps and such, but it makes
> no sense, each packet has its own header and the start of frame is just
> signaled by the toggling of the FID :)
>
>> the important information are
>>
>> - do all frames have a PTS timestamp in their first packet ?
> It seems so yes, at least on the two webcams I tried with the patch.
>
>> - do all non-empty packets for a frame have a PTS timestamp, and is it
>> constant through the whole frame as it should be ?
> Let's modify the patch to count the PTS and SCR of all packets instead
> of only one per frame in order to sort this out !
I tested with the Logitech HD Pro C910, all packets have a PTS.
PTS are indeed constant through the whole frame as it should be.
>> - how many SCR timestamps do we have per frame ? are they constant through the
>> whole frame or do they vary as they should ?
>>
> Same here !
With the same webcam, all packets have a SCR.
The SCR value does vary through each frame, as it should do.
The difference between the previous SCR is usually the same, except at a 
regular interval where there is a "jump" in SCR values.

for example, SCR - SCR_prev would be 7 times the same difference, and 
then it will change for just one time, and then go back to the old 
difference for 7 times etc.

>>> [snip]
> Thanks for your review and comments, will submit a new patch ASAP !
>
> Regards,
>
Regards,

-- 
Yann Sionneau

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-add-statistics-about-ERR-PTS-and-SCR-bits.patch
Type: text/x-patch
Size: 5029 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110607/60271fb0/attachment.bin>

From michal at physics.ubc.ca  Tue Jun  7 19:58:25 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Tue, 7 Jun 2011 10:58:25 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.1106071039430.6544@tristan>

On Tue, 7 Jun 2011, Paulo Assis wrote:

> Hi,
>
> 2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>> On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>>> Hello,
>>>
>>> I'm having some trouble with a Quanta integrated webcam. ?It identifies
>>> itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1. ?This is built
>>> in to a Dell XPS-15 (L501X).
>>>
>>> The uvcvideo module works, but the video stutters and has some
>>> distortions, even at low resolutions and frame rates.
>>>
>>> With the Camera Output set to MJPG (in guvcview) "Ignoring empty buffer ..."
>>> messages occur with most glitches.
>
> I would say the camera is not returning the full frame (or maybe empty
> ones) for same reason.
>
>>>
>>> If the output is set to YV12, the errors look like:
>>>
>>> VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>>> Error grabbing image
>>> libv4l2: error converting / decoding frame data: v4l-convert: error
>>> parsing JPEG header: Not a JPG file ?
>>>
>
> YV12 is a format returned by libv4l, and it's obtained by
> decompressing the MJPG stream, so in fact the camera is still in MJPG
> format like above.
>
>>> With cheese, the video preview looks ok, but video capture is
>>> unusable - the video stutters badly at low resolution, and the capture
>>> hangs at high resolution (the program doesn't hang, but after a couple of
>>> frames no more get captured).
>>
>
> Probably the same situation as above (incomplete or empty frames)
>
>
> You should also increase uvc video verbosity and check dmesg for errors.
>
> From the looks of it I would say you are having some hardware sync
> issues, did you try all possible resolutions and frame rates ?
> Do these issues happen in all formats
>
> Regards,
> Paulo
>
>
I don't think my problem is just with cheese -  there are issues with 
guvcview (and luvcview) too.

with: insmod uvcvideo.ko trace=128 (frame tracing)
dmesg says:

Jun  7 10:51:54 tristan kernel: uvcvideo: Found UVC 1.00 device Laptop_Integrated_Webcam_2HDM (0408:2fb1)
Jun  7 10:51:54 tristan kernel: uvcvideo: No streaming interface found for terminal 6.
Jun  7 10:51:54 tristan kernel: input: Laptop_Integrated_Webcam_2HDM as /devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.4/1-1.4:1.0/input/input23
Jun  7 10:51:54 tristan kernel: usbcore: registered new interface driver uvcvideo
Jun  7 10:51:54 tristan kernel: USB Video Class driver (v1.0.0)

then starting to capture frames with guvcview there are (many) messages 
like:

Jun  7 10:38:12 tristan kernel: uvcvideo: Frame complete (EOF found).
Jun  7 10:38:12 tristan kernel: uvcvideo: EOF in empty payload.

Jun  7 10:38:12 tristan kernel: uvcvideo: Dropping payload (out of sync).

Jun  7 10:46:22 tristan kernel: uvcvideo: EOF in empty payload.
Jun  7 10:46:22 tristan kernel: uvcvideo: Dropping payload (error bit set).
Jun  7 10:51:44 tristan kernel: uvcvideo: EOF in empty payload.
Jun  7 10:51:44 tristan kernel: uvcvideo: Frame complete (FID bit toggled).

There are issues in all output formats - though YUYV seems less bad than 
MJPG - but there are still some glitches. The frame rate that guvcview 
reports (in all formats) is usually (much) lower than requested eg 14 or 
15 fps when 30 is requested.

There seem to be corrupt frames at all resolutions.  At very low (176x144) 
resolution and very low frame rate it seems to be ok, but 640x480 @ 
5 fps still shows many problems.

Carl

From chandrashekharla at gmail.com  Wed Jun  8 10:07:20 2011
From: chandrashekharla at gmail.com (Chandrashekhar Lavania)
Date: Wed, 8 Jun 2011 13:37:20 +0530
Subject: [Linux-uvc-devel] uvcvideo: Failed to submit URB 0 (-28) error for
	VGA-YUV capture
Message-ID: <BANLkTimqRqFYpxFDH_XQjrQLhoaan2ngiQ@mail.gmail.com>

Hi,

I am trying to capture VGA frames in YUYV format from Logitech QuickCam
E3500.

But When I try to do this , I get the following error:

uvcvideo: Failed to submit URB 0 (-28).

Also, I put printk in the uvc_init_video_isoc() function of uvc_video.c to
get psize and size values in the following manner:

psize = le16_to_cpu(ep->desc.wMaxPacketSize);
psize = (psize & 0x07ff) * (1 + ((psize >> 11) & 3));
size = stream->ctrl.dwMaxVideoFrameSize;

printk(KERN_ALERT "SIZE = %d\n",size);
printk(KERN_ALERT "PSIZE = %d\n",psize);

When I try to capture VGA - YUV I get the following alerts:

SIZE = 614400

PSIZE = 1984

This is for single frame capture.


I tried to do the same thing for QVGA -YUV, and then I was able to capture
the image. I got the following alerts:


SIZE = 153600

PSIZE = 512


What could be causing this...

Regards,
Shekhar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110608/c09a51d9/attachment.html>

From narukajsingh at gmail.com  Wed Jun  8 14:31:59 2011
From: narukajsingh at gmail.com (JITENDRA SINGH)
Date: Wed, 8 Jun 2011 18:01:59 +0530
Subject: [Linux-uvc-devel] uvc webcam does not support 640*480 on arm9 board
Message-ID: <BANLkTikHsNjPdgB0L=W+Y-mOd_czdUd0KA@mail.gmail.com>

Hi all,

I am able to "uvccapture" 320*240 jpgs using this webcam on arm9 board, but
it fails when I try to capture 640*480 stills, it hangs while trying to
exit:

=====================================
ts7500:~/uvccapture-0.5# ./uvccapture -q60 -x640 -y480 -t5 -w -v
Using videodevice: /dev/video0
Saving images to: snap.jpg
Image size: 640x480
Taking snapshot every 5 seconds
Taking images using mmap
Resetting camera settings
ioctl querycontrol error 22
Camera brightness level is -30
Camera contrast level is 36
Camera saturation level is 60
ioctl querycontrol error 22
Camera gain level is -1
Exiting...
=====================================

Capturing 320*240
=====================================
ts7500:~/uvccapture-0.5# ./uvccapture -q60 -x320 -y240 -t5 -w -v
Using videodevice: /dev/video0
Saving images to: snap.jpg
Image size: 320x240
Taking snapshot every 5 seconds
Taking images using mmap
Resetting camera settings
ioctl querycontrol error 22
Camera brightness level is -30
Camera contrast level is 36
Camera saturation level is 60
ioctl querycontrol error 22
Camera gain level is -1
Saving image to: snap.jpg
Exiting...
ts7500:~/uvccapture-0.5#
=====================================

dmesg error when uvccapture didnt work:
[ 2650.790000] uvcvideo: Failed to resubmit video URB (-45).
[ 2650.790000] uvcvideo: Failed to resubmit video URB (-45).
[ 2650.790000] uvcvideo: Failed to resubmit video URB (-45).
[ 2650.790000] uvcvideo: Failed to resubmit video URB (-45).

The webcam is attached to high speed USB 2.0 port on the board:
ts7500:~# dmesg|tail
[   36.370000] star_nic_enable: starting patch check.
[  118.140000] usb 1-1: new high speed USB device using str8100-ehci and
address 3
[  118.330000] usb 1-1: configuration #1 chosen from 1 choice
[  120.750000] Linux video capture interface: v2.00
[  122.180000] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (0c45:62f1)
[  122.260000] input: USB 2.0 Camera as /class/input/input0
[  122.270000] usbcore: registered new interface driver uvcvideo
[  122.270000] USB Video Class driver (v0.1.0)
[  126.800000] 3:3:1: cannot get freq at ep 0x84
[  126.810000] usbcore: registered new interface driver snd-usb-audio


On my desktop Ubuntu10.10 luvcview shows:
=====================================
$luvcview -L
luvcview 0.2.6

SDL information:
  Video driver: x11
  A window manager is available
Device information:
  Device path:  /dev/video0
/dev/video0 does not support read i/o
{ pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
{ discrete: width = 640, height = 480 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 352, height = 288 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 320, height = 240 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 176, height = 144 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 160, height = 120 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
=====================================

lsusb -v -d 0c45:62f1 on my desktop
=====================================
Bus 001 Device 003: ID 0c45:62f1 Microdia
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass          239 Miscellaneous Device
  bDeviceSubClass         2 ?
  bDeviceProtocol         1 Interface Association
  bMaxPacketSize0        64
  idVendor           0x0c45 Microdia
  idProduct          0x62f1
  bcdDevice            1.00
  iManufacturer           2 Sonix Technology Co., Ltd.
  iProduct                1 USB 2.0 Camera
  iSerial                 0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength          737
    bNumInterfaces          4
    bConfigurationValue     1
    iConfiguration          0
    bmAttributes         0x80
      (Bus Powered)
    MaxPower              500mA
    Interface Association:
      bLength                 8
      bDescriptorType        11
      bFirstInterface         0
      bInterfaceCount         2
      bFunctionClass         14 Video
      bFunctionSubClass       3 Video Interface Collection
      bFunctionProtocol       0
      iFunction               5 USB Camera
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      1 Video Control
      bInterfaceProtocol      0
      iInterface              5 USB Camera
      VideoControl Interface Descriptor:
        bLength                13
        bDescriptorType        36
        bDescriptorSubtype      1 (HEADER)
        bcdUVC               1.00
        wTotalLength          103
        dwClockFrequency       15.000000MHz
        bInCollection           1
        baInterfaceNr( 0)       1
      VideoControl Interface Descriptor:
        bLength                 9
        bDescriptorType        36
        bDescriptorSubtype      3 (OUTPUT_TERMINAL)
        bTerminalID             2
        wTerminalType      0x0101 USB Streaming
        bAssocTerminal          0
        bSourceID               5
        iTerminal               0
      VideoControl Interface Descriptor:
        bLength                26
        bDescriptorType        36
        bDescriptorSubtype      6 (EXTENSION_UNIT)
        bUnitID                 4
        guidExtensionCode         {7033f028-1163-2e4a-ba2c-6890eb334016}
        bNumControl             8
        bNrPins                 1
        baSourceID( 0)          3
        bControlSize            1
        bmControls( 0)       0x0f
        iExtension              0
      VideoControl Interface Descriptor:
        bLength                26
        bDescriptorType        36
        bDescriptorSubtype      6 (EXTENSION_UNIT)
        bUnitID                 5
        guidExtensionCode         {3fae1228-d7bc-114e-a357-6f1edef7d61d}
        bNumControl             8
        bNrPins                 1
        baSourceID( 0)          4
        bControlSize            1
        bmControls( 0)       0xff
        iExtension              0
      VideoControl Interface Descriptor:
        bLength                18
        bDescriptorType        36
        bDescriptorSubtype      2 (INPUT_TERMINAL)
        bTerminalID             1
        wTerminalType      0x0201 Camera Sensor
        bAssocTerminal          0
        iTerminal               0
        wObjectiveFocalLengthMin      0
        wObjectiveFocalLengthMax      0
        wOcularFocalLength            0
        bControlSize                  3
        bmControls           0x00000000
      VideoControl Interface Descriptor:
        bLength                11
        bDescriptorType        36
        bDescriptorSubtype      5 (PROCESSING_UNIT)
      Warning: Descriptor too short
        bUnitID                 3
        bSourceID               1
        wMaxMultiplier          0
        bControlSize            2
        bmControls     0x0000053f
          Brightness
          Contrast
          Hue
          Saturation
          Sharpness
          Gamma
          Backlight Compensation
          Power Line Frequency
        iProcessing             0
        bmVideoStandards     0x 0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0010  1x 16 bytes
        bInterval               6
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      VideoStreaming Interface Descriptor:
        bLength                            14
        bDescriptorType                    36
        bDescriptorSubtype                  1 (INPUT_HEADER)
        bNumFormats                        1
        wTotalLength                      363
        bEndPointAddress                  129
        bmInfo                              0
        bTerminalLink                       2
        bStillCaptureMethod                 2
        bTriggerSupport                     1
        bTriggerUsage                       1
        bControlSize                        1
        bmaControls( 0)                    27
      VideoStreaming Interface Descriptor:
        bLength                            27
        bDescriptorType                    36
        bDescriptorSubtype                  4 (FORMAT_UNCOMPRESSED)
        bFormatIndex                        1
        bNumFrameDescriptors                5
        guidFormat
{59555932-0000-1000-8000-00aa00389b71}
        bBitsPerPixel                      16
        bDefaultFrameIndex                  1
        bAspectRatioX                       0
        bAspectRatioY                       0
        bmInterlaceFlags                 0x00
          Interlaced stream or variable: No
          Fields per frame: 1 fields
          Field 1 first: No
          Field pattern: Field 1 only
          bCopyProtect                      0
      VideoStreaming Interface Descriptor:
        bLength                            58
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         1
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            640
        wHeight                           480
        dwMinBitRate                 24576000
        dwMaxBitRate                294912000
        dwMaxVideoFrameBufferSize      614400
        dwDefaultFrameInterval         166666
        bFrameIntervalType                  8
        dwFrameInterval( 0)            166666
        dwFrameInterval( 1)            200000
        dwFrameInterval( 2)            250000
        dwFrameInterval( 3)            333333
        dwFrameInterval( 4)            500000
        dwFrameInterval( 5)            666666
        dwFrameInterval( 6)           1000000
        dwFrameInterval( 7)           2000000
      VideoStreaming Interface Descriptor:
        bLength                            58
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         2
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            352
        wHeight                           288
        dwMinBitRate                  8110080
        dwMaxBitRate                 97320960
        dwMaxVideoFrameBufferSize      202752
        dwDefaultFrameInterval         166666
        bFrameIntervalType                  8
        dwFrameInterval( 0)            166666
        dwFrameInterval( 1)            200000
        dwFrameInterval( 2)            250000
        dwFrameInterval( 3)            333333
        dwFrameInterval( 4)            500000
        dwFrameInterval( 5)            666666
        dwFrameInterval( 6)           1000000
        dwFrameInterval( 7)           2000000
      VideoStreaming Interface Descriptor:
        bLength                            58
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         3
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            320
        wHeight                           240
        dwMinBitRate                  6144000
        dwMaxBitRate                 73728000
        dwMaxVideoFrameBufferSize      153600
        dwDefaultFrameInterval         166666
        bFrameIntervalType                  8
        dwFrameInterval( 0)            166666
        dwFrameInterval( 1)            200000
        dwFrameInterval( 2)            250000
        dwFrameInterval( 3)            333333
        dwFrameInterval( 4)            500000
        dwFrameInterval( 5)            666666
        dwFrameInterval( 6)           1000000
        dwFrameInterval( 7)           2000000
      VideoStreaming Interface Descriptor:
        bLength                            58
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         4
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            176
        wHeight                           144
        dwMinBitRate                  2027520
        dwMaxBitRate                 24330240
        dwMaxVideoFrameBufferSize       50688
        dwDefaultFrameInterval         166666
        bFrameIntervalType                  8
        dwFrameInterval( 0)            166666
        dwFrameInterval( 1)            200000
        dwFrameInterval( 2)            250000
        dwFrameInterval( 3)            333333
        dwFrameInterval( 4)            500000
        dwFrameInterval( 5)            666666
        dwFrameInterval( 6)           1000000
        dwFrameInterval( 7)           2000000
      VideoStreaming Interface Descriptor:
        bLength                            58
        bDescriptorType                    36
        bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
        bFrameIndex                         5
        bmCapabilities                   0x00
          Still image unsupported
        wWidth                            160
        wHeight                           120
        dwMinBitRate                  1536000
        dwMaxBitRate                 18432000
        dwMaxVideoFrameBufferSize       38400
        dwDefaultFrameInterval         166666
        bFrameIntervalType                  8
        dwFrameInterval( 0)            166666
        dwFrameInterval( 1)            200000
        dwFrameInterval( 2)            250000
        dwFrameInterval( 3)            333333
        dwFrameInterval( 4)            500000
        dwFrameInterval( 5)            666666
        dwFrameInterval( 6)           1000000
        dwFrameInterval( 7)           2000000
      VideoStreaming Interface Descriptor:
        bLength                            26
        bDescriptorType                    36
        bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
        bEndpointAddress                    0
        bNumImageSizePatterns               5
        wWidth( 0)                        640
        wHeight( 0)                       480
        wWidth( 1)                        352
        wHeight( 1)                       288
        wWidth( 2)                        320
        wHeight( 2)                       240
        wWidth( 3)                        176
        wHeight( 3)                       144
        wWidth( 4)                        160
        wHeight( 4)                       120
        bNumCompressionPatterns             5
      VideoStreaming Interface Descriptor:
        bLength                             6
        bDescriptorType                    36
        bDescriptorSubtype                 13 (COLORFORMAT)
        bColorPrimaries                     1 (BT.709,sRGB)
bTransferCharacteristics            1 (BT.709)
        bMatrixCoefficients                 4 (SMPTE 170M (BT.601))
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       1
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x0080  1x 128 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       2
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x0100  1x 256 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       3
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x0320  1x 800 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       4
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x0b20  2x 800 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       5
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x1320  3x 800 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       6
      bNumEndpoints           1
      bInterfaceClass        14 Video
      bInterfaceSubClass      2 Video Streaming
      bInterfaceProtocol      0
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
       wMaxPacketSize     0x1400  3x 1024 bytes
        bInterval               1
    Interface Association:
      bLength                 8
      bDescriptorType        11
      bFirstInterface         2
      bInterfaceCount         2
      bFunctionClass          1 Audio
      bFunctionSubClass       0
      bFunctionProtocol       0
      iFunction               4 USB Microphone
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        2
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass         1 Audio
      bInterfaceSubClass      1 Control Device
      bInterfaceProtocol      0
      iInterface              4 USB Microphone
      AudioControl Interface Descriptor:
        bLength                 9
        bDescriptorType        36
        bDescriptorSubtype      1 (HEADER)
        bcdADC               1.00
        wTotalLength           41
        bInCollection           1
        baInterfaceNr( 0)       3
      AudioControl Interface Descriptor:
        bLength                12
        bDescriptorType        36
        bDescriptorSubtype      2 (INPUT_TERMINAL)
        bTerminalID             1
        wTerminalType      0x0201 Microphone
        bAssocTerminal          0
        bNrChannels             1
        wChannelConfig     0x0000
        iChannelNames           0
        iTerminal               0
      AudioControl Interface Descriptor:
        bLength                11
        bDescriptorType        36
        bDescriptorSubtype      6 (FEATURE_UNIT)
        bUnitID                 2
        bSourceID               1
        bControlSize            2
        bmaControls( 0)      0x01
        bmaControls( 0)      0x00
          Mute
        bmaControls( 1)      0x02
        bmaControls( 1)      0x00
          Volume
        iFeature                0
      AudioControl Interface Descriptor:
        bLength                 9
        bDescriptorType        36
        bDescriptorSubtype      3 (OUTPUT_TERMINAL)
        bTerminalID             3
        wTerminalType      0x0101 USB Streaming
        bAssocTerminal          0
        bSourceID               2
        iTerminal               0
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        3
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass         1 Audio
      bInterfaceSubClass      2 Streaming
      bInterfaceProtocol      0
      iInterface              0
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        3
      bAlternateSetting       1
      bNumEndpoints           1
      bInterfaceClass         1 Audio
      bInterfaceSubClass      2 Streaming
      bInterfaceProtocol      0
      iInterface              0
      AudioStreaming Interface Descriptor:
        bLength                 7
        bDescriptorType        36
        bDescriptorSubtype      1 (AS_GENERAL)
        bTerminalLink           3
        bDelay                  1 frames
        wFormatTag              1 PCM
      AudioStreaming Interface Descriptor:
        bLength                29
        bDescriptorType        36
        bDescriptorSubtype      2 (FORMAT_TYPE)
        bFormatType             1 (FORMAT_TYPE_I)
        bNrChannels             1
        bSubframeSize           2
        bBitResolution         16
        bSamFreqType            7 Discrete
        tSamFreq[ 0]         8000
        tSamFreq[ 1]        11025
        tSamFreq[ 2]        16000
        tSamFreq[ 3]        22050
        tSamFreq[ 4]        24000
        tSamFreq[ 5]        44100
        tSamFreq[ 6]        48000
      Endpoint Descriptor:
        bLength                 9
        bDescriptorType         5
        bEndpointAddress     0x84  EP 4 IN
        bmAttributes            5
          Transfer Type            Isochronous
          Synch Type               Asynchronous
          Usage Type               Data
        wMaxPacketSize     0x0190  1x 400 bytes
        bInterval               4
        bRefresh                0
        bSynchAddress           0
        AudioControl Endpoint Descriptor:
          bLength                 7
          bDescriptorType        37
          bDescriptorSubtype      1 (EP_GENERAL)
          bmAttributes         0x01
            Sampling Frequency
          bLockDelayUnits         0 Undefined
          wLockDelay              0 Undefined
Device Qualifier (for other device speed):
  bLength                10
  bDescriptorType         6
  bcdUSB               2.00
  bDeviceClass          239 Miscellaneous Device
  bDeviceSubClass         2 ?
  bDeviceProtocol         1 Interface Association
  bMaxPacketSize0        64
  bNumConfigurations      1
Device Status:     0x0002
  (Bus Powered)
  Remote Wakeup Enabled
===========================================================================================

P.S.: Its able to capture 640*480 on pc.

Could anybody provide some insights, I am not able to find any info except
high speed USB port is required, that I have..

Thanks in adv,
naruka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110608/69904421/attachment.html>

From jpiszcz at lucidpixels.com  Wed Jun  8 23:34:40 2011
From: jpiszcz at lucidpixels.com (Justin Piszcz)
Date: Wed, 8 Jun 2011 17:34:40 -0400 (EDT)
Subject: [Linux-uvc-devel] Multiple webcams,
	error: uvcvideo: Failed to submit URB 0 (-28)
Message-ID: <alpine.DEB.2.02.1106081718580.3462@p34.internal.lan>

Hi,

Is there anyway around this?
When using 5 different webcams, no problems.
When using 4-5 webcams of the same type, only 2 of 5 work.

[  832.218440] uvcvideo: Failed to submit URB 0 (-28).

I also tried with uvcvideo quirks=128.

Why is this?

Anyhow, I found a workaround:

[ 1183.054874] uvcvideo: Probing generic UVC device 6
[ 1183.054908] uvcvideo: Found format MJPEG.
[ 1183.054916] uvcvideo: - 160x120 (30.0 fps)
[ 1183.054922] uvcvideo: - 176x144 (30.0 fps)
[ 1183.054927] uvcvideo: - 320x240 (15.0 fps)
[ 1183.054933] uvcvideo: - 352x288 (15.0 fps)
[ 1183.054938] uvcvideo: - 640x480 (15.0 fps)
[ 1183.054943] uvcvideo: - 800x600 (15.0 fps)
[ 1183.054949] uvcvideo: - 960x720 (10.0 fps)
[ 1183.054955] uvcvideo: Found format YUV 4:2:2 (YUYV).
[ 1183.054961] uvcvideo: - 160x120 (30.0 fps)
[ 1183.054966] uvcvideo: - 176x144 (30.0 fps)
[ 1183.054972] uvcvideo: - 320x240 (15.0 fps)
[ 1183.054978] uvcvideo: - 352x288 (15.0 fps)
[ 1183.054984] uvcvideo: - 640x480 (15.0 fps)
[ 1183.054989] uvcvideo: - 800x600 (15.0 fps)
[ 1183.054994] uvcvideo: - 960x720 (10.0 fps)
[ 1183.055000] uvcvideo: - 1600x1200 (5.0 fps)

I can use MAX: 2 devices of the same type with YUV 4:2:2.
I can use MAX: at least ?? more devices of the same type with MJPEG.

Now I see some weird banding or video artifacts, digging further 
(w/MJPEG).
Why is there a problem using > 2 of the same device with YUV 4:2:2?

Justin.



From whitis at freelabs.com  Thu Jun  9 08:04:56 2011
From: whitis at freelabs.com (Mark Whitis)
Date: Thu, 9 Jun 2011 02:04:56 -0400 (EDT)
Subject: [Linux-uvc-devel] Frame Rate/Corruption C910, plus 4 others
Message-ID: <alpine.DEB.2.02.1106090203420.31839@cervantes>

Low frame rate problems have been seen with at least 5 UVC cameras on 
multiple computers.   It isn't low light, USB bandwidth, etc.   In the 
past, I have assumed the cameras were being dishonest about their 
performance, now I am pretty sure it is the UVC driver's fault.   On a 
newer, faster, computer performance has even gone down on some cameras.

I just got a new Logitech C910 UVC webcam.   This camera has a 5MP 
(2592x1944) sensor and can do 1920x1080/30P, 720x1280/30P, and 
640x480/60P.  It works right out of the box with guvcview except for:
   - The crippling frame rate problems described here
   - uvcvideo doesn't support still picture capture (this is a real 5MP
     bayer resolution webcam).
   - Exposure mode can be set to Manual or Aperature Priority.  Auto or
     Shutter priority produce an error.
   - Video in MJPG mode is badly corrupted when recording (any program) or 
when
     displayed in some programs.
Other than that, auto/manual exposure, digital zoom, digital pan/tilt 
(zoom first), auto/manual focus, etc. seem to work.   Sound not tested. 
It does support still image.
However, streaming to disk or using a number of other applications fails 
badly:
Tests were done on this camera, except where otherwise noted.

As we will see below, mplayer is the only one that admits to dropping 3/4 
of the video frames at 60fps but the other programs (or the driver) are 
doing it.



Because of the large number of video modes, less interesting modes have 
been deleted and only 480P, 720P, 1080P, and full sensor resolution shown 
in YUYV and MJPG:
Init. UVC Camera (046d:0821) (location: usb-0000:00:13.2-3)
{ pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
{ discrete: width = 640, height = 480 }
 	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
1/5,
{ discrete: width = 1280, height = 720 }
 	Time interval between frame: 1/10, 2/15, 1/5,
{ discrete: width = 1920, height = 1080 }
 	Time interval between frame: 1/2,
{ discrete: width = 2592, height = 1944 }
 	Time interval between frame: 1/2,
{ pixelformat = 'MJPG', description = 'MJPEG' }
{ discrete: width = 640, height = 480 }
 	Time interval between frame: 1/60, 1/30, 1/24, 1/20, 1/15, 1/10, 
2/15, 1/5,
{ discrete: width = 1280, height = 720 }
 	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
1/5,
{ discrete: width = 1920, height = 1080 }
 	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
1/5,
{ discrete: width = 2592, height = 1944 }
 	Time interval between frame: 1/10, 2/15, 1/5,
{ pixelformat = 'RGB3', description = 'RGB3' }
...
{ pixelformat = 'BGR3', description = 'BGR3' }
...

vid:046d
pid:0821
driver:uvcvideo
Adding control for Pan (relative)
UVCIOC_CTRL_ADD - Error: File exists
checking format: 1196444237
VIDIOC_G_COMP:: Invalid argument
    compression control not supported
fps is set to 1/30
drawing controls

fps is set to 1/30

guvcview gets max 12-14fps in any video mode down to 160x120.
Yes, I am using MJPG not YUYV.   No the camera exposure should not be 
knocking down the frame rate as this occurs even when pointed at a light. 
No the CPU isn't overloaded; Phenom II 1060T X6 and none of the cores are 
heavily loaded.   No, I am not plugged into a 12Mbps port.  No, the USB 
bus isn't loaded (unplugged another webcam). luvcview does a little 
better, getting 30fps at 160x120.    But if you run guvcview as root, now 
all of a sudden it can run 30fps up to 1920x1080.   This continues when 
you switch back to a normal user.    Until it breaks.   Which happened 
when I tried to read full sensor resolution.   After that, I was stuck at 
<=15fps in all modes as root and ordinary user.   Removing both copies of 
.guvcviewrc didn't help.    Unpluging the camera doesn't fix it. 
Unplugging the camera and rmmoding uvcvideo (which takes videodev with it) 
and replugging the camera didn't fix it.   Plugging into USB 3.0 
superspeed port didn't help (not that the camera supports superspeed, just 
trying to change the USB controller).  "shutdown -h now" didn't fix it. 
Sound is disabled.

At one point during the brief time that it was working as root, I got 
58fps 640x480 and it did not slow down even when I lowered frame rate to 
30fps.   Don't know if it actually had anything to do with being root. 
It did work just long enough to indicate that the camera can deliver on 
its promised specifications.

It does appear guvcview frame rate display is somewhat unreliable.   I get 
different results if I turn it off and on, and they vary depending on how 
long it was off, like the title bar only gets updated once.   But on 
different cameras that do slow the frame rate in low light, the title bar 
fps is updated when I cover the lens.    The changing numbers when turning 
off/on the title bar fps readout may reflect resetting the boxcar 
averaging.  The low numbers do seem to reflect reality.  When I record 
files using various programs, I only get 25fps according to ffprobe.


Bad video looks like typically less than half of frame (varies how much 
frame to frame) with some errors of 1/4 to 1/2 width of frame in the 
section that is displayed.   Like there is a race condition between 
grabbing the video and playback or one of the errors encountered is bad 
enough to kill the rest of the frame.   I have played back with "mplayer 
-vo x11" to disable any hardware accelleration on my video card and the 
results are the same.


- Cheese - works but very limited
- guvcview record video - you get less than half a video frame and other 
errors.
- ffmpeg -f video4linux2 -s 640x480 -r 60 -vcodec mjpeg -i /dev/video0 -r 
60 -vcodec copy /tmp/test1.mjpeg
   You get the same unusable video as guvcview
   These errors reported before recording starts, then none during 
recording.
[mjpeg @ 0x1a0c900]mjpeg_decode_dc: bad vlc: 0:0 (0x1a297c0)
[mjpeg @ 0x1a0c900]error dc
[mjpeg @ 0x1a0c900]error y=2 x=11
[video4linux2 @ 0x1a0b660]Estimating duration from bitrate, this may be 
inaccurate
   then playing back recorded stream with ffplay gives the
[mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
[mjpeg @ 0xf95850]error dc
[mjpeg @ 0xf95850]error y=1 x=21
[mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)   0B f=0/0
[mjpeg @ 0xf95850]error dc
[mjpeg @ 0xf95850]error y=2 x=9
[mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)f=0/1
[mjpeg @ 0xf95850]error dc
[mjpeg @ 0xf95850]error y=2 x=9
[mjpeg @ 0xf95850]error count: 64
[mjpeg @ 0xf95850]error y=0 x=30
[mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
[mjpeg @ 0xf95850]error dc
[mjpeg @ 0xf95850]error y=3 x=21
The bad vlc lines originate from libavcodec/mjpegdec.c


- vlc
   vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG 
--sout=file/ogg:/tmp/test3.mjp
   vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
   you get the same unusable video (<1/2frame) whether you are playing or 
recording.   No errors reported on record.  When simply watching cam, 
looks like this:
[0x9ebdb0] signals interface error: signal 17 overriden (0x7f41629c9450)
[0x9ebdb0] signals interface error:  /usr/lib/libQtCore.so.4(?)[(nil)]
error dc
error y=0 x=29
error dc
error y=6 x=1
error dc
error y=6 x=1
error dc
error y=1 x=8
    vlc does display the image ok if you use YUYV instead of MJPG but then 
you are severly limited in resolution/frame rate.
- mplayer
time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=60
v4l2: 159 frames successfully processed, 475 frames dropped.
real	0m10.939s
I.E. about 58fps from camera but 14.5fps after frames dropped.
time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=30
v4l2: 149 frames successfully processed, 144 frames dropped.
real	0m10.101s
I.E. about 29fps from camera but about 14.75fps after frames dropped
Setup time may affect results slightly.
Note that if you request more frames than camera supports, it will report 
more frames dropped.



- luvcview -s 640x480 -r 60 -f MJPG &

   prints "find DRI" repeatedly
   reports 14, 16, and 20fps on subsequent runs when camera set to 60.
   title bar updated at least twice as it initially reports 0.0 fps.

  luvcview -s 640x480 -r 60 -f MJPG -C -o /tmp/test4.avi &
  xine, mplayer, and vlc are unable to read the file.

Using read method instead of mmap doesn't seem to make a difference, tried 
with various programs.

Same problem on netbook running ubuntu 9.04.

It may be a bug where uvcvideo gives you the next frame received after you 
request a frame instead of giving you the next frame stored in the queue.

No uvcvideo syslog messages

Other UVC cameras:
   - 230X USB microscope UVC eb1a:1760 (real 1.3MP)
    v4l2: 132 frames successfully processed, 199 frames dropped.   real 
12.252s
    i.e. 10.77fps out of 27fps.
    { discrete: width = 640, height = 480 }
 	Time interval between frame: 1/30,
    looking at video monitor or overhead light.  guvcview says 17fps but 
will drop to 3.5fps in low light when fps reported set to 30.
     http://www.freelabs.com/~whitis/reviews/230X_USB_Microscope/
     On a previous computer I was able to get 27 out of 30fps at 640x480
     and 7fps out of 15fps at 1280x1024 in bright light.
   - deal extreme sku #25948 $6.40 camera 18ec:3299 Arkmicro Technologies 
Inc.  (0.3MP) 
http://www.dealextreme.com/p/compact-usb-pc-webcam-300k-pixel-25948
     { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
     { discrete: width = 640, height = 480 }
 	Time interval between frame: 1/30, 1/15, 1/10, 1/5,
     ...
     guvcview reports 20fps looking at overhead light
     v4l2: 245 frames successfully processed, 74 frames dropped.  real 
0m10.706s
     i.e. 22.88fps out of 29.79fps
     pressing snapshot button changes color instead, cycling between 
different colors

  - 0c45:62c0 Microdia Sonix USB 2.0 Camera (0.3MP)
   { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
    {   discrete: width = 640, height = 480 }
 	Time interval between frame: 1/30, 1/20, 1/15, 1/10, 1/5,
    ...
    guvcview reports 21.5fps looking at light, 9fps lens blocked
    v4l2: 311 frames successfully processed, 24 frames dropped. real 
0m11.514s
    i.e. 27fps out of 29fps
    ebay cubeternet USB 2 WEBCAM Camera 5M, Mic, 6 Infrared LED PC/Mac UVC
    claimed 1.3MP sensor, it was only 0.3MP.


  - Built-in netbook camera 064E:A102 Suyin Corp
    Different computer: Acer Aspire One 532h-2588 netbook
     { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
     { discrete: width = 640, height = 480 }
 	Time interval between frame: 1/30, 1/25, 1/20, 1/15, 1/10, 1/5,
     (hand typed)
     ...
     guvcview reports 7.00fps looking at overhead light/7.00fps lens 
covered
     ditto for luvcview.

   - Logitech quickcam fusion.   Now broken, but I recall similar results a 
few years ago.   Other cameras were tested now.




Ubuntu 11.04
Linux cervantes 2.6.38-8-generic #42-Ubuntu SMP Mon Apr 11 03:31:24 UTC 
2011 x86_64 x86_64 x86_64 GNU/Linux
AMD Phenom(tm) II X6 1090T Processor
ASUS Crosshair IV Formula
Radeon HD 6950
luvcview 0.2.6
guvcview 1.4.1
Cheese 2.32.0
FFmpeg version 0.6.2-4:0.6.2-1ubuntu1
VLC media player 1.1.9 The Luggage (revision exported)
MPlayer 1.0rc4-4.5.2 (C) 2000-2010 MPlayer Team
This is xine (X11 gui) - a free video player v0.99.6.
ii  libavcodec-extra-52                   4:0.6.2-1ubuntu2 
Libav codec library
rc  libavcodec52                          4:0.6.2-1ubuntu1 
Libav codec library
ii  libv4l-0                              0.8.3-1 
Collection of video4linux support libraries
ii  libgstreamer0.10-0                    0.10.32-3ubuntu3 
Core GStreamer libraries and elements
My video monitors are running at: 60hz (DVI), 60.3hz (VGA over 
DisplayPort), 60hz (DVI).   ATI proprietary driver 11-5.


lsusb -v -d 046d:0821 is 1770 lines, so I won't include it.   The guvcview 
exceprts include some of the more pertinent details.  Someone else has 
posted the lsusb output here for same model camera: 
http://pastebin.ca/raw/1967260

Wireshark:
guvcview -s 640x480 -r 30 -f YUYV
used YUYV since it is hard to infer info about number of frames from 
compressed video.
guvcview reports 16fps
Over 10 seconds, with guvcview already running:
125Mbit/second (all traffic)
 	640*480*2*8bits*30 = 147.456 megabits
 	640*480*2*8bits*16 = 78.6432 megabits
2629 packets of size>=5120bytes, typically 62016
This indicates less than 30 frames actually making it onto the wire in 
this mode or data is being lost within frames.

guvcview -s 1920x1080 -r 30 -f MJPG
13.50fps
125MBit/second over 10.941 seconds
2736 big packets, typically 62016 bytes from camera to host   Same number 
of  small (320-639) packets, typically 576 bytes host to camera.   4 
smaller packets (40-159 bytes).

Oddly, the highest MaxBit rate on this camera is 995328000 which exceeds 
the capacity of USB High Speed.   That is for 1920*1080 30fps MJPEG and is 
actually the uncompressed bitrate.  The bitrate for that resolution 
FRAME_UNCOMPRESSED is given as 165888000 which is for 2fps.   Most of the 
tests were done at 640x480 compressed or uncompressed and adequate 
bandwidth should be available.



  lsusb -t
/:  Bus 08.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M
/:  Bus 07.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/4p, 12M
/:  Bus 06.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/2p, 12M
/:  Bus 05.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
/:  Bus 04.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
     |__ Port 3: Dev 3, If 0, Class=HID, Driver=usbhid, 1.5M
     |__ Port 3: Dev 3, If 1, Class=HID, Driver=usbhid, 1.5M
     |__ Port 4: Dev 4, If 0, Class=HID, Driver=usbhid, 1.5M
/:  Bus 03.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/4p, 480M
     |__ Port 3: Dev 2, If 0, Class=stor., Driver=usb-storage, 480M
/:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
     |__ Port 3: Dev 13, If 0, Class=audio, Driver=snd-usb-audio, 480M
     |__ Port 3: Dev 13, If 1, Class=audio, Driver=snd-usb-audio, 480M
     |__ Port 3: Dev 13, If 2, Class='bInterfaceClass 0x0e not yet 
handled', Driver=uvcvideo, 480M
     |__ Port 3: Dev 13, If 3, Class='bInterfaceClass 0x0e not yet 
handled', Driver=uvcvideo, 480M
/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M

Windows users have reported getting 30fps.
http://forums.quickcamteam.net/showthread.php?tid=1345&page=2

Sometimes I get a little more than 15fps, for no apparent reason.  For 
example, now guvcview reports 18.00fps at 640x480/30P-MJPG and when I tell 
guvcview to capture video, it gives 24.18fps:
  Duration: 00:00:05.54, start: 0.000000, bitrate: 16494 kb/s
     Stream #0.0: Video: mjpeg, yuvj422p, 640x480, 24.18 tbr, 24.18 tbn, 
24.18 tbc
http://ffmpeg-users.933282.n4.nabble.com/What-does-the-output-of-ffmpeg-mean-tbr-tbn-tbc-etc-td941538.html
The video is corrupted.



From narukajsingh at gmail.com  Thu Jun  9 14:45:13 2011
From: narukajsingh at gmail.com (JITENDRA SINGH)
Date: Thu, 9 Jun 2011 18:15:13 +0530
Subject: [Linux-uvc-devel] luvcview does not record video in avi
Message-ID: <BANLkTiktwzs8fsuMzhGmM54Wx6ExdFboyQ@mail.gmail.com>

Hi all,

I am trying to save video(its ok without audio) via luvcvideo, but I cant
see any .avi file generated, though it shows "avi recording
started/stopped".
I am pressing p/clicking record button to record:

$sudo luvcview -d /dev/video0 -f yuv -s 176x144 -i 3 -o ./vid.avi
luvcview 0.2.6

SDL information:
Video driver: x11
A window manager is available
Device information:
Device path: /dev/video0
Stream settings:
Frame format: YUYV
Frame size: 176x144
Frame rate: 5 fps (requested frame rate 3 fps is not supported by device)
avi recording started
frame rate: 5.01253
avi recording stopped (4s)
avi recording started
frame rate: 4.98753
avi recording stopped (4s)
Cleanup done. Exiting ...

Does anybody has a clue, I found no info anywhere about such problem.
PS: luvcview is able to capture still image, raw frames as well.

$luvcview -L
luvcview 0.2.6

SDL information:
  Video driver: x11
  A window manager is available
Device information:
  Device path:  /dev/video0
/dev/video0 does not support read i/o
{ pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
{ discrete: width = 640, height = 480 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 352, height = 288 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 320, height = 240 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 176, height = 144 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,
{ discrete: width = 160, height = 120 }
    Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
1/5,


Thanks in adv,
Naruka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110609/d3289bf3/attachment.html>

From narukajsingh at gmail.com  Thu Jun  9 15:50:08 2011
From: narukajsingh at gmail.com (JITENDRA SINGH)
Date: Thu, 9 Jun 2011 19:20:08 +0530
Subject: [Linux-uvc-devel] luvcview does not record video in avi
In-Reply-To: <BANLkTiktwzs8fsuMzhGmM54Wx6ExdFboyQ@mail.gmail.com>
References: <BANLkTiktwzs8fsuMzhGmM54Wx6ExdFboyQ@mail.gmail.com>
Message-ID: <BANLkTimfHBd+KWV_uJkk9XOOBLwwCjp0BQ@mail.gmail.com>

I think I see the problem in luvcview code, avi file is not initialized for
V4L2_PIX_FMT_YUYV, its is initialized only for MJPG fmt.

./v4l2uvc.c:650:            vd->avifile =
AVI_open_output_file(vd->avifilename);

Now all I want to know is, does luvcview doesnt support recording of avi
file from YUV frames ?
Any suggestions, what I can do for that support ?

Any help will be gr8!!

Thanks,
Naruka

On Thu, Jun 9, 2011 at 6:15 PM, JITENDRA SINGH <narukajsingh at gmail.com>wrote:

> Hi all,
>
> I am trying to save video(its ok without audio) via luvcvideo, but I cant
> see any .avi file generated, though it shows "avi recording
> started/stopped".
> I am pressing p/clicking record button to record:
>
> $sudo luvcview -d /dev/video0 -f yuv -s 176x144 -i 3 -o ./vid.avi
> luvcview 0.2.6
>
> SDL information:
> Video driver: x11
> A window manager is available
> Device information:
> Device path: /dev/video0
> Stream settings:
> Frame format: YUYV
> Frame size: 176x144
> Frame rate: 5 fps (requested frame rate 3 fps is not supported by device)
> avi recording started
> frame rate: 5.01253
> avi recording stopped (4s)
> avi recording started
> frame rate: 4.98753
> avi recording stopped (4s)
> Cleanup done. Exiting ...
>
> Does anybody has a clue, I found no info anywhere about such problem.
> PS: luvcview is able to capture still image, raw frames as well.
>
> $luvcview -L
> luvcview 0.2.6
>
> SDL information:
>   Video driver: x11
>   A window manager is available
> Device information:
>   Device path:  /dev/video0
> /dev/video0 does not support read i/o
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
>     Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
> 1/5,
> { discrete: width = 352, height = 288 }
>     Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
> 1/5,
> { discrete: width = 320, height = 240 }
>     Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
> 1/5,
> { discrete: width = 176, height = 144 }
>     Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
> 1/5,
> { discrete: width = 160, height = 120 }
>     Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15, 1/10,
> 1/5,
>
>
> Thanks in adv,
> Naruka
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110609/ff1af98f/attachment.html>

From jpiszcz at lucidpixels.com  Thu Jun  9 15:56:06 2011
From: jpiszcz at lucidpixels.com (Justin Piszcz)
Date: Thu, 9 Jun 2011 09:56:06 -0400 (EDT)
Subject: [Linux-uvc-devel] Multiple webcams,
 error: uvcvideo: Failed to submit URB 0 (-28)
In-Reply-To: <alpine.DEB.2.02.1106081718580.3462@p34.internal.lan>
References: <alpine.DEB.2.02.1106081718580.3462@p34.internal.lan>
Message-ID: <alpine.DEB.2.02.1106090953520.22528@p34.internal.lan>



On Wed, 8 Jun 2011, Justin Piszcz wrote:

> Is there anyway around this?
> When using 5 different webcams, no problems.
> When using 4-5 webcams of the same type, only 2 of 5 work.
>
> [  832.218440] uvcvideo: Failed to submit URB 0 (-28).
>
> I also tried with uvcvideo quirks=128.
>
> Why is this?
>
> Anyhow, I found a workaround:
>
> [ 1183.054874] uvcvideo: Probing generic UVC device 6
> [ 1183.054908] uvcvideo: Found format MJPEG.
> [ 1183.054916] uvcvideo: - 160x120 (30.0 fps)
> [ 1183.054922] uvcvideo: - 176x144 (30.0 fps)
> [ 1183.054927] uvcvideo: - 320x240 (15.0 fps)
> [ 1183.054933] uvcvideo: - 352x288 (15.0 fps)
> [ 1183.054938] uvcvideo: - 640x480 (15.0 fps)
> [ 1183.054943] uvcvideo: - 800x600 (15.0 fps)
> [ 1183.054949] uvcvideo: - 960x720 (10.0 fps)
> [ 1183.054955] uvcvideo: Found format YUV 4:2:2 (YUYV).
> [ 1183.054961] uvcvideo: - 160x120 (30.0 fps)
> [ 1183.054966] uvcvideo: - 176x144 (30.0 fps)
> [ 1183.054972] uvcvideo: - 320x240 (15.0 fps)
> [ 1183.054978] uvcvideo: - 352x288 (15.0 fps)
> [ 1183.054984] uvcvideo: - 640x480 (15.0 fps)
> [ 1183.054989] uvcvideo: - 800x600 (15.0 fps)
> [ 1183.054994] uvcvideo: - 960x720 (10.0 fps)
> [ 1183.055000] uvcvideo: - 1600x1200 (5.0 fps)
>
> I can use MAX: 2 devices of the same type with YUV 4:2:2.
> I can use MAX: at least ?? more devices of the same type with MJPEG.
>
> Now I see some weird banding or video artifacts, digging further (w/MJPEG).
> Why is there a problem using > 2 of the same device with YUV 4:2:2?


CC'd motion-user@ list to see if there is a 'proper' way to support > 2-3 
web cams.

So far I have 1 PCI-e USB card with 4 ports and the system motherboard 
itself and the motherboard headers, I am able to use 3 of the same camera, 
but beyond that it says Failed to submit URB 0 (-28).

I would like to use YUV 4:2:2 (YUUV) 1600x1200 for all 4 cams, would this 
be possible?

Right now I am able to use as many cameras as I want, as long as there 
are not more than ~2 of the same type:

Bus 001 Device 003: ID 046d:0809 Logitech, Inc. Webcam Pro 9000
Bus 002 Device 004: ID 046d:0990 Logitech, Inc. QuickCam Pro 9000
Bus 007 Device 002: ID 0471:0311 Philips (or NXP) PCVC740K ToUcam Pro [pwc]
Bus 002 Device 005: ID 046d:08b2 Logitech, Inc. QuickCam Pro 4000
Bus 003 Device 004: ID 046d:08b2 Logitech, Inc. QuickCam Pro 4000
Bus 003 Device 005: ID 046d:0809 Logitech, Inc. Webcam Pro 9000

Thoughts?

Justin.



From philip at gladstonefamily.net  Thu Jun  9 21:07:53 2011
From: philip at gladstonefamily.net (Philip Gladstone)
Date: Thu, 09 Jun 2011 15:07:53 -0400
Subject: [Linux-uvc-devel] Frame Rate/Corruption C910, plus 4 others
In-Reply-To: <alpine.DEB.2.02.1106090203420.31839@cervantes>
References: <alpine.DEB.2.02.1106090203420.31839@cervantes>
Message-ID: <4DF11A09.50002@gladstonefamily.net>

I had the same problem -- but it turned out that the problem was that I 
had the camera plugged into a blue usb port. What is the color of your 
USB port?

More seriously, it appears that the C910 (in particular) has problems 
with USB 3.0 ports (at least on my Lenovo laptop). I now can't recall if 
the windows drivers had the same problem -- but I think it did.

Philip

On 6/9/2011 2:04 AM, Mark Whitis wrote:
> Low frame rate problems have been seen with at least 5 UVC cameras on
> multiple computers. It isn't low light, USB bandwidth, etc. In the past,
> I have assumed the cameras were being dishonest about their performance,
> now I am pretty sure it is the UVC driver's fault. On a newer, faster,
> computer performance has even gone down on some cameras.
>
> I just got a new Logitech C910 UVC webcam. This camera has a 5MP
> (2592x1944) sensor and can do 1920x1080/30P, 720x1280/30P, and
> 640x480/60P. It works right out of the box with guvcview except for:
> - The crippling frame rate problems described here
> - uvcvideo doesn't support still picture capture (this is a real 5MP
> bayer resolution webcam).
> - Exposure mode can be set to Manual or Aperature Priority. Auto or
> Shutter priority produce an error.
> - Video in MJPG mode is badly corrupted when recording (any program) or
> when
> displayed in some programs.
> Other than that, auto/manual exposure, digital zoom, digital pan/tilt
> (zoom first), auto/manual focus, etc. seem to work. Sound not tested. It
> does support still image.
> However, streaming to disk or using a number of other applications fails
> badly:
> Tests were done on this camera, except where otherwise noted.
>
> As we will see below, mplayer is the only one that admits to dropping
> 3/4 of the video frames at 60fps but the other programs (or the driver)
> are doing it.
>
>
>
> Because of the large number of video modes, less interesting modes have
> been deleted and only 480P, 720P, 1080P, and full sensor resolution
> shown in YUYV and MJPG:
> Init. UVC Camera (046d:0821) (location: usb-0000:00:13.2-3)
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 1/5,
> { discrete: width = 1280, height = 720 }
> Time interval between frame: 1/10, 2/15, 1/5,
> { discrete: width = 1920, height = 1080 }
> Time interval between frame: 1/2,
> { discrete: width = 2592, height = 1944 }
> Time interval between frame: 1/2,
> { pixelformat = 'MJPG', description = 'MJPEG' }
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/60, 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 1/5,
> { discrete: width = 1280, height = 720 }
> Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 1/5,
> { discrete: width = 1920, height = 1080 }
> Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 1/5,
> { discrete: width = 2592, height = 1944 }
> Time interval between frame: 1/10, 2/15, 1/5,
> { pixelformat = 'RGB3', description = 'RGB3' }
> ...
> { pixelformat = 'BGR3', description = 'BGR3' }
> ...
>
> vid:046d
> pid:0821
> driver:uvcvideo
> Adding control for Pan (relative)
> UVCIOC_CTRL_ADD - Error: File exists
> checking format: 1196444237
> VIDIOC_G_COMP:: Invalid argument
> compression control not supported
> fps is set to 1/30
> drawing controls
>
> fps is set to 1/30
>
> guvcview gets max 12-14fps in any video mode down to 160x120.
> Yes, I am using MJPG not YUYV. No the camera exposure should not be
> knocking down the frame rate as this occurs even when pointed at a
> light. No the CPU isn't overloaded; Phenom II 1060T X6 and none of the
> cores are heavily loaded. No, I am not plugged into a 12Mbps port. No,
> the USB bus isn't loaded (unplugged another webcam). luvcview does a
> little better, getting 30fps at 160x120. But if you run guvcview as
> root, now all of a sudden it can run 30fps up to 1920x1080. This
> continues when you switch back to a normal user. Until it breaks. Which
> happened when I tried to read full sensor resolution. After that, I was
> stuck at <=15fps in all modes as root and ordinary user. Removing both
> copies of .guvcviewrc didn't help. Unpluging the camera doesn't fix it.
> Unplugging the camera and rmmoding uvcvideo (which takes videodev with
> it) and replugging the camera didn't fix it. Plugging into USB 3.0
> superspeed port didn't help (not that the camera supports superspeed,
> just trying to change the USB controller). "shutdown -h now" didn't fix
> it. Sound is disabled.
>
> At one point during the brief time that it was working as root, I got
> 58fps 640x480 and it did not slow down even when I lowered frame rate to
> 30fps. Don't know if it actually had anything to do with being root. It
> did work just long enough to indicate that the camera can deliver on its
> promised specifications.
>
> It does appear guvcview frame rate display is somewhat unreliable. I get
> different results if I turn it off and on, and they vary depending on
> how long it was off, like the title bar only gets updated once. But on
> different cameras that do slow the frame rate in low light, the title
> bar fps is updated when I cover the lens. The changing numbers when
> turning off/on the title bar fps readout may reflect resetting the
> boxcar averaging. The low numbers do seem to reflect reality. When I
> record files using various programs, I only get 25fps according to ffprobe.
>
>
> Bad video looks like typically less than half of frame (varies how much
> frame to frame) with some errors of 1/4 to 1/2 width of frame in the
> section that is displayed. Like there is a race condition between
> grabbing the video and playback or one of the errors encountered is bad
> enough to kill the rest of the frame. I have played back with "mplayer
> -vo x11" to disable any hardware accelleration on my video card and the
> results are the same.
>
>
> - Cheese - works but very limited
> - guvcview record video - you get less than half a video frame and other
> errors.
> - ffmpeg -f video4linux2 -s 640x480 -r 60 -vcodec mjpeg -i /dev/video0
> -r 60 -vcodec copy /tmp/test1.mjpeg
> You get the same unusable video as guvcview
> These errors reported before recording starts, then none during recording.
> [mjpeg @ 0x1a0c900]mjpeg_decode_dc: bad vlc: 0:0 (0x1a297c0)
> [mjpeg @ 0x1a0c900]error dc
> [mjpeg @ 0x1a0c900]error y=2 x=11
> [video4linux2 @ 0x1a0b660]Estimating duration from bitrate, this may be
> inaccurate
> then playing back recorded stream with ffplay gives the
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=1 x=21
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240) 0B f=0/0
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)f=0/1
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]error count: 64
> [mjpeg @ 0xf95850]error y=0 x=30
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=3 x=21
> The bad vlc lines originate from libavcodec/mjpegdec.c
>
>
> - vlc
> vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
> --sout=file/ogg:/tmp/test3.mjp
> vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
> you get the same unusable video (<1/2frame) whether you are playing or
> recording. No errors reported on record. When simply watching cam, looks
> like this:
> [0x9ebdb0] signals interface error: signal 17 overriden (0x7f41629c9450)
> [0x9ebdb0] signals interface error: /usr/lib/libQtCore.so.4(?)[(nil)]
> error dc
> error y=0 x=29
> error dc
> error y=6 x=1
> error dc
> error y=6 x=1
> error dc
> error y=1 x=8
> vlc does display the image ok if you use YUYV instead of MJPG but then
> you are severly limited in resolution/frame rate.
> - mplayer
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=60
> v4l2: 159 frames successfully processed, 475 frames dropped.
> real 0m10.939s
> I.E. about 58fps from camera but 14.5fps after frames dropped.
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=30
> v4l2: 149 frames successfully processed, 144 frames dropped.
> real 0m10.101s
> I.E. about 29fps from camera but about 14.75fps after frames dropped
> Setup time may affect results slightly.
> Note that if you request more frames than camera supports, it will
> report more frames dropped.
>
>
>
> - luvcview -s 640x480 -r 60 -f MJPG &
>
> prints "find DRI" repeatedly
> reports 14, 16, and 20fps on subsequent runs when camera set to 60.
> title bar updated at least twice as it initially reports 0.0 fps.
>
> luvcview -s 640x480 -r 60 -f MJPG -C -o /tmp/test4.avi &
> xine, mplayer, and vlc are unable to read the file.
>
> Using read method instead of mmap doesn't seem to make a difference,
> tried with various programs.
>
> Same problem on netbook running ubuntu 9.04.
>
> It may be a bug where uvcvideo gives you the next frame received after
> you request a frame instead of giving you the next frame stored in the
> queue.
>
> No uvcvideo syslog messages
>
> Other UVC cameras:
> - 230X USB microscope UVC eb1a:1760 (real 1.3MP)
> v4l2: 132 frames successfully processed, 199 frames dropped. real 12.252s
> i.e. 10.77fps out of 27fps.
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/30,
> looking at video monitor or overhead light. guvcview says 17fps but will
> drop to 3.5fps in low light when fps reported set to 30.
> http://www.freelabs.com/~whitis/reviews/230X_USB_Microscope/
> On a previous computer I was able to get 27 out of 30fps at 640x480
> and 7fps out of 15fps at 1280x1024 in bright light.
> - deal extreme sku #25948 $6.40 camera 18ec:3299 Arkmicro Technologies
> Inc. (0.3MP)
> http://www.dealextreme.com/p/compact-usb-pc-webcam-300k-pixel-25948
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/30, 1/15, 1/10, 1/5,
> ...
> guvcview reports 20fps looking at overhead light
> v4l2: 245 frames successfully processed, 74 frames dropped. real 0m10.706s
> i.e. 22.88fps out of 29.79fps
> pressing snapshot button changes color instead, cycling between
> different colors
>
> - 0c45:62c0 Microdia Sonix USB 2.0 Camera (0.3MP)
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/30, 1/20, 1/15, 1/10, 1/5,
> ...
> guvcview reports 21.5fps looking at light, 9fps lens blocked
> v4l2: 311 frames successfully processed, 24 frames dropped. real 0m11.514s
> i.e. 27fps out of 29fps
> ebay cubeternet USB 2 WEBCAM Camera 5M, Mic, 6 Infrared LED PC/Mac UVC
> claimed 1.3MP sensor, it was only 0.3MP.
>
>
> - Built-in netbook camera 064E:A102 Suyin Corp
> Different computer: Acer Aspire One 532h-2588 netbook
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
> Time interval between frame: 1/30, 1/25, 1/20, 1/15, 1/10, 1/5,
> (hand typed)
> ...
> guvcview reports 7.00fps looking at overhead light/7.00fps lens covered
> ditto for luvcview.
>
> - Logitech quickcam fusion. Now broken, but I recall similar results a
> few years ago. Other cameras were tested now.
>
>
>
>
> Ubuntu 11.04
> Linux cervantes 2.6.38-8-generic #42-Ubuntu SMP Mon Apr 11 03:31:24 UTC
> 2011 x86_64 x86_64 x86_64 GNU/Linux
> AMD Phenom(tm) II X6 1090T Processor
> ASUS Crosshair IV Formula
> Radeon HD 6950
> luvcview 0.2.6
> guvcview 1.4.1
> Cheese 2.32.0
> FFmpeg version 0.6.2-4:0.6.2-1ubuntu1
> VLC media player 1.1.9 The Luggage (revision exported)
> MPlayer 1.0rc4-4.5.2 (C) 2000-2010 MPlayer Team
> This is xine (X11 gui) - a free video player v0.99.6.
> ii libavcodec-extra-52 4:0.6.2-1ubuntu2 Libav codec library
> rc libavcodec52 4:0.6.2-1ubuntu1 Libav codec library
> ii libv4l-0 0.8.3-1 Collection of video4linux support libraries
> ii libgstreamer0.10-0 0.10.32-3ubuntu3 Core GStreamer libraries and
> elements
> My video monitors are running at: 60hz (DVI), 60.3hz (VGA over
> DisplayPort), 60hz (DVI). ATI proprietary driver 11-5.
>
>
> lsusb -v -d 046d:0821 is 1770 lines, so I won't include it. The guvcview
> exceprts include some of the more pertinent details. Someone else has
> posted the lsusb output here for same model camera:
> http://pastebin.ca/raw/1967260
>
> Wireshark:
> guvcview -s 640x480 -r 30 -f YUYV
> used YUYV since it is hard to infer info about number of frames from
> compressed video.
> guvcview reports 16fps
> Over 10 seconds, with guvcview already running:
> 125Mbit/second (all traffic)
> 640*480*2*8bits*30 = 147.456 megabits
> 640*480*2*8bits*16 = 78.6432 megabits
> 2629 packets of size>=5120bytes, typically 62016
> This indicates less than 30 frames actually making it onto the wire in
> this mode or data is being lost within frames.
>
> guvcview -s 1920x1080 -r 30 -f MJPG
> 13.50fps
> 125MBit/second over 10.941 seconds
> 2736 big packets, typically 62016 bytes from camera to host Same number
> of small (320-639) packets, typically 576 bytes host to camera. 4
> smaller packets (40-159 bytes).
>
> Oddly, the highest MaxBit rate on this camera is 995328000 which exceeds
> the capacity of USB High Speed. That is for 1920*1080 30fps MJPEG and is
> actually the uncompressed bitrate. The bitrate for that resolution
> FRAME_UNCOMPRESSED is given as 165888000 which is for 2fps. Most of the
> tests were done at 640x480 compressed or uncompressed and adequate
> bandwidth should be available.
>
>
>
> lsusb -t
> /: Bus 08.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M
> /: Bus 07.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/4p, 12M
> /: Bus 06.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/2p, 12M
> /: Bus 05.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
> /: Bus 04.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
> |__ Port 3: Dev 3, If 0, Class=HID, Driver=usbhid, 1.5M
> |__ Port 3: Dev 3, If 1, Class=HID, Driver=usbhid, 1.5M
> |__ Port 4: Dev 4, If 0, Class=HID, Driver=usbhid, 1.5M
> /: Bus 03.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/4p, 480M
> |__ Port 3: Dev 2, If 0, Class=stor., Driver=usb-storage, 480M
> /: Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
> |__ Port 3: Dev 13, If 0, Class=audio, Driver=snd-usb-audio, 480M
> |__ Port 3: Dev 13, If 1, Class=audio, Driver=snd-usb-audio, 480M
> |__ Port 3: Dev 13, If 2, Class='bInterfaceClass 0x0e not yet handled',
> Driver=uvcvideo, 480M
> |__ Port 3: Dev 13, If 3, Class='bInterfaceClass 0x0e not yet handled',
> Driver=uvcvideo, 480M
> /: Bus 01.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
>
> Windows users have reported getting 30fps.
> http://forums.quickcamteam.net/showthread.php?tid=1345&page=2
>
> Sometimes I get a little more than 15fps, for no apparent reason. For
> example, now guvcview reports 18.00fps at 640x480/30P-MJPG and when I
> tell guvcview to capture video, it gives 24.18fps:
> Duration: 00:00:05.54, start: 0.000000, bitrate: 16494 kb/s
> Stream #0.0: Video: mjpeg, yuvj422p, 640x480, 24.18 tbr, 24.18 tbn,
> 24.18 tbc
> http://ffmpeg-users.933282.n4.nabble.com/What-does-the-output-of-ffmpeg-mean-tbr-tbn-tbc-etc-td941538.html
>
> The video is corrupted.
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>

-- 
Philip Gladstone
Ham: N1DQ


From pj.assis at gmail.com  Fri Jun 10 11:12:40 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Fri, 10 Jun 2011 10:12:40 +0100
Subject: [Linux-uvc-devel] luvcview does not record video in avi
In-Reply-To: <BANLkTikC7Q7fFEH1jkaP3WMwFFU_mv2HeA@mail.gmail.com>
References: <BANLkTiktwzs8fsuMzhGmM54Wx6ExdFboyQ@mail.gmail.com>
	<BANLkTimfHBd+KWV_uJkk9XOOBLwwCjp0BQ@mail.gmail.com>
	<BANLkTin7S9Ex3SsbsJ32RYHaU_UOahygcg@mail.gmail.com>
	<BANLkTikC7Q7fFEH1jkaP3WMwFFU_mv2HeA@mail.gmail.com>
Message-ID: <BANLkTi=PpnuqtEm7LNGD9Dibo6h0fxJkbQ@mail.gmail.com>

Hi,

2011/6/10 JITENDRA SINGH <narukajsingh at gmail.com>:
> Hi Paulo,
>
> Thanks a lot, I tried using IYUV 4cc before your reply, now using YUY2 4cc
> code luvcview is recording the yuv file but its quite large as compared to
> one recorded by ffmpeg. I understand that ffmpeg encodes yuyv frames
> resulting in smaller mpg file.

YUYV is a uncompressed format (16 bit per pixel), it will always
produce much larger files if compared with any compressed.

>
> I just need litle advice, I want a survillance app on arm arch, but would
> like to use luvcview to record and not ffmpeg as luvcview is gud small pkg,
> in that case should I go for a mjpg based webcam such as C905?
> Just can't find performance comparison of yuyv vs mjpg based webcams and
> apps(considering mjpg/yuyv encoding is done in webcam only)...hope you put
> some valuable words !!

in terms of performance, streaming in yuyv or mjpg on a usb2
connection makes no big difference although you should be able achieve
better fps with mjpg at higher resolutions.
YUYV is more limited due the higher usb bandwidth needed.

Regards,
Paulo

>
> Many thanks,
> Naruka
>
> On Thu, Jun 9, 2011 at 8:52 PM, Paulo Assis <pj.assis at gmail.com> wrote:
>>
>> Hi,
>>
>> The 4cc code for YUYV is YUY2, at least this is what I use for
>> guvcview and it works with most video players.
>>
>> So just use the same luvcview code but replace the 4cc code from MJPG
>> to YUY2 in the case of a YUYV stream format.
>>
>> Regards,
>> Paulo
>>
>> just use that when streaming in yuyv and the file should be ok
>>
>> 2011/6/9 JITENDRA SINGH <narukajsingh at gmail.com>:
>> > I think I see the problem in luvcview code, avi file is not initialized
>> > for
>> > V4L2_PIX_FMT_YUYV, its is initialized only for MJPG fmt.
>> >
>> > ./v4l2uvc.c:650:??????????? vd->avifile =
>> > AVI_open_output_file(vd->avifilename);
>> >
>> > Now all I want to know is, does luvcview doesnt support recording of avi
>> > file from YUV frames ?
>> > Any suggestions, what I can do for that support ?
>> >
>> > Any help will be gr8!!
>> >
>> > Thanks,
>> > Naruka
>> >
>> > On Thu, Jun 9, 2011 at 6:15 PM, JITENDRA SINGH <narukajsingh at gmail.com>
>> > wrote:
>> >>
>> >> Hi all,
>> >>
>> >> I am trying to save video(its ok without audio) via luvcvideo, but I
>> >> cant
>> >> see any .avi file generated, though it shows "avi recording
>> >> started/stopped".
>> >> I am pressing p/clicking record button to record:
>> >>
>> >> $sudo luvcview -d /dev/video0 -f yuv -s 176x144 -i 3 -o ./vid.avi
>> >> luvcview 0.2.6
>> >>
>> >> SDL information:
>> >> Video driver: x11
>> >> A window manager is available
>> >> Device information:
>> >> Device path: /dev/video0
>> >> Stream settings:
>> >> Frame format: YUYV
>> >> Frame size: 176x144
>> >> Frame rate: 5 fps (requested frame rate 3 fps is not supported by
>> >> device)
>> >> avi recording started
>> >> frame rate: 5.01253
>> >> avi recording stopped (4s)
>> >> avi recording started
>> >> frame rate: 4.98753
>> >> avi recording stopped (4s)
>> >> Cleanup done. Exiting ...
>> >>
>> >> Does anybody has a clue, I found no info anywhere about such problem.
>> >> PS: luvcview is able to capture still image, raw frames as well.
>> >>
>> >> $luvcview -L
>> >> luvcview 0.2.6
>> >>
>> >> SDL information:
>> >> ? Video driver: x11
>> >> ? A window manager is available
>> >> Device information:
>> >> ? Device path:? /dev/video0
>> >> /dev/video0 does not support read i/o
>> >> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>> >> { discrete: width = 640, height = 480 }
>> >> ??? Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15,
>> >> 1/10,
>> >> 1/5,
>> >> { discrete: width = 352, height = 288 }
>> >> ??? Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15,
>> >> 1/10,
>> >> 1/5,
>> >> { discrete: width = 320, height = 240 }
>> >> ??? Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15,
>> >> 1/10,
>> >> 1/5,
>> >> { discrete: width = 176, height = 144 }
>> >> ??? Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15,
>> >> 1/10,
>> >> 1/5,
>> >> { discrete: width = 160, height = 120 }
>> >> ??? Time interval between frame: 1/60, 1/50, 1/40, 1/30, 1/20, 1/15,
>> >> 1/10,
>> >> 1/5,
>> >>
>> >>
>> >> Thanks in adv,
>> >> Naruka
>> >
>> > _______________________________________________
>> > Linux-uvc-devel mailing list
>> > Linux-uvc-devel at lists.berlios.de
>> > https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>> >
>> >
>
>


From Purushotham.A at meritup.com  Fri Jun 10 13:07:35 2011
From: Purushotham.A at meritup.com (Purushotham.A at meritup.com)
Date: Fri, 10 Jun 2011 16:37:35 +0530
Subject: [Linux-uvc-devel] Request to help us in using UVC driver for linux
	kernel-2.6.18
Message-ID: <20110610163735.spjmnvr1w8gck4sw@webmail.meritup.com>

Respected sir/madam,

We are working to bring up a USB webcam on DM365 board and the linux  
kernel version with which we are  working is  linux-kernel-2.6.18. We  
are finding difficulty in building UVC driver in the  
linux-kernel-2.6.18. Please tell us what can be done and how to build  
this driver in the kernel with which we are working.





With regards and thanks,

Purushotham Reddy A,
Meritup Innovations pvt Ltd.,
R.T. Nagar, Bangalore-560032,
INDIA







From hagar at iinet.net.au  Sat Jun 11 03:28:33 2011
From: hagar at iinet.net.au (hagar)
Date: Sat, 11 Jun 2011 09:28:33 +0800
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
Message-ID: <4DF2C4C1.30005@iinet.net.au>

I have a Z-Star USB Digital Microscope It is supposed to have the 
following specifications -

ManID   - 0ac8
DevID   - 3610
Image   - 1.3 MP
Bus     - USB 2.0
Mag     - 20x - 400x - ( Manual - More like Focus )
Capture - Still & Video
Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
Color   - 32 bit
Flicker - 50/60 Hz
Frames  - Max 30fps under 600 Lus brightness
Shutter - 1 sec to 1/1000 sec
Light   - 8 led dimmable (Manual) (Software ??)
Power   - 5V DC from USB

Now uvcvideo works but not fully
uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120

How can I fix the driver to allow the rest of the resolutions to work?

Thanx


From pj.assis at gmail.com  Sun Jun 12 00:03:43 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Sat, 11 Jun 2011 23:03:43 +0100
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <4DF2C4C1.30005@iinet.net.au>
References: <4DF2C4C1.30005@iinet.net.au>
Message-ID: <BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>

Hi,

2011/6/11 hagar <hagar at iinet.net.au>:
> I have a Z-Star USB Digital Microscope It is supposed to have the following
> specifications -
>
> ManID ? - 0ac8
> DevID ? - 3610
> Image ? - 1.3 MP
> Bus ? ? - USB 2.0
> Mag ? ? - 20x - 400x - ( Manual - More like Focus )
> Capture - Still & Video
> Modes ? - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120

There seems to be something wrong with the camera specs:

1600 x 1200 = 1.9 MP

so I wouldn't trust these values that much.

> Color ? - 32 bit
> Flicker - 50/60 Hz
> Frames ?- Max 30fps under 600 Lus brightness
> Shutter - 1 sec to 1/1000 sec
> Light ? - 8 led dimmable (Manual) (Software ??)
> Power ? - 5V DC from USB
>
> Now uvcvideo works but not fully
> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
>

Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
Available resolutions may vary depending on the image format you
choose for streaming (if more than one choice present) and they can
also change if you use a usb1 port instead of a usb2.


Regards,
Paulo


From hagar at iinet.net.au  Sun Jun 12 04:08:15 2011
From: hagar at iinet.net.au (hagar)
Date: Sun, 12 Jun 2011 10:08:15 +0800
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>
References: <4DF2C4C1.30005@iinet.net.au>
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>
Message-ID: <4DF41F8F.9080901@iinet.net.au>

On 06/12/2011 06:03 AM, Paulo Assis wrote:
> Hi,
>
> 2011/6/11 hagar<hagar at iinet.net.au>:
>> I have a Z-Star USB Digital Microscope It is supposed to have the following
>> specifications -
>>
>> ManID   - 0ac8
>> DevID   - 3610
>> Image   - 1.3 MP
>> Bus     - USB 2.0
>> Mag     - 20x - 400x - ( Manual - More like Focus )
>> Capture - Still&  Video
>> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
> There seems to be something wrong with the camera specs:
>
> 1600 x 1200 = 1.9 MP
>
> so I wouldn't trust these values that much.
Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600, 
640x480, 352x288, 320x240, 160x120

The first list was a summary - I missed the next one!
>> Color   - 32 bit
>> Flicker - 50/60 Hz
>> Frames  - Max 30fps under 600 Lus brightness
>> Shutter - 1 sec to 1/1000 sec
>> Light   - 8 led dimmable (Manual) (Software ??)
>> Power   - 5V DC from USB
>>
>> Now uvcvideo works but not fully
>> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
>>
> Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
> Available resolutions may vary depending on the image format you
> choose for streaming (if more than one choice present) and they can
> also change if you use a usb1 port instead of a usb2.
>
I used a USB 2.0 port. And the uvcvideo driver will only return a max of 
640x480 resolution.
I dont know the camera lowlevel format.
But I was trying to look at the driver code to see if there was any 
per-camera options.- I couldnt find any!

would a lsusb -v -d 0ac8:3610 help ?

Thanx


From michal at physics.ubc.ca  Sun Jun 12 06:55:15 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Sat, 11 Jun 2011 21:55:15 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106071039430.6544@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
Message-ID: <alpine.LNX.2.00.1106112144060.7428@tristan>

>>
>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>> >  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>> > >  Hello,
>> > > 
>> > >  I'm having some trouble with a Quanta integrated webcam. ?It 
>> > >  identifies
>> > >  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1. ?This is 
>> > >  built
>> > >  in to a Dell XPS-15 (L501X).
>> > > 
>> > >  The uvcvideo module works, but the video stutters and has some
>> > >  distortions, even at low resolutions and frame rates.
>> > > 
>> > >  With the Camera Output set to MJPG (in guvcview) "Ignoring empty 
>> > >  buffer ..."
>> > >  messages occur with most glitches.
>>
>>  I would say the camera is not returning the full frame (or maybe empty
>>  ones) for same reason.
>> 
>> > > 
>> > >  If the output is set to YV12, the errors look like:
>> > > 
>> > >  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>> > >  Error grabbing image
>> > >  libv4l2: error converting / decoding frame data: v4l-convert: error
>> > >  parsing JPEG header: Not a JPG file ?
>> > > 
>>
>>  YV12 is a format returned by libv4l, and it's obtained by
>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
>>  format like above.
>> 
>> > >  With cheese, the video preview looks ok, but video capture is
>> > >  unusable - the video stutters badly at low resolution, and the capture
>> > >  hangs at high resolution (the program doesn't hang, but after a couple 
>> > >  of
>> > >  frames no more get captured).
>> > 
>>
>>  Probably the same situation as above (incomplete or empty frames)
>> 
>>
>>  You should also increase uvc video verbosity and check dmesg for errors.
>>
>>  From the looks of it I would say you are having some hardware sync
>>  issues, did you try all possible resolutions and frame rates ?
>>  Do these issues happen in all formats
>>
>>  Regards,
>>  Paulo
>>

I've looked through the traces I've gotten with this webcam a little and 
noticed something that may help.  The out of sync errors are always starts 
with a sequence like this:

Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
Jun 11 21:41:59 uvcvideo: EOF in empty payload.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
Jun 11 21:41:59 uvcvideo: EOF in empty payload.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
Jun 11 21:41:59 uvcvideo: EOF in empty payload.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).

I've added a couple of fields to the frame complete messages to indicate 
which buffer is marked as complete and how many bytes were delivered to 
it.

Most frames are terminated with EOF, but occasionally an FID and EOF 
are found in the same packet. So two buffers are marked as completed, but 
the second one shouldn't be (I don't think).

Any advice on where to look next?

Carl


From bug-track at fisher-privat.net  Sun Jun 12 07:40:00 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 07:40:00 +0200
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <4DF41F8F.9080901@iinet.net.au>
References: <4DF2C4C1.30005@iinet.net.au>
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>
	<4DF41F8F.9080901@iinet.net.au>
Message-ID: <1307857200.3259.3.camel@zwerg>

On So, 2011-06-12 at 10:08 +0800, hagar wrote:
> On 06/12/2011 06:03 AM, Paulo Assis wrote:
> > Hi,
> >
> > 2011/6/11 hagar<hagar at iinet.net.au>:
> >> I have a Z-Star USB Digital Microscope It is supposed to have the following
> >> specifications -
> >>
> >> ManID   - 0ac8
> >> DevID   - 3610
> >> Image   - 1.3 MP
> >> Bus     - USB 2.0
> >> Mag     - 20x - 400x - ( Manual - More like Focus )
> >> Capture - Still&  Video
> >> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
> > There seems to be something wrong with the camera specs:
> >
> > 1600 x 1200 = 1.9 MP
> >
> > so I wouldn't trust these values that much.
> Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
> Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600, 
> 640x480, 352x288, 320x240, 160x120
> 
> The first list was a summary - I missed the next one!
> >> Color   - 32 bit
> >> Flicker - 50/60 Hz
> >> Frames  - Max 30fps under 600 Lus brightness
> >> Shutter - 1 sec to 1/1000 sec
> >> Light   - 8 led dimmable (Manual) (Software ??)
> >> Power   - 5V DC from USB
> >>
> >> Now uvcvideo works but not fully
> >> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
> >>
> > Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
> > Available resolutions may vary depending on the image format you
> > choose for streaming (if more than one choice present) and they can
> > also change if you use a usb1 port instead of a usb2.
> >
> I used a USB 2.0 port. And the uvcvideo driver will only return a max of 
> 640x480 resolution.
> I dont know the camera lowlevel format.
> But I was trying to look at the driver code to see if there was any 
> per-camera options.- I couldnt find any!

This is usb(_universal_ serial buss) video class driver. Camera should
tell the driver what it can.

> would a lsusb -v -d 0ac8:3610 help ?

Yes!
-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Sun Jun 12 07:51:07 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 07:51:07 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106112144060.7428@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
Message-ID: <1307857867.3259.11.camel@zwerg>

On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
> >>
> >>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
> >> >  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
> >> > >  Hello,
> >> > > 
> >> > >  I'm having some trouble with a Quanta integrated webcam.  It 
> >> > >  identifies
> >> > >  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is 
> >> > >  built
> >> > >  in to a Dell XPS-15 (L501X).
> >> > > 
> >> > >  The uvcvideo module works, but the video stutters and has some
> >> > >  distortions, even at low resolutions and frame rates.
> >> > > 
> >> > >  With the Camera Output set to MJPG (in guvcview) "Ignoring empty 
> >> > >  buffer ..."
> >> > >  messages occur with most glitches.
> >>
> >>  I would say the camera is not returning the full frame (or maybe empty
> >>  ones) for same reason.
> >> 
> >> > > 
> >> > >  If the output is set to YV12, the errors look like:
> >> > > 
> >> > >  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
> >> > >  Error grabbing image
> >> > >  libv4l2: error converting / decoding frame data: v4l-convert: error
> >> > >  parsing JPEG header: Not a JPG file ?
> >> > > 
> >>
> >>  YV12 is a format returned by libv4l, and it's obtained by
> >>  decompressing the MJPG stream, so in fact the camera is still in MJPG
> >>  format like above.
> >> 
> >> > >  With cheese, the video preview looks ok, but video capture is
> >> > >  unusable - the video stutters badly at low resolution, and the capture
> >> > >  hangs at high resolution (the program doesn't hang, but after a couple 
> >> > >  of
> >> > >  frames no more get captured).
> >> > 
> >>
> >>  Probably the same situation as above (incomplete or empty frames)
> >> 
> >>
> >>  You should also increase uvc video verbosity and check dmesg for errors.
> >>
> >>  From the looks of it I would say you are having some hardware sync
> >>  issues, did you try all possible resolutions and frame rates ?
> >>  Do these issues happen in all formats
> >>
> >>  Regards,
> >>  Paulo
> >>
> 
> I've looked through the traces I've gotten with this webcam a little and 
> noticed something that may help.  The out of sync errors are always starts 
> with a sequence like this:
> 
> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> 
> I've added a couple of fields to the frame complete messages to indicate 
> which buffer is marked as complete and how many bytes were delivered to 
> it.
> 
> Most frames are terminated with EOF, but occasionally an FID and EOF 
> are found in the same packet. So two buffers are marked as completed, but 
> the second one shouldn't be (I don't think).
> 
> Any advice on where to look next?

Try fid quirk:
uvcvideo quirks=0x10

for more quirks see:
grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
UVC_QUIRK_STATUS_INTERVAL 0x00000001
UVC_QUIRK_PROBE_MINMAX 0x00000002
UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
UVC_QUIRK_STREAM_NO_FID 0x00000010
UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
UVC_QUIRK_FIX_BANDWIDTH 0x00000080
UVC_QUIRK_PROBE_DEF 0x00000100 
UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200

-- 
Regards,
        Alexey



From hagar at iinet.net.au  Sun Jun 12 07:51:52 2011
From: hagar at iinet.net.au (hagar)
Date: Sun, 12 Jun 2011 13:51:52 +0800
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <1307857200.3259.3.camel@zwerg>
References: <4DF2C4C1.30005@iinet.net.au>	
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>	
	<4DF41F8F.9080901@iinet.net.au> <1307857200.3259.3.camel@zwerg>
Message-ID: <4DF453F8.6020601@iinet.net.au>

On 06/12/2011 01:40 PM, Alexey Fisher wrote:
> On So, 2011-06-12 at 10:08 +0800, hagar wrote:
>> On 06/12/2011 06:03 AM, Paulo Assis wrote:
>>> Hi,
>>>
>>> 2011/6/11 hagar<hagar at iinet.net.au>:
>>>> I have a Z-Star USB Digital Microscope It is supposed to have the following
>>>> specifications -
>>>>
>>>> ManID   - 0ac8
>>>> DevID   - 3610
>>>> Image   - 1.3 MP
>>>> Bus     - USB 2.0
>>>> Mag     - 20x - 400x - ( Manual - More like Focus )
>>>> Capture - Still&   Video
>>>> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
>>> There seems to be something wrong with the camera specs:
>>>
>>> 1600 x 1200 = 1.9 MP
>>>
>>> so I wouldn't trust these values that much.
>> Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
>> Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600,
>> 640x480, 352x288, 320x240, 160x120
>>
>> The first list was a summary - I missed the next one!
>>>> Color   - 32 bit
>>>> Flicker - 50/60 Hz
>>>> Frames  - Max 30fps under 600 Lus brightness
>>>> Shutter - 1 sec to 1/1000 sec
>>>> Light   - 8 led dimmable (Manual) (Software ??)
>>>> Power   - 5V DC from USB
>>>>
>>>> Now uvcvideo works but not fully
>>>> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
>>>>
>>> Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
>>> Available resolutions may vary depending on the image format you
>>> choose for streaming (if more than one choice present) and they can
>>> also change if you use a usb1 port instead of a usb2.
>>>
>> I used a USB 2.0 port. And the uvcvideo driver will only return a max of
>> 640x480 resolution.
>> I dont know the camera lowlevel format.
>> But I was trying to look at the driver code to see if there was any
>> per-camera options.- I couldnt find any!
> This is usb(_universal_ serial buss) video class driver. Camera should
> tell the driver what it can.
>
>> would a lsusb -v -d 0ac8:3610 help ?
> Yes!
lsusb -v -d 0ac8:3610

Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
Device Descriptor:
   bLength                18
   bDescriptorType         1
   bcdUSB               2.00
   bDeviceClass          239 Miscellaneous Device
   bDeviceSubClass         2 ?
   bDeviceProtocol         1 Interface Association
   bMaxPacketSize0        64
   idVendor           0x0ac8 Z-Star Microelectronics Corp.
   idProduct          0x3610
   bcdDevice            1.00
   iManufacturer           1 Vimicro Co.,ltd
   iProduct                2 Vimicro USB2.0 UVC PC Camera
   iSerial                 0
   bNumConfigurations      1
   Configuration Descriptor:
     bLength                 9
     bDescriptorType         2
     wTotalLength          501
     bNumInterfaces          2
     bConfigurationValue     1
     iConfiguration          0
     bmAttributes         0x80
       (Bus Powered)
     MaxPower              320mA
     Interface Association:
       bLength                 8
       bDescriptorType        11
       bFirstInterface         0
       bInterfaceCount         2
       bFunctionClass         14 Video
       bFunctionSubClass       3 Video Interface Collection
       bFunctionProtocol       0
       iFunction               2 Vimicro USB2.0 UVC PC Camera
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        0
       bAlternateSetting       0
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      1 Video Control
       bInterfaceProtocol      0
       iInterface              2 Vimicro USB2.0 UVC PC Camera
       VideoControl Interface Descriptor:
         bLength                13
         bDescriptorType        36
         bDescriptorSubtype      1 (HEADER)
         bcdUVC               1.00
         wTotalLength           79
         dwClockFrequency       30.000000MHz
         bInCollection           1
         baInterfaceNr( 0)       1
       VideoControl Interface Descriptor:
         bLength                18
         bDescriptorType        36
         bDescriptorSubtype      2 (INPUT_TERMINAL)
         bTerminalID             1
         wTerminalType      0x0201 Camera Sensor
         bAssocTerminal          0
         iTerminal               0
         wObjectiveFocalLengthMin      0
         wObjectiveFocalLengthMax      0
         wOcularFocalLength            0
         bControlSize                  3
         bmControls           0x00040a0e
           Auto-Exposure Mode
           Auto-Exposure Priority
           Exposure Time (Absolute)
           Zoom (Absolute)
           PanTilt (Absolute)
           Privacy
       VideoControl Interface Descriptor:
         bLength                11
         bDescriptorType        36
         bDescriptorSubtype      5 (PROCESSING_UNIT)
       Warning: Descriptor too short
         bUnitID                 2
         bSourceID               1
         wMaxMultiplier          0
         bControlSize            2
         bmControls     0x0000547f
           Brightness
           Contrast
           Hue
           Saturation
           Sharpness
           Gamma
           White Balance Temperature
           Power Line Frequency
           White Balance Temperature, Auto
           Digital Multiplier
         iProcessing             0
         bmVideoStandards     0x 9
           None
           SECAM - 625/50
       VideoControl Interface Descriptor:
         bLength                 9
         bDescriptorType        36
         bDescriptorSubtype      3 (OUTPUT_TERMINAL)
         bTerminalID             3
         wTerminalType      0x0101 USB Streaming
         bAssocTerminal          0
         bSourceID               2
         iTerminal               0
       VideoControl Interface Descriptor:
         bLength                28
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 4
         guidExtensionCode         {5dc717a9-1941-da11-ae0e-000d56ac7b4c}
         bNumControl             9
         bNrPins                 1
         baSourceID( 0)          1
         bControlSize            3
         bmControls( 0)       0xf9
         bmControls( 1)       0x81
         bmControls( 2)       0x80
         iExtension              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x81  EP 1 IN
         bmAttributes            3
           Transfer Type            Interrupt
           Synch Type               None
           Usage Type               Data
         wMaxPacketSize     0x000a  1x 10 bytes
         bInterval               5
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       0
       bNumEndpoints           0
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       VideoStreaming Interface Descriptor:
         bLength                            14
         bDescriptorType                    36
         bDescriptorSubtype                  1 (INPUT_HEADER)
         bNumFormats                         1
         wTotalLength                      263
         bEndPointAddress                  130
         bmInfo                              0
         bTerminalLink                       3
         bStillCaptureMethod                 2
         bTriggerSupport                     1
         bTriggerUsage                       1
         bControlSize                        1
         bmaControls( 0)                    27
       VideoStreaming Interface Descriptor:
         bLength                            27
         bDescriptorType                    36
         bDescriptorSubtype                  4 (FORMAT_UNCOMPRESSED)
         bFormatIndex                        1
         bNumFrameDescriptors                5
         guidFormat                            
{59555932-0000-1000-8000-00aa00389b71}
         bBitsPerPixel                      16
         bDefaultFrameIndex                  1
         bAspectRatioX                       0
         bAspectRatioY                       0
         bmInterlaceFlags                 0x00
           Interlaced stream or variable: No
           Fields per frame: 1 fields
           Field 1 first: No
           Field pattern: Field 1 only
           bCopyProtect                      0
       VideoStreaming Interface Descriptor:
         bLength                            38
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         1
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            640
         wHeight                           480
         dwMinBitRate                 36864000
         dwMaxBitRate                147456000
         dwMaxVideoFrameBufferSize      614400
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  3
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            666667
         dwFrameInterval( 2)           1333333
       VideoStreaming Interface Descriptor:
         bLength                            38
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         2
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            352
         wHeight                           288
         dwMinBitRate                 12126720
         dwMaxBitRate                 48660480
         dwMaxVideoFrameBufferSize      202752
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  3
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            666667
         dwFrameInterval( 2)           1333333
       VideoStreaming Interface Descriptor:
         bLength                            38
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         3
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            320
         wHeight                           240
         dwMinBitRate                  9216000
         dwMaxBitRate                 36864000
         dwMaxVideoFrameBufferSize      153600
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  3
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            666667
         dwFrameInterval( 2)           1333333
       VideoStreaming Interface Descriptor:
         bLength                            38
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         4
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            176
         wHeight                           144
         dwMinBitRate                  3041280
         dwMaxBitRate                 12165120
         dwMaxVideoFrameBufferSize       50688
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  3
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            666667
         dwFrameInterval( 2)           1333333
       VideoStreaming Interface Descriptor:
         bLength                            38
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         5
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            160
         wHeight                           120
         dwMinBitRate                  2304000
         dwMaxBitRate                  9216000
         dwMaxVideoFrameBufferSize       38400
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  3
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            666667
         dwFrameInterval( 2)           1333333
       VideoStreaming Interface Descriptor:
         bLength                            26
         bDescriptorType                    36
         bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
         bEndpointAddress                    0
         bNumImageSizePatterns               5
         wWidth( 0)                        640
         wHeight( 0)                       480
         wWidth( 1)                        352
         wHeight( 1)                       288
         wWidth( 2)                        320
         wHeight( 2)                       240
         wWidth( 3)                        176
         wHeight( 3)                       144
         wWidth( 4)                        160
         wHeight( 4)                       120
         bNumCompressionPatterns             5
       VideoStreaming Interface Descriptor:
         bLength                             6
         bDescriptorType                    36
         bDescriptorSubtype                 13 (COLORFORMAT)
         bColorPrimaries                     0 (Unspecified)
         bTransferCharacteristics            0 (Unspecified)
         bMatrixCoefficients                 0 (Unspecified)
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       1
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0080  1x 128 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       2
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0200  1x 512 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       3
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0400  1x 1024 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       4
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0b00  2x 768 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       5
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0c00  2x 1024 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       6
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x1380  3x 896 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       7
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x1400  3x 1024 bytes
         bInterval               1
Device Qualifier (for other device speed):
   bLength                10
   bDescriptorType         6
   bcdUSB               2.00
   bDeviceClass          239 Miscellaneous Device
   bDeviceSubClass         2 ?
   bDeviceProtocol         1 Interface Association
   bMaxPacketSize0        64
   bNumConfigurations      1
Device Status:     0x0000
   (Bus Powered)



From bug-track at fisher-privat.net  Sun Jun 12 08:11:52 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 08:11:52 +0200
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <4DF453F8.6020601@iinet.net.au>
References: <4DF2C4C1.30005@iinet.net.au>
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>
	<4DF41F8F.9080901@iinet.net.au> <1307857200.3259.3.camel@zwerg>
	<4DF453F8.6020601@iinet.net.au>
Message-ID: <1307859112.4149.4.camel@zwerg>

On So, 2011-06-12 at 13:51 +0800, hagar wrote:
> On 06/12/2011 01:40 PM, Alexey Fisher wrote:
> > On So, 2011-06-12 at 10:08 +0800, hagar wrote:
> >> On 06/12/2011 06:03 AM, Paulo Assis wrote:
> >>> Hi,
> >>>
> >>> 2011/6/11 hagar<hagar at iinet.net.au>:
> >>>> I have a Z-Star USB Digital Microscope It is supposed to have the following
> >>>> specifications -
> >>>>
> >>>> ManID   - 0ac8
> >>>> DevID   - 3610
> >>>> Image   - 1.3 MP
> >>>> Bus     - USB 2.0
> >>>> Mag     - 20x - 400x - ( Manual - More like Focus )
> >>>> Capture - Still&   Video
> >>>> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
> >>> There seems to be something wrong with the camera specs:
> >>>
> >>> 1600 x 1200 = 1.9 MP
> >>>
> >>> so I wouldn't trust these values that much.
> >> Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
> >> Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600,
> >> 640x480, 352x288, 320x240, 160x120
> >>
> >> The first list was a summary - I missed the next one!
> >>>> Color   - 32 bit
> >>>> Flicker - 50/60 Hz
> >>>> Frames  - Max 30fps under 600 Lus brightness
> >>>> Shutter - 1 sec to 1/1000 sec
> >>>> Light   - 8 led dimmable (Manual) (Software ??)
> >>>> Power   - 5V DC from USB
> >>>>
> >>>> Now uvcvideo works but not fully
> >>>> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
> >>>>
> >>> Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
> >>> Available resolutions may vary depending on the image format you
> >>> choose for streaming (if more than one choice present) and they can
> >>> also change if you use a usb1 port instead of a usb2.
> >>>
> >> I used a USB 2.0 port. And the uvcvideo driver will only return a max of
> >> 640x480 resolution.
> >> I dont know the camera lowlevel format.
> >> But I was trying to look at the driver code to see if there was any
> >> per-camera options.- I couldnt find any!
> > This is usb(_universal_ serial buss) video class driver. Camera should
> > tell the driver what it can.
> >
> >> would a lsusb -v -d 0ac8:3610 help ?
> > Yes!
> lsusb -v -d 0ac8:3610

Bad news. uvcvideo thins your cam has only 640x480, because your cam
tells it has only 640x480.

See this part of lsusb info:
> Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
> Device Descriptor:
------------8<---------------------------------
>        VideoStreaming Interface Descriptor:
>          bLength                            26
>          bDescriptorType                    36
>          bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
>          bEndpointAddress                    0
>          bNumImageSizePatterns               5
>          wWidth( 0)                        640
>          wHeight( 0)                       480
>          wWidth( 1)                        352
>          wHeight( 1)                       288
>          wWidth( 2)                        320
>          wHeight( 2)                       240
>          wWidth( 3)                        176
>          wHeight( 3)                       144
>          wWidth( 4)                        160
>          wHeight( 4)                       120
>          bNumCompressionPatterns             5
------------8<---------------------------------
-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Sun Jun 12 08:24:09 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 08:24:09 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <4DEE4A3F.10308@minet.net>
References: <4DE8E64B.3030009@minet.net>
	<201106061942.20970.laurent.pinchart@ideasonboard.com>
	<4DED452C.10502@minet.net>  <4DEE4A3F.10308@minet.net>
Message-ID: <1307859849.4149.8.camel@zwerg>

Hi,

please use "uvc_trace(UVC_TRACE_DESCR," or pr_debug instead of printk.
So you can enable verbosity only if you need.

On Di, 2011-06-07 at 17:56 +0200, Yann Sionneau wrote:
> Hi again,
> 
> here is as attached file a new patch that applies to linux 2.6.39 tree 
> (linux-2.6.git, tag v2.6.39).
> 
> This patch now prints at the end of each stream :
> 
> (*) total number of PTS (taking into account each packet)
> (*) total number of SCR
> (*) total number of ERR
> (*) number of packets without PTS (nb_missing_pts)
> (*) number of packets without SCR (nb_missing_scr)
> 
> It will print as well for each packet (beware, it will hugely flood your 
> syslog) :
> 
> (*) SCR
> (*) diff with previous packet's SCR
> (*) PTS
> (*) diff with previous packet's PTS
> 
> Beware, to see the "end of stream" statistics, you have to scroll up a 
> little bit, it will be somewhere in the end of the per-packet 
> information flood.
> 
> Some results inline in the e-mail.
> 
> On 06/06/2011 11:22 PM, Yann Sionneau wrote:
> > Le 06/06/11 19:42, Laurent Pinchart a ?crit :
> >> Hi Yann,
> >>
> >> Thanks for the patch.
> >>
> >> On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
> >>> Hi Laurent and the UVC list,
> >>>
> >>> Here is a patch [snip]
> >> You should take all UVC packets into account, not just the first one for each
> >> frame.
> > Yes I don't know why in my head I thought only the first uvc packet
> > would have a header for the frame with timestamps and such, but it makes
> > no sense, each packet has its own header and the start of frame is just
> > signaled by the toggling of the FID :)
> >
> >> the important information are
> >>
> >> - do all frames have a PTS timestamp in their first packet ?
> > It seems so yes, at least on the two webcams I tried with the patch.
> >
> >> - do all non-empty packets for a frame have a PTS timestamp, and is it
> >> constant through the whole frame as it should be ?
> > Let's modify the patch to count the PTS and SCR of all packets instead
> > of only one per frame in order to sort this out !
> I tested with the Logitech HD Pro C910, all packets have a PTS.
> PTS are indeed constant through the whole frame as it should be.
> >> - how many SCR timestamps do we have per frame ? are they constant through the
> >> whole frame or do they vary as they should ?
> >>
> > Same here !
> With the same webcam, all packets have a SCR.
> The SCR value does vary through each frame, as it should do.
> The difference between the previous SCR is usually the same, except at a 
> regular interval where there is a "jump" in SCR values.
> 
> for example, SCR - SCR_prev would be 7 times the same difference, and 
> then it will change for just one time, and then go back to the old 
> difference for 7 times etc.
> 
> >>> [snip]
> > Thanks for your review and comments, will submit a new patch ASAP !

-- 
Regards,
        Alexey



From rudiistderbeste at gmail.com  Sun Jun 12 08:29:21 2011
From: rudiistderbeste at gmail.com (Rudolf Hotz)
Date: Sun, 12 Jun 2011 11:59:21 +0530
Subject: [Linux-uvc-devel] the Camera Microsoft Wired LifeCam VX-1000 Webcam
 is not in the list of supported devices
Message-ID: <BANLkTik6qAekK7As=4GHOBRos_Xz5UisKg@mail.gmail.com>

Hello,
My Camera is not listed in the list on this website
http://www.ideasonboard.org/uvc/

It does not work with Ubuntu 11.04, which I have running in my Computer.

My Camera is the
Microsoft Wired LifeCam VX-1000 WebcamGreets,

Rudolf Hotz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110612/a0be0cfb/attachment.html>

From michal at physics.ubc.ca  Sun Jun 12 08:33:30 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Sat, 11 Jun 2011 23:33:30 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1307857867.3259.11.camel@zwerg>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
Message-ID: <alpine.LNX.2.00.1106112323490.9731@tristan>



On Sun, 12 Jun 2011, Alexey Fisher wrote:

> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
>>>>
>>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>>>>>>  Hello,
>>>>>>
>>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
>>>>>>  identifies
>>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
>>>>>>  built
>>>>>>  in to a Dell XPS-15 (L501X).
>>>>>>
>>>>>>  The uvcvideo module works, but the video stutters and has some
>>>>>>  distortions, even at low resolutions and frame rates.
>>>>>>
>>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
>>>>>>  buffer ..."
>>>>>>  messages occur with most glitches.
>>>>
>>>>  I would say the camera is not returning the full frame (or maybe empty
>>>>  ones) for same reason.
>>>>
>>>>>>
>>>>>>  If the output is set to YV12, the errors look like:
>>>>>>
>>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>>>>>>  Error grabbing image
>>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
>>>>>>  parsing JPEG header: Not a JPG file ?
>>>>>>
>>>>
>>>>  YV12 is a format returned by libv4l, and it's obtained by
>>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
>>>>  format like above.
>>>>
>>>>>>  With cheese, the video preview looks ok, but video capture is
>>>>>>  unusable - the video stutters badly at low resolution, and the capture
>>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
>>>>>>  of
>>>>>>  frames no more get captured).
>>>>>
>>>>
>>>>  Probably the same situation as above (incomplete or empty frames)
>>>>
>>>>
>>>>  You should also increase uvc video verbosity and check dmesg for errors.
>>>>
>>>>  From the looks of it I would say you are having some hardware sync
>>>>  issues, did you try all possible resolutions and frame rates ?
>>>>  Do these issues happen in all formats
>>>>
>>>>  Regards,
>>>>  Paulo
>>>>
>>
>> I've looked through the traces I've gotten with this webcam a little and
>> noticed something that may help.  The out of sync errors are always starts
>> with a sequence like this:
>>
>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>
>> I've added a couple of fields to the frame complete messages to indicate
>> which buffer is marked as complete and how many bytes were delivered to
>> it.
>>
>> Most frames are terminated with EOF, but occasionally an FID and EOF
>> are found in the same packet. So two buffers are marked as completed, but
>> the second one shouldn't be (I don't think).
>>
>> Any advice on where to look next?
>
> Try fid quirk:
> uvcvideo quirks=0x10
>
> for more quirks see:
> grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
> UVC_QUIRK_STATUS_INTERVAL 0x00000001
> UVC_QUIRK_PROBE_MINMAX 0x00000002
> UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
> UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
> UVC_QUIRK_STREAM_NO_FID 0x00000010
> UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
> UVC_QUIRK_FIX_BANDWIDTH 0x00000080
> UVC_QUIRK_PROBE_DEF 0x00000100
> UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
>
> -- 
> Regards,
>        Alexey
>
>

the fid quirk actually makes it quite a bit worse - many more out of sync 
errors.  None of the other quirks (individually) solve the issue.

I stuck in a crude hack to ignore the EOF that is found in the same packet 
as the fid toggle, and then the number of sync errors is dramatically 
reduced, but there are still some bad frames.  What next?

Thanks,

Carl



From bug-track at fisher-privat.net  Sun Jun 12 09:36:56 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 09:36:56 +0200
Subject: [Linux-uvc-devel] the Camera Microsoft Wired LifeCam VX-1000
 Webcam is not in the list of supported devices
In-Reply-To: <BANLkTik6qAekK7As=4GHOBRos_Xz5UisKg@mail.gmail.com>
References: <BANLkTik6qAekK7As=4GHOBRos_Xz5UisKg@mail.gmail.com>
Message-ID: <1307864216.5899.3.camel@mini>

Hallo,

Am Sonntag, den 12.06.2011, 11:59 +0530 schrieb Rudolf Hotz:
> Hello, 
> My Camera is not listed in the list on this website
> http://www.ideasonboard.org/uvc/
> 
> It does not work with Ubuntu 11.04, which I have running in my
> Computer. 
> 
> My Camera is the 
> 
> Microsoft Wired LifeCam VX-1000 Webcam
> Greets,

Please attach the output of lsusb -v -d xxxx:xxxx
xxxx:xxxx is the usb id of your cam.
You can also take a look here and check if your cam is an UVC device:
http://www.ideasonboard.org/uvc/faq/

------
Regards,
 Alexey



From bug-track at fisher-privat.net  Sun Jun 12 10:20:33 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Sun, 12 Jun 2011 10:20:33 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106112323490.9731@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
Message-ID: <1307866833.5899.15.camel@mini>

Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
> 
> On Sun, 12 Jun 2011, Alexey Fisher wrote:
> 
> > On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
> >>>>
> >>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
> >>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
> >>>>>>  Hello,
> >>>>>>
> >>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
> >>>>>>  identifies
> >>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
> >>>>>>  built
> >>>>>>  in to a Dell XPS-15 (L501X).
> >>>>>>
> >>>>>>  The uvcvideo module works, but the video stutters and has some
> >>>>>>  distortions, even at low resolutions and frame rates.
> >>>>>>
> >>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
> >>>>>>  buffer ..."
> >>>>>>  messages occur with most glitches.
> >>>>
> >>>>  I would say the camera is not returning the full frame (or maybe empty
> >>>>  ones) for same reason.
> >>>>
> >>>>>>
> >>>>>>  If the output is set to YV12, the errors look like:
> >>>>>>
> >>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
> >>>>>>  Error grabbing image
> >>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
> >>>>>>  parsing JPEG header: Not a JPG file ?
> >>>>>>
> >>>>
> >>>>  YV12 is a format returned by libv4l, and it's obtained by
> >>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
> >>>>  format like above.
> >>>>
> >>>>>>  With cheese, the video preview looks ok, but video capture is
> >>>>>>  unusable - the video stutters badly at low resolution, and the capture
> >>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
> >>>>>>  of
> >>>>>>  frames no more get captured).
> >>>>>
> >>>>
> >>>>  Probably the same situation as above (incomplete or empty frames)
> >>>>
> >>>>
> >>>>  You should also increase uvc video verbosity and check dmesg for errors.
> >>>>
> >>>>  From the looks of it I would say you are having some hardware sync
> >>>>  issues, did you try all possible resolutions and frame rates ?
> >>>>  Do these issues happen in all formats
> >>>>
> >>>>  Regards,
> >>>>  Paulo
> >>>>
> >>
> >> I've looked through the traces I've gotten with this webcam a little and
> >> noticed something that may help.  The out of sync errors are always starts
> >> with a sequence like this:
> >>
> >> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
> >> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
> >> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
> >> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
> >> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
> >> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> >> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> >>
> >> I've added a couple of fields to the frame complete messages to indicate
> >> which buffer is marked as complete and how many bytes were delivered to
> >> it.
> >>
> >> Most frames are terminated with EOF, but occasionally an FID and EOF
> >> are found in the same packet. So two buffers are marked as completed, but
> >> the second one shouldn't be (I don't think).
> >>
> >> Any advice on where to look next?
> >
> > Try fid quirk:
> > uvcvideo quirks=0x10
> >
> > for more quirks see:
> > grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
> > UVC_QUIRK_STATUS_INTERVAL 0x00000001
> > UVC_QUIRK_PROBE_MINMAX 0x00000002
> > UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
> > UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
> > UVC_QUIRK_STREAM_NO_FID 0x00000010
> > UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
> > UVC_QUIRK_FIX_BANDWIDTH 0x00000080
> > UVC_QUIRK_PROBE_DEF 0x00000100
> > UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
> >
> > -- 
> > Regards,
> >        Alexey
> >
> >
> 
> the fid quirk actually makes it quite a bit worse - many more out of sync 
> errors.  None of the other quirks (individually) solve the issue.
> 
> I stuck in a crude hack to ignore the EOF that is found in the same packet 
> as the fid toggle, and then the number of sync errors is dramatically 
> reduced, but there are still some bad frames.  What next?

Am i correct, your trace is for mjpeg format?
Becouse buffers have different size, with uncompressed stream should get
always same size.
There are two way to mark frame as complete, at frame beginning (FID) or
at frame end (EOF). EOF is optional, FID is important. Some cams do not
do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
But we do not have EOF quirk. Let us try to ignore EOF, there is
attached patch.

-- 
Regards,
        Alexey
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tmp.diff
Type: text/x-patch
Size: 889 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110612/ad0d5281/attachment.bin>

From josu.lazkano at gmail.com  Sun Jun 12 14:34:25 2011
From: josu.lazkano at gmail.com (Josu Lazkano)
Date: Sun, 12 Jun 2011 14:34:25 +0200
Subject: [Linux-uvc-devel] the Camera Microsoft Wired LifeCam VX-1000
 Webcam is not in the list of supported devices
In-Reply-To: <BANLkTik6qAekK7As=4GHOBRos_Xz5UisKg@mail.gmail.com>
References: <BANLkTik6qAekK7As=4GHOBRos_Xz5UisKg@mail.gmail.com>
Message-ID: <BANLkTi=JnHzPvMqwyg63Zd70OdaGAhMVRA@mail.gmail.com>

2011/6/12 Rudolf Hotz <rudiistderbeste at gmail.com>:
> Hello,
> My Camera is not listed in the list on this website
> http://www.ideasonboard.org/uvc/
>
> It does not work with Ubuntu 11.04, which I have running in my Computer.
>
> My Camera is the
>
> Microsoft Wired LifeCam VX-1000 Webcam
>
> Greets,
>
> Rudolf Hotz
>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>

This webcam works great for me on a Debian Squeeze, there are some
problems with audio, but the image works great.

Regards.

-- 
Josu Lazkano


From yann at minet.net  Sun Jun 12 17:33:01 2011
From: yann at minet.net (Yann Sionneau)
Date: Sun, 12 Jun 2011 17:33:01 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <1307859849.4149.8.camel@zwerg>
References: <4DE8E64B.3030009@minet.net>	
	<201106061942.20970.laurent.pinchart@ideasonboard.com>	
	<4DED452C.10502@minet.net> <4DEE4A3F.10308@minet.net>
	<1307859849.4149.8.camel@zwerg>
Message-ID: <4DF4DC2D.6070900@minet.net>

Hi Alexey,

Agreed, but bear in mind this patch I submitted is not for inclusion and
merge in the git tree, it is just for testing purpose, it will never be
merged in the git.

This is just a one shot patch to show some informations and then you can
throw it away once you have the informations.

But yes I could make it use the uvc_trace() API, it won't kill me :)

Thanks for your feed back on the patch, do you have the time to test it
on your webcams and to publish part of your syslog ?

Regards,

Yann

Le 12/06/11 08:24, Alexey Fisher a ?crit :
> Hi,
> 
> please use "uvc_trace(UVC_TRACE_DESCR," or pr_debug instead of printk.
> So you can enable verbosity only if you need.
> 
> On Di, 2011-06-07 at 17:56 +0200, Yann Sionneau wrote:
>> Hi again,
>>
>> here is as attached file a new patch that applies to linux 2.6.39 tree 
>> (linux-2.6.git, tag v2.6.39).
>>
>> This patch now prints at the end of each stream :
>>
>> (*) total number of PTS (taking into account each packet)
>> (*) total number of SCR
>> (*) total number of ERR
>> (*) number of packets without PTS (nb_missing_pts)
>> (*) number of packets without SCR (nb_missing_scr)
>>
>> It will print as well for each packet (beware, it will hugely flood your 
>> syslog) :
>>
>> (*) SCR
>> (*) diff with previous packet's SCR
>> (*) PTS
>> (*) diff with previous packet's PTS
>>
>> Beware, to see the "end of stream" statistics, you have to scroll up a 
>> little bit, it will be somewhere in the end of the per-packet 
>> information flood.
>>
>> Some results inline in the e-mail.
>>
>> On 06/06/2011 11:22 PM, Yann Sionneau wrote:
>>> Le 06/06/11 19:42, Laurent Pinchart a ?crit :
>>>> Hi Yann,
>>>>
>>>> Thanks for the patch.
>>>>
>>>> On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
>>>>> Hi Laurent and the UVC list,
>>>>>
>>>>> Here is a patch [snip]
>>>> You should take all UVC packets into account, not just the first one for each
>>>> frame.
>>> Yes I don't know why in my head I thought only the first uvc packet
>>> would have a header for the frame with timestamps and such, but it makes
>>> no sense, each packet has its own header and the start of frame is just
>>> signaled by the toggling of the FID :)
>>>
>>>> the important information are
>>>>
>>>> - do all frames have a PTS timestamp in their first packet ?
>>> It seems so yes, at least on the two webcams I tried with the patch.
>>>
>>>> - do all non-empty packets for a frame have a PTS timestamp, and is it
>>>> constant through the whole frame as it should be ?
>>> Let's modify the patch to count the PTS and SCR of all packets instead
>>> of only one per frame in order to sort this out !
>> I tested with the Logitech HD Pro C910, all packets have a PTS.
>> PTS are indeed constant through the whole frame as it should be.
>>>> - how many SCR timestamps do we have per frame ? are they constant through the
>>>> whole frame or do they vary as they should ?
>>>>
>>> Same here !
>> With the same webcam, all packets have a SCR.
>> The SCR value does vary through each frame, as it should do.
>> The difference between the previous SCR is usually the same, except at a 
>> regular interval where there is a "jump" in SCR values.
>>
>> for example, SCR - SCR_prev would be 7 times the same difference, and 
>> then it will change for just one time, and then go back to the old 
>> difference for 7 times etc.
>>
>>>>> [snip]
>>> Thanks for your review and comments, will submit a new patch ASAP !
> 



From ian at ifreeman.net  Mon Jun 13 03:44:09 2011
From: ian at ifreeman.net (Ian Freeman)
Date: Sun, 12 Jun 2011 18:44:09 -0700
Subject: [Linux-uvc-devel] Device disappears after a minute (093a:2700)
Message-ID: <1307929449.6478.4.camel@mace>

I can get working video from this device for a limited amount of time
before it disconnects from the usb system.

dmesg looks like the attached.

The video works under guvcview, cheese, and vlc, but only for about a
minute to a minute and a half.

I can't find anything interesting in any logs, but I'm using the
packager's uvcvideo for Ubuntu/natty.

Anything you could suggest I try? Maybe compile uvcvideo myself and turn
on any available debugging/verbosity flags?

Thanks,
Ian Freeman
-------------- next part --------------
[ 3858.190314] usb 1-1: new high speed USB device using ehci_hcd and address 29
[ 3858.386336] uvcvideo: Found UVC 1.00 device Digital_Camera (093a:2700)
[ 3858.395141] input: Digital_Camera as /devices/pci0000:00/0000:00:12.2/usb1/1-1/1-1:1.0/input/input37
[ 3871.275172] usb 1-1: USB disconnect, address 29
[ 3871.850096] usb 1-1: new high speed USB device using ehci_hcd and address 30
[ 3872.046157] uvcvideo: Found UVC 1.00 device Digital_Camera (093a:2700)
[ 3872.054938] input: Digital_Camera as /devices/pci0000:00/0000:00:12.2/usb1/1-1/1-1:1.0/input/input38
[ 3942.162298] usb 1-1: USB disconnect, address 30
[ 3942.580162] usb 1-1: new high speed USB device using ehci_hcd and address 31
[ 3942.776143] uvcvideo: Found UVC 1.00 device Digital_Camera (093a:2700)
[ 3942.784949] input: Digital_Camera as /devices/pci0000:00/0000:00:12.2/usb1/1-1/1-1:1.0/input/input39
[ 4061.697258] usb 1-1: USB disconnect, address 31
[ 4062.150153] usb 1-1: new high speed USB device using ehci_hcd and address 32
[ 4062.346393] uvcvideo: Found UVC 1.00 device Digital_Camera (093a:2700)
[ 4062.355303] input: Digital_Camera as /devices/pci0000:00/0000:00:12.2/usb1/1-1/1-1:1.0/input/input40

From michal at physics.ubc.ca  Mon Jun 13 06:05:31 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Sun, 12 Jun 2011 21:05:31 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1307866833.5899.15.camel@mini>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
Message-ID: <alpine.LNX.2.00.1106122059360.16043@tristan>

On Sun, 12 Jun 2011, Alexey Fisher wrote:

> Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
>>
>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
>>
>>> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
>>>>>>
>>>>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>>>>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>>>>>>>>  Hello,
>>>>>>>>
>>>>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
>>>>>>>>  identifies
>>>>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
>>>>>>>>  built
>>>>>>>>  in to a Dell XPS-15 (L501X).
>>>>>>>>
>>>>>>>>  The uvcvideo module works, but the video stutters and has some
>>>>>>>>  distortions, even at low resolutions and frame rates.
>>>>>>>>
>>>>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
>>>>>>>>  buffer ..."
>>>>>>>>  messages occur with most glitches.
>>>>>>
>>>>>>  I would say the camera is not returning the full frame (or maybe empty
>>>>>>  ones) for same reason.
>>>>>>
>>>>>>>>
>>>>>>>>  If the output is set to YV12, the errors look like:
>>>>>>>>
>>>>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>>>>>>>>  Error grabbing image
>>>>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
>>>>>>>>  parsing JPEG header: Not a JPG file ?
>>>>>>>>
>>>>>>
>>>>>>  YV12 is a format returned by libv4l, and it's obtained by
>>>>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
>>>>>>  format like above.
>>>>>>
>>>>>>>>  With cheese, the video preview looks ok, but video capture is
>>>>>>>>  unusable - the video stutters badly at low resolution, and the capture
>>>>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
>>>>>>>>  of
>>>>>>>>  frames no more get captured).
>>>>>>>
>>>>>>
>>>>>>  Probably the same situation as above (incomplete or empty frames)
>>>>>>
>>>>>>
>>>>>>  You should also increase uvc video verbosity and check dmesg for errors.
>>>>>>
>>>>>>  From the looks of it I would say you are having some hardware sync
>>>>>>  issues, did you try all possible resolutions and frame rates ?
>>>>>>  Do these issues happen in all formats
>>>>>>
>>>>>>  Regards,
>>>>>>  Paulo
>>>>>>
>>>>
>>>> I've looked through the traces I've gotten with this webcam a little and
>>>> noticed something that may help.  The out of sync errors are always starts
>>>> with a sequence like this:
>>>>
>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>>
>>>> I've added a couple of fields to the frame complete messages to indicate
>>>> which buffer is marked as complete and how many bytes were delivered to
>>>> it.
>>>>
>>>> Most frames are terminated with EOF, but occasionally an FID and EOF
>>>> are found in the same packet. So two buffers are marked as completed, but
>>>> the second one shouldn't be (I don't think).
>>>>
>>>> Any advice on where to look next?
>>>
>>> Try fid quirk:
>>> uvcvideo quirks=0x10
>>>
>>> for more quirks see:
>>> grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
>>> UVC_QUIRK_STATUS_INTERVAL 0x00000001
>>> UVC_QUIRK_PROBE_MINMAX 0x00000002
>>> UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
>>> UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
>>> UVC_QUIRK_STREAM_NO_FID 0x00000010
>>> UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
>>> UVC_QUIRK_FIX_BANDWIDTH 0x00000080
>>> UVC_QUIRK_PROBE_DEF 0x00000100
>>> UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
>>>
>>> --
>>> Regards,
>>>        Alexey
>>>
>>>
>>
>> the fid quirk actually makes it quite a bit worse - many more out of sync
>> errors.  None of the other quirks (individually) solve the issue.
>>
>> I stuck in a crude hack to ignore the EOF that is found in the same packet
>> as the fid toggle, and then the number of sync errors is dramatically
>> reduced, but there are still some bad frames.  What next?
>
> Am i correct, your trace is for mjpeg format?
> Becouse buffers have different size, with uncompressed stream should get
> always same size.
> There are two way to mark frame as complete, at frame beginning (FID) or
> at frame end (EOF). EOF is optional, FID is important. Some cams do not
> do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
> But we do not have EOF quirk. Let us try to ignore EOF, there is
> attached patch.
>
> -- 
> Regards,
>        Alexey
>
Hi,

With your patch the sync errors are almost completely gone, but there are 
still corrupt frames - YUYV output is much worse than before (yes - the 
earlier traces were MJPG).

This is from YUYV at 640x480, 30fps
things are good for a while but then:

Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 12 09:36:14 uvcvideo: Dequeuing buffer 3 (4, 614400 bytes).
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 12 09:36:14 uvcvideo: Queuing buffer 3.
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 0. bytes: 150952
Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 1. bytes: 2024
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 12 09:36:14 uvcvideo: Dequeuing buffer 0 (4, 150952 bytes).
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 12 09:36:14 uvcvideo: Queuing buffer 0.
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 12 09:36:14 uvcvideo: Dequeuing buffer 1 (4, 2024 bytes).
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 12 09:36:14 uvcvideo: Queuing buffer 1.
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 2. bytes: 461400
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
Jun 12 09:36:14 uvcvideo: Dequeuing buffer 2 (4, 461400 bytes).
Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
Jun 12 09:36:14 uvcvideo: Queuing buffer 2.
Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400

where interestingly - the 150952+2024+461400 = 614376, which is 24 bytes 
short of 614400.  The headers are 12 bytes long.  Seems like a weird conincidence.

Thanks,

Carl




From hagar at iinet.net.au  Mon Jun 13 08:18:41 2011
From: hagar at iinet.net.au (hagar)
Date: Mon, 13 Jun 2011 14:18:41 +0800
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <1307859112.4149.4.camel@zwerg>
References: <4DF2C4C1.30005@iinet.net.au>	
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>	
	<4DF41F8F.9080901@iinet.net.au> <1307857200.3259.3.camel@zwerg>	
	<4DF453F8.6020601@iinet.net.au> <1307859112.4149.4.camel@zwerg>
Message-ID: <4DF5ABC1.1090808@iinet.net.au>

On 06/12/2011 02:11 PM, Alexey Fisher wrote:
> On So, 2011-06-12 at 13:51 +0800, hagar wrote:
>> On 06/12/2011 01:40 PM, Alexey Fisher wrote:
>>> On So, 2011-06-12 at 10:08 +0800, hagar wrote:
>>>> On 06/12/2011 06:03 AM, Paulo Assis wrote:
>>>>> Hi,
>>>>>
>>>>> 2011/6/11 hagar<hagar at iinet.net.au>:
>>>>>> I have a Z-Star USB Digital Microscope It is supposed to have the following
>>>>>> specifications -
>>>>>>
>>>>>> ManID   - 0ac8
>>>>>> DevID   - 3610
>>>>>> Image   - 1.3 MP
>>>>>> Bus     - USB 2.0
>>>>>> Mag     - 20x - 400x - ( Manual - More like Focus )
>>>>>> Capture - Still&    Video
>>>>>> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
>>>>> There seems to be something wrong with the camera specs:
>>>>>
>>>>> 1600 x 1200 = 1.9 MP
>>>>>
>>>>> so I wouldn't trust these values that much.
>>>> Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
>>>> Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600,
>>>> 640x480, 352x288, 320x240, 160x120
>>>>
>>>> The first list was a summary - I missed the next one!
>>>>>> Color   - 32 bit
>>>>>> Flicker - 50/60 Hz
>>>>>> Frames  - Max 30fps under 600 Lus brightness
>>>>>> Shutter - 1 sec to 1/1000 sec
>>>>>> Light   - 8 led dimmable (Manual) (Software ??)
>>>>>> Power   - 5V DC from USB
>>>>>>
>>>>>> Now uvcvideo works but not fully
>>>>>> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
>>>>>>
>>>>> Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
>>>>> Available resolutions may vary depending on the image format you
>>>>> choose for streaming (if more than one choice present) and they can
>>>>> also change if you use a usb1 port instead of a usb2.
>>>>>
>>>> I used a USB 2.0 port. And the uvcvideo driver will only return a max of
>>>> 640x480 resolution.
>>>> I dont know the camera lowlevel format.
>>>> But I was trying to look at the driver code to see if there was any
>>>> per-camera options.- I couldnt find any!
>>> This is usb(_universal_ serial buss) video class driver. Camera should
>>> tell the driver what it can.
>>>
>>>> would a lsusb -v -d 0ac8:3610 help ?
>>> Yes!
>> lsusb -v -d 0ac8:3610
> Bad news. uvcvideo thins your cam has only 640x480, because your cam
> tells it has only 640x480.
>
> See this part of lsusb info:
>> Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
>> Device Descriptor:
> ------------8<---------------------------------
>>         VideoStreaming Interface Descriptor:
>>           bLength                            26
>>           bDescriptorType                    36
>>           bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
>>           bEndpointAddress                    0
>>           bNumImageSizePatterns               5
>>           wWidth( 0)                        640
>>           wHeight( 0)                       480
>>           wWidth( 1)                        352
>>           wHeight( 1)                       288
>>           wWidth( 2)                        320
>>           wHeight( 2)                       240
>>           wWidth( 3)                        176
>>           wHeight( 3)                       144
>>           wWidth( 4)                        160
>>           wHeight( 4)                       120
>>           bNumCompressionPatterns             5
>
According to The WinXP driver ini file the camera is capable of - ( 
Would all the hex numbers be of use ? )

UVC FUNC_MODE HIGH SPEED RGB24
640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )

UVC FUNC_MODE FULL SPEED RGB24
640x480, 160x120, 176x144, 320x240, 352x288

UVC FUNC_MODE YUY2 HIGH SPEED VIDEO
640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )

UVC FUNC_MODE STILL PIN HIGH SPEED RGB24
640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )

UVC FUNC_MODE STILL PIN FULL SPEED RGB24
640x480, 160x120, 176x144, 320x240, 352x288

Thanx Hagar


From bug-track at fisher-privat.net  Mon Jun 13 09:34:35 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Mon, 13 Jun 2011 09:34:35 +0200
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <4DF5ABC1.1090808@iinet.net.au>
References: <4DF2C4C1.30005@iinet.net.au>
	<BANLkTikR41tZW03u4h4Xt_3Xx7Wu+z_8BA@mail.gmail.com>
	<4DF41F8F.9080901@iinet.net.au> <1307857200.3259.3.camel@zwerg>
	<4DF453F8.6020601@iinet.net.au> <1307859112.4149.4.camel@zwerg>
	<4DF5ABC1.1090808@iinet.net.au>
Message-ID: <1307950475.3300.67.camel@zwerg>

On Mo, 2011-06-13 at 14:18 +0800, hagar wrote:
> On 06/12/2011 02:11 PM, Alexey Fisher wrote:
> > On So, 2011-06-12 at 13:51 +0800, hagar wrote:
> >> On 06/12/2011 01:40 PM, Alexey Fisher wrote:
> >>> On So, 2011-06-12 at 10:08 +0800, hagar wrote:
> >>>> On 06/12/2011 06:03 AM, Paulo Assis wrote:
> >>>>> Hi,
> >>>>>
> >>>>> 2011/6/11 hagar<hagar at iinet.net.au>:
> >>>>>> I have a Z-Star USB Digital Microscope It is supposed to have the following
> >>>>>> specifications -
> >>>>>>
> >>>>>> ManID   - 0ac8
> >>>>>> DevID   - 3610
> >>>>>> Image   - 1.3 MP
> >>>>>> Bus     - USB 2.0
> >>>>>> Mag     - 20x - 400x - ( Manual - More like Focus )
> >>>>>> Capture - Still&    Video
> >>>>>> Modes   - 1600x1200, 1280x960, 800x600, 640x480, 352x288, 320x240, 160x120
> >>>>> There seems to be something wrong with the camera specs:
> >>>>>
> >>>>> 1600 x 1200 = 1.9 MP
> >>>>>
> >>>>> so I wouldn't trust these values that much.
> >>>> Sorry - Missed a bit - 1.3 MegaPixels (interpolated to 2M)
> >>>> Resolutions - 1600x1200, 1280x1024, 1280x960, 1024x768, 800x600,
> >>>> 640x480, 352x288, 320x240, 160x120
> >>>>
> >>>> The first list was a summary - I missed the next one!
> >>>>>> Color   - 32 bit
> >>>>>> Flicker - 50/60 Hz
> >>>>>> Frames  - Max 30fps under 600 Lus brightness
> >>>>>> Shutter - 1 sec to 1/1000 sec
> >>>>>> Light   - 8 led dimmable (Manual) (Software ??)
> >>>>>> Power   - 5V DC from USB
> >>>>>>
> >>>>>> Now uvcvideo works but not fully
> >>>>>> uvcvideo only allows resolutions of - 640x480, 352x288, 320x240, 160x120
> >>>>>>
> >>>>> Does the camera only presents 1 pixel format (MJPG, YUYV,..) for streaming ?
> >>>>> Available resolutions may vary depending on the image format you
> >>>>> choose for streaming (if more than one choice present) and they can
> >>>>> also change if you use a usb1 port instead of a usb2.
> >>>>>
> >>>> I used a USB 2.0 port. And the uvcvideo driver will only return a max of
> >>>> 640x480 resolution.
> >>>> I dont know the camera lowlevel format.
> >>>> But I was trying to look at the driver code to see if there was any
> >>>> per-camera options.- I couldnt find any!
> >>> This is usb(_universal_ serial buss) video class driver. Camera should
> >>> tell the driver what it can.
> >>>
> >>>> would a lsusb -v -d 0ac8:3610 help ?
> >>> Yes!
> >> lsusb -v -d 0ac8:3610
> > Bad news. uvcvideo thins your cam has only 640x480, because your cam
> > tells it has only 640x480.
> >
> > See this part of lsusb info:
> >> Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
> >> Device Descriptor:
> > ------------8<---------------------------------
> >>         VideoStreaming Interface Descriptor:
> >>           bLength                            26
> >>           bDescriptorType                    36
> >>           bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
> >>           bEndpointAddress                    0
> >>           bNumImageSizePatterns               5
> >>           wWidth( 0)                        640
> >>           wHeight( 0)                       480
> >>           wWidth( 1)                        352
> >>           wHeight( 1)                       288
> >>           wWidth( 2)                        320
> >>           wHeight( 2)                       240
> >>           wWidth( 3)                        176
> >>           wHeight( 3)                       144
> >>           wWidth( 4)                        160
> >>           wHeight( 4)                       120
> >>           bNumCompressionPatterns             5
> >
> According to The WinXP driver ini file the camera is capable of - ( 
> Would all the hex numbers be of use ? )
> 
> UVC FUNC_MODE HIGH SPEED RGB24
> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> 
> UVC FUNC_MODE FULL SPEED RGB24
> 640x480, 160x120, 176x144, 320x240, 352x288
> 
> UVC FUNC_MODE YUY2 HIGH SPEED VIDEO
> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> 
> UVC FUNC_MODE STILL PIN HIGH SPEED RGB24
> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768, 
> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> 
> UVC FUNC_MODE STILL PIN FULL SPEED RGB24
> 640x480, 160x120, 176x144, 320x240, 352x288

Can you please check the driver (some.sys file) it use under win xp.

The idea of UVC (usb video class) is zero config functionality. You plug
some device and it just work. It is only possible if manufacture write
all needed settings in the eeprom of the device (webcam,...).
If you plug your device in MacOSX or Windows Vista/7, in any UVC ready
OS, you will get same result - max resolution 640x480.
If you need to install some thing to get more, then it is not UVC
device, at least not 100%.

Only good thing you can do for you and all others is to send this device
back. Manufactures should learn to read and use uvc specification.
-- 
Regards,
        Alexey



From pj.assis at gmail.com  Mon Jun 13 10:34:17 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Mon, 13 Jun 2011 09:34:17 +0100
Subject: [Linux-uvc-devel] Device disappears after a minute (093a:2700)
In-Reply-To: <1307929449.6478.4.camel@mace>
References: <1307929449.6478.4.camel@mace>
Message-ID: <BANLkTimcnJ6xB3FokDu666MfpGKCLpFpRw@mail.gmail.com>

Hi,
this looks like a faulty connection.
Try a different usb port, if this doesn't help you should check the
camera cable.

Regards,
Paulo

2011/6/13 Ian Freeman <ian at ifreeman.net>:
> I can get working video from this device for a limited amount of time
> before it disconnects from the usb system.
>
> dmesg looks like the attached.
>
> The video works under guvcview, cheese, and vlc, but only for about a
> minute to a minute and a half.
>
> I can't find anything interesting in any logs, but I'm using the
> packager's uvcvideo for Ubuntu/natty.
>
> Anything you could suggest I try? Maybe compile uvcvideo myself and turn
> on any available debugging/verbosity flags?
>
> Thanks,
> Ian Freeman
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>


From bug-track at fisher-privat.net  Mon Jun 13 17:36:15 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Mon, 13 Jun 2011 17:36:15 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106122059360.16043@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
	<alpine.LNX.2.00.1106122059360.16043@tristan>
Message-ID: <1307979375.7607.7.camel@zwerg>

On So, 2011-06-12 at 21:05 -0700, Carl Michal wrote:
> On Sun, 12 Jun 2011, Alexey Fisher wrote:
> 
> > Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
> >>
> >> On Sun, 12 Jun 2011, Alexey Fisher wrote:
> >>
> >>> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
> >>>>>>
> >>>>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
> >>>>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
> >>>>>>>>  Hello,
> >>>>>>>>
> >>>>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
> >>>>>>>>  identifies
> >>>>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
> >>>>>>>>  built
> >>>>>>>>  in to a Dell XPS-15 (L501X).
> >>>>>>>>
> >>>>>>>>  The uvcvideo module works, but the video stutters and has some
> >>>>>>>>  distortions, even at low resolutions and frame rates.
> >>>>>>>>
> >>>>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
> >>>>>>>>  buffer ..."
> >>>>>>>>  messages occur with most glitches.
> >>>>>>
> >>>>>>  I would say the camera is not returning the full frame (or maybe empty
> >>>>>>  ones) for same reason.
> >>>>>>
> >>>>>>>>
> >>>>>>>>  If the output is set to YV12, the errors look like:
> >>>>>>>>
> >>>>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
> >>>>>>>>  Error grabbing image
> >>>>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
> >>>>>>>>  parsing JPEG header: Not a JPG file ?
> >>>>>>>>
> >>>>>>
> >>>>>>  YV12 is a format returned by libv4l, and it's obtained by
> >>>>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
> >>>>>>  format like above.
> >>>>>>
> >>>>>>>>  With cheese, the video preview looks ok, but video capture is
> >>>>>>>>  unusable - the video stutters badly at low resolution, and the capture
> >>>>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
> >>>>>>>>  of
> >>>>>>>>  frames no more get captured).
> >>>>>>>
> >>>>>>
> >>>>>>  Probably the same situation as above (incomplete or empty frames)
> >>>>>>
> >>>>>>
> >>>>>>  You should also increase uvc video verbosity and check dmesg for errors.
> >>>>>>
> >>>>>>  From the looks of it I would say you are having some hardware sync
> >>>>>>  issues, did you try all possible resolutions and frame rates ?
> >>>>>>  Do these issues happen in all formats
> >>>>>>
> >>>>>>  Regards,
> >>>>>>  Paulo
> >>>>>>
> >>>>
> >>>> I've looked through the traces I've gotten with this webcam a little and
> >>>> noticed something that may help.  The out of sync errors are always starts
> >>>> with a sequence like this:
> >>>>
> >>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
> >>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
> >>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
> >>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
> >>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> >>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
> >>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
> >>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> >>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
> >>>>
> >>>> I've added a couple of fields to the frame complete messages to indicate
> >>>> which buffer is marked as complete and how many bytes were delivered to
> >>>> it.
> >>>>
> >>>> Most frames are terminated with EOF, but occasionally an FID and EOF
> >>>> are found in the same packet. So two buffers are marked as completed, but
> >>>> the second one shouldn't be (I don't think).
> >>>>
> >>>> Any advice on where to look next?
> >>>
> >>> Try fid quirk:
> >>> uvcvideo quirks=0x10
> >>>
> >>> for more quirks see:
> >>> grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
> >>> UVC_QUIRK_STATUS_INTERVAL 0x00000001
> >>> UVC_QUIRK_PROBE_MINMAX 0x00000002
> >>> UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
> >>> UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
> >>> UVC_QUIRK_STREAM_NO_FID 0x00000010
> >>> UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
> >>> UVC_QUIRK_FIX_BANDWIDTH 0x00000080
> >>> UVC_QUIRK_PROBE_DEF 0x00000100
> >>> UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
> >>>
> >>> --
> >>> Regards,
> >>>        Alexey
> >>>
> >>>
> >>
> >> the fid quirk actually makes it quite a bit worse - many more out of sync
> >> errors.  None of the other quirks (individually) solve the issue.
> >>
> >> I stuck in a crude hack to ignore the EOF that is found in the same packet
> >> as the fid toggle, and then the number of sync errors is dramatically
> >> reduced, but there are still some bad frames.  What next?
> >
> > Am i correct, your trace is for mjpeg format?
> > Becouse buffers have different size, with uncompressed stream should get
> > always same size.
> > There are two way to mark frame as complete, at frame beginning (FID) or
> > at frame end (EOF). EOF is optional, FID is important. Some cams do not
> > do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
> > But we do not have EOF quirk. Let us try to ignore EOF, there is
> > attached patch.
> >
> > -- 
> > Regards,
> >        Alexey
> >
> Hi,
> 
> With your patch the sync errors are almost completely gone, but there are 
> still corrupt frames - YUYV output is much worse than before (yes - the 
> earlier traces were MJPG).
> 
> This is from YUYV at 640x480, 30fps
> things are good for a while but then:
> 
> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 3 (4, 614400 bytes).
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 12 09:36:14 uvcvideo: Queuing buffer 3.
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 0. bytes: 150952
> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 1. bytes: 2024
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 0 (4, 150952 bytes).
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 12 09:36:14 uvcvideo: Queuing buffer 0.
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 1 (4, 2024 bytes).
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 12 09:36:14 uvcvideo: Queuing buffer 1.
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 2. bytes: 461400
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 2 (4, 461400 bytes).
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
> Jun 12 09:36:14 uvcvideo: Queuing buffer 2.
> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
> 
> where interestingly - the 150952+2024+461400 = 614376, which is 24 bytes 
> short of 614400.  The headers are 12 bytes long.  Seems like a weird conincidence.

"Dropping payload (out of sync)" say nothing but: FID was not tugged at
the time we was expecting it.

I just realized: NO_FID quirk, do not disables FID handling if there is
some wrong FID bit appear. It assume webcam do not use FID bit at all.

Try attached patch and load module with NO_FID quirk - quirks=0x10

-- 
Regards,
        Alexey
-------------- next part --------------
A non-text attachment was scrubbed...
Name: uvc.diff
Type: text/x-patch
Size: 667 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110613/7a876fdf/attachment.bin>

From michal at physics.ubc.ca  Mon Jun 13 18:37:43 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Mon, 13 Jun 2011 09:37:43 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1307979375.7607.7.camel@zwerg>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
	<alpine.LNX.2.00.1106122059360.16043@tristan>
	<1307979375.7607.7.camel@zwerg>
Message-ID: <alpine.LNX.2.00.1106130925420.4049@tristan>

On Mon, 13 Jun 2011, Alexey Fisher wrote:

> On So, 2011-06-12 at 21:05 -0700, Carl Michal wrote:
>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
>>
>>> Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
>>>>
>>>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
>>>>
>>>>> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
>>>>>>>>
>>>>>>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>>>>>>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>>>>>>>>>>  Hello,
>>>>>>>>>>
>>>>>>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
>>>>>>>>>>  identifies
>>>>>>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
>>>>>>>>>>  built
>>>>>>>>>>  in to a Dell XPS-15 (L501X).
>>>>>>>>>>
>>>>>>>>>>  The uvcvideo module works, but the video stutters and has some
>>>>>>>>>>  distortions, even at low resolutions and frame rates.
>>>>>>>>>>
>>>>>>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
>>>>>>>>>>  buffer ..."
>>>>>>>>>>  messages occur with most glitches.
>>>>>>>>
>>>>>>>>  I would say the camera is not returning the full frame (or maybe empty
>>>>>>>>  ones) for same reason.
>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>  If the output is set to YV12, the errors look like:
>>>>>>>>>>
>>>>>>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>>>>>>>>>>  Error grabbing image
>>>>>>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
>>>>>>>>>>  parsing JPEG header: Not a JPG file ?
>>>>>>>>>>
>>>>>>>>
>>>>>>>>  YV12 is a format returned by libv4l, and it's obtained by
>>>>>>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
>>>>>>>>  format like above.
>>>>>>>>
>>>>>>>>>>  With cheese, the video preview looks ok, but video capture is
>>>>>>>>>>  unusable - the video stutters badly at low resolution, and the capture
>>>>>>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
>>>>>>>>>>  of
>>>>>>>>>>  frames no more get captured).
>>>>>>>>>
>>>>>>>>
>>>>>>>>  Probably the same situation as above (incomplete or empty frames)
>>>>>>>>
>>>>>>>>
>>>>>>>>  You should also increase uvc video verbosity and check dmesg for errors.
>>>>>>>>
>>>>>>>>  From the looks of it I would say you are having some hardware sync
>>>>>>>>  issues, did you try all possible resolutions and frame rates ?
>>>>>>>>  Do these issues happen in all formats
>>>>>>>>
>>>>>>>>  Regards,
>>>>>>>>  Paulo
>>>>>>>>
>>>>>>
>>>>>> I've looked through the traces I've gotten with this webcam a little and
>>>>>> noticed something that may help.  The out of sync errors are always starts
>>>>>> with a sequence like this:
>>>>>>
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>>>>
>>>>>> I've added a couple of fields to the frame complete messages to indicate
>>>>>> which buffer is marked as complete and how many bytes were delivered to
>>>>>> it.
>>>>>>
>>>>>> Most frames are terminated with EOF, but occasionally an FID and EOF
>>>>>> are found in the same packet. So two buffers are marked as completed, but
>>>>>> the second one shouldn't be (I don't think).
>>>>>>
>>>>>> Any advice on where to look next?
>>>>>
>>>>> Try fid quirk:
>>>>> uvcvideo quirks=0x10
>>>>>
>>>>> for more quirks see:
>>>>> grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
>>>>> UVC_QUIRK_STATUS_INTERVAL 0x00000001
>>>>> UVC_QUIRK_PROBE_MINMAX 0x00000002
>>>>> UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
>>>>> UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
>>>>> UVC_QUIRK_STREAM_NO_FID 0x00000010
>>>>> UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
>>>>> UVC_QUIRK_FIX_BANDWIDTH 0x00000080
>>>>> UVC_QUIRK_PROBE_DEF 0x00000100
>>>>> UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
>>>>>
>>>>> --
>>>>> Regards,
>>>>>        Alexey
>>>>>
>>>>>
>>>>
>>>> the fid quirk actually makes it quite a bit worse - many more out of sync
>>>> errors.  None of the other quirks (individually) solve the issue.
>>>>
>>>> I stuck in a crude hack to ignore the EOF that is found in the same packet
>>>> as the fid toggle, and then the number of sync errors is dramatically
>>>> reduced, but there are still some bad frames.  What next?
>>>
>>> Am i correct, your trace is for mjpeg format?
>>> Becouse buffers have different size, with uncompressed stream should get
>>> always same size.
>>> There are two way to mark frame as complete, at frame beginning (FID) or
>>> at frame end (EOF). EOF is optional, FID is important. Some cams do not
>>> do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
>>> But we do not have EOF quirk. Let us try to ignore EOF, there is
>>> attached patch.
>>>
>>> --
>>> Regards,
>>>        Alexey
>>>
>> Hi,
>>
>> With your patch the sync errors are almost completely gone, but there are
>> still corrupt frames - YUYV output is much worse than before (yes - the
>> earlier traces were MJPG).
>>
>> This is from YUYV at 640x480, 30fps
>> things are good for a while but then:
>>
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 3 (4, 614400 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 3.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 0. bytes: 150952
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 1. bytes: 2024
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 0 (4, 150952 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 0.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 1 (4, 2024 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 1.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 2. bytes: 461400
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 2 (4, 461400 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 2.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
>>
>> where interestingly - the 150952+2024+461400 = 614376, which is 24 bytes
>> short of 614400.  The headers are 12 bytes long.  Seems like a weird conincidence.
>
> "Dropping payload (out of sync)" say nothing but: FID was not tugged at
> the time we was expecting it.
>
> I just realized: NO_FID quirk, do not disables FID handling if there is
> some wrong FID bit appear. It assume webcam do not use FID bit at all.
>
> Try attached patch and load module with NO_FID quirk - quirks=0x10
>
> -- 
> Regards,
>        Alexey
>
Hi,

I think you nailed it.  Every frame looks perfect now.  The trace shows 
a few of these:

Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)

but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480 
anyway) - in MJPG all the frames have the right size.

There is a some weirdness with frame rates depending on the exposure 
setting: 1) Exposure, auto gives 4 options: auto priority mode, 
manual mode, shutter priority mode, and aperture priority mode.  Auto and 
shutter don't seem to be settable (errors from guvcview when chosen). 
There is also an "Exposure, auto priority" checkbox.

Frame rates drop dramatically in manual mode (to 10-15fps from 30).

But I can't really complain at this point - the corrupt frames are gone.
Will that quirk be added to the driver (usb id is: 0408:2fb1)?

Thanks,

Carl








From michal at physics.ubc.ca  Mon Jun 13 19:01:38 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Mon, 13 Jun 2011 10:01:38 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1307979375.7607.7.camel@zwerg>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
	<alpine.LNX.2.00.1106122059360.16043@tristan>
	<1307979375.7607.7.camel@zwerg>
Message-ID: <alpine.LNX.2.00.1106130959420.4370@tristan>

On Mon, 13 Jun 2011, Alexey Fisher wrote:

> On So, 2011-06-12 at 21:05 -0700, Carl Michal wrote:
>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
>>
>>> Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
>>>>
>>>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
>>>>
>>>>> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
>>>>>>>>
>>>>>>>>  2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>>>>>>>>>  On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>>>>>>>>>>  Hello,
>>>>>>>>>>
>>>>>>>>>>  I'm having some trouble with a Quanta integrated webcam.  It
>>>>>>>>>>  identifies
>>>>>>>>>>  itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is
>>>>>>>>>>  built
>>>>>>>>>>  in to a Dell XPS-15 (L501X).
>>>>>>>>>>
>>>>>>>>>>  The uvcvideo module works, but the video stutters and has some
>>>>>>>>>>  distortions, even at low resolutions and frame rates.
>>>>>>>>>>
>>>>>>>>>>  With the Camera Output set to MJPG (in guvcview) "Ignoring empty
>>>>>>>>>>  buffer ..."
>>>>>>>>>>  messages occur with most glitches.
>>>>>>>>
>>>>>>>>  I would say the camera is not returning the full frame (or maybe empty
>>>>>>>>  ones) for same reason.
>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>  If the output is set to YV12, the errors look like:
>>>>>>>>>>
>>>>>>>>>>  VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
>>>>>>>>>>  Error grabbing image
>>>>>>>>>>  libv4l2: error converting / decoding frame data: v4l-convert: error
>>>>>>>>>>  parsing JPEG header: Not a JPG file ?
>>>>>>>>>>
>>>>>>>>
>>>>>>>>  YV12 is a format returned by libv4l, and it's obtained by
>>>>>>>>  decompressing the MJPG stream, so in fact the camera is still in MJPG
>>>>>>>>  format like above.
>>>>>>>>
>>>>>>>>>>  With cheese, the video preview looks ok, but video capture is
>>>>>>>>>>  unusable - the video stutters badly at low resolution, and the capture
>>>>>>>>>>  hangs at high resolution (the program doesn't hang, but after a couple
>>>>>>>>>>  of
>>>>>>>>>>  frames no more get captured).
>>>>>>>>>
>>>>>>>>
>>>>>>>>  Probably the same situation as above (incomplete or empty frames)
>>>>>>>>
>>>>>>>>
>>>>>>>>  You should also increase uvc video verbosity and check dmesg for errors.
>>>>>>>>
>>>>>>>>  From the looks of it I would say you are having some hardware sync
>>>>>>>>  issues, did you try all possible resolutions and frame rates ?
>>>>>>>>  Do these issues happen in all formats
>>>>>>>>
>>>>>>>>  Regards,
>>>>>>>>  Paulo
>>>>>>>>
>>>>>>
>>>>>> I've looked through the traces I've gotten with this webcam a little and
>>>>>> noticed something that may help.  The out of sync errors are always starts
>>>>>> with a sequence like this:
>>>>>>
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, bytes: 64684.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, bytes: 64728.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
>>>>>> Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.
>>>>>> Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>>>>>> Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
>>>>>> Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>>>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>>>> Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>>>>>>
>>>>>> I've added a couple of fields to the frame complete messages to indicate
>>>>>> which buffer is marked as complete and how many bytes were delivered to
>>>>>> it.
>>>>>>
>>>>>> Most frames are terminated with EOF, but occasionally an FID and EOF
>>>>>> are found in the same packet. So two buffers are marked as completed, but
>>>>>> the second one shouldn't be (I don't think).
>>>>>>
>>>>>> Any advice on where to look next?
>>>>>
>>>>> Try fid quirk:
>>>>> uvcvideo quirks=0x10
>>>>>
>>>>> for more quirks see:
>>>>> grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
>>>>> UVC_QUIRK_STATUS_INTERVAL 0x00000001
>>>>> UVC_QUIRK_PROBE_MINMAX 0x00000002
>>>>> UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
>>>>> UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
>>>>> UVC_QUIRK_STREAM_NO_FID 0x00000010
>>>>> UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
>>>>> UVC_QUIRK_FIX_BANDWIDTH 0x00000080
>>>>> UVC_QUIRK_PROBE_DEF 0x00000100
>>>>> UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
>>>>>
>>>>> --
>>>>> Regards,
>>>>>        Alexey
>>>>>
>>>>>
>>>>
>>>> the fid quirk actually makes it quite a bit worse - many more out of sync
>>>> errors.  None of the other quirks (individually) solve the issue.
>>>>
>>>> I stuck in a crude hack to ignore the EOF that is found in the same packet
>>>> as the fid toggle, and then the number of sync errors is dramatically
>>>> reduced, but there are still some bad frames.  What next?
>>>
>>> Am i correct, your trace is for mjpeg format?
>>> Becouse buffers have different size, with uncompressed stream should get
>>> always same size.
>>> There are two way to mark frame as complete, at frame beginning (FID) or
>>> at frame end (EOF). EOF is optional, FID is important. Some cams do not
>>> do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
>>> But we do not have EOF quirk. Let us try to ignore EOF, there is
>>> attached patch.
>>>
>>> --
>>> Regards,
>>>        Alexey
>>>
>> Hi,
>>
>> With your patch the sync errors are almost completely gone, but there are
>> still corrupt frames - YUYV output is much worse than before (yes - the
>> earlier traces were MJPG).
>>
>> This is from YUYV at 640x480, 30fps
>> things are good for a while but then:
>>
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 3 (4, 614400 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 3.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 0. bytes: 150952
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 1. bytes: 2024
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 0 (4, 150952 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 0.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 1 (4, 2024 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 1.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 2. bytes: 461400
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> Jun 12 09:36:14 uvcvideo: Dequeuing buffer 2 (4, 461400 bytes).
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> Jun 12 09:36:14 uvcvideo: Queuing buffer 2.
>> Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. bytes: 614400
>>
>> where interestingly - the 150952+2024+461400 = 614376, which is 24 bytes
>> short of 614400.  The headers are 12 bytes long.  Seems like a weird conincidence.
>
> "Dropping payload (out of sync)" say nothing but: FID was not tugged at
> the time we was expecting it.
>
> I just realized: NO_FID quirk, do not disables FID handling if there is
> some wrong FID bit appear. It assume webcam do not use FID bit at all.
>
> Try attached patch and load module with NO_FID quirk - quirks=0x10
>
> -- 
> Regards,
>        Alexey
>

I spoke a little too soon - this is definitely a huge improvement, but 
leaving it running longer, and after turning of the tracing, there are 
still some bad frames.  I'll try to see if I can make this more 
reproducible.

Carl



From conwaytomas at yahoo.co.uk  Mon Jun 13 19:32:28 2011
From: conwaytomas at yahoo.co.uk (Tomas Conway)
Date: Mon, 13 Jun 2011 18:32:28 +0100
Subject: [Linux-uvc-devel] Webcam works intermittently - [18e3:9512]
 built-in in Hannspree SN12E2 netbook
Message-ID: <4DF649AC.6000003@yahoo.co.uk>

Machine: Hannspree SN12E2
Webcam/mic ID: [18e3:9512], Fitipower Integrated Technology Inc

Attachments
***********

lsusb - Output of 'lsusb -v -d 18e3:9512'

************

Sometimes the webcam works on bootup (or a few mintues after), sometimes 
it works immediately after I run lsusb, mostly it doesn't work at all. 
Sometimes the laptop will be on for hours before the webcam spontaneouly 
works. Usually within a couple of hours of working it will spontaneously 
stop working.

My fear is that there is hardware problem - is it possible to determine 
whether or not this is the case?


Log example:
[10415.476069] usb 2-4: new high speed USB device using ehci_hcd and 
address 7
[10415.596080] usb 2-4: device descriptor read/64, error 4
[10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10415.988171] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
[10421.150795] usb 2-4: USB disconnect, address 7
[10421.160055] cannot submit datapipe for urb 0, error -19: no device
[10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10421.600054] usb 2-4: new high speed USB device using ehci_hcd and 
address 9
[10422.132066] usb 2-4: device not accepting address 9, error -71
[10422.244107] usb 2-4: new high speed USB device using ehci_hcd and 
address 10
[10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10422.532425] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
[10444.081927] usb 2-4: USB disconnect, address 10
[10444.348099] usb 2-4: new high speed USB device using ehci_hcd and 
address 11
[10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
[10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
[10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
[10444.876058] usb 7-2: new full speed USB device using uhci_hcd and 
address 2
[10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
[10456.280046] usb 2-4: new high speed USB device using ehci_hcd and 
address 12
[10456.812039] usb 2-4: device not accepting address 12, error -71
[10456.924056] usb 2-4: new high s[10415.476069] usb 2-4: new high speed 
USB device using ehci_hcd and address 7
[10415.596080] usb 2-4: device descriptor read/64, error 4
[10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10415.988171] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
[10421.150795] usb 2-4: USB disconnect, address 7
[10421.160055] cannot submit datapipe for urb 0, error -19: no device
[10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10421.600054] usb 2-4: new high speed USB device using ehci_hcd and 
address 9
[10422.132066] usb 2-4: device not accepting address 9, error -71
[10422.244107] usb 2-4: new high speed USB device using ehci_hcd and 
address 10
[10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10422.532425] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
[10444.081927] usb 2-4: USB disconnect, address 10
[10444.348099] usb 2-4: new high speed USB device using ehci_hcd and 
address 11
[10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
[10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
[10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
[10444.876058] usb 7-2: new full speed USB device using uhci_hcd and 
address 2
[10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
[10456.280046] usb 2-4: new high speed USB device using ehci_hcd and 
address 12
[10456.812039] usb 2-4: device not accepting address 12, error -71
[10456.924056] usb 2-4: new high speed USB device using ehci_hcd and 
address 13
[10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.228083] usb 2-4: new high speed USB device using ehci_hcd and 
address 14
[10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.728073] usb 2-4: new high speed USB device using ehci_hcd and 
address 16
[10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
[10458.064094] usb 7-2: new full speed USB device using uhci_hcd and 
address 3
[10458.292116] usb 7-2: not running at top speed; connect to a high 
speed hub
[10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10458.436312] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
[10462.300114] usb 7-2: USB disconnect, address 3
[10462.304073] cannot submit datapipe for urb 0, error -19: no device
peed USB device using ehci_hcd and address 13
[10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.228083] usb 2-4: new high speed USB device using ehci_hcd and 
address 14
[10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.728073] usb 2-4: new high speed USB device using ehci_hcd and 
address 16
[10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
[10458.064094] usb 7-2: new full speed USB device using uhci_hcd and 
address 3
[10458.292116] usb 7-2: not running at top speed; connect to a high 
speed hub
[10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10458.436312] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
[10462.300114] usb 7-2: USB disconnect, address 3
[10462.304073] cannot submit datapipe for urb 0, error -19: no device

Also, sometimes I get endless "unable to enumerate USB device" messages



From conwaytomas at yahoo.co.uk  Mon Jun 13 19:50:00 2011
From: conwaytomas at yahoo.co.uk (Tomas Conway)
Date: Mon, 13 Jun 2011 18:50:00 +0100
Subject: [Linux-uvc-devel] Webcam works intermittently - [18e3:9512]
 built-in in Hannspree SN12E2 netbook
Message-ID: <4DF64DC8.6030409@yahoo.co.uk>

Sorry for the double post - forgot to include the attachment last time.

Machine: Hannspree SN12E2
Webcam/mic ID: [18e3:9512], Fitipower Integrated Technology Inc

Attachments
***********

lsusb - Output of 'lsusb -v -d 18e3:9512'

************

Sometimes the webcam works on bootup (or a few mintues after), sometimes 
it works immediately after I run lsusb, mostly it doesn't work at all. 
Sometimes the laptop will be on for hours before the webcam spontaneouly 
works. Usually within a couple of hours of working it will spontaneously 
stop working.

My fear is that there is hardware problem - is it possible to determine 
whether or not this is the case?


Log example:
[10415.476069] usb 2-4: new high speed USB device using ehci_hcd and 
address 7
[10415.596080] usb 2-4: device descriptor read/64, error 4
[10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10415.988171] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
[10421.150795] usb 2-4: USB disconnect, address 7
[10421.160055] cannot submit datapipe for urb 0, error -19: no device
[10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10421.600054] usb 2-4: new high speed USB device using ehci_hcd and 
address 9
[10422.132066] usb 2-4: device not accepting address 9, error -71
[10422.244107] usb 2-4: new high speed USB device using ehci_hcd and 
address 10
[10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10422.532425] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
[10444.081927] usb 2-4: USB disconnect, address 10
[10444.348099] usb 2-4: new high speed USB device using ehci_hcd and 
address 11
[10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
[10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
[10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
[10444.876058] usb 7-2: new full speed USB device using uhci_hcd and 
address 2
[10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
[10456.280046] usb 2-4: new high speed USB device using ehci_hcd and 
address 12
[10456.812039] usb 2-4: device not accepting address 12, error -71
[10456.924056] usb 2-4: new high s[10415.476069] usb 2-4: new high speed 
USB device using ehci_hcd and address 7
[10415.596080] usb 2-4: device descriptor read/64, error 4
[10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10415.988171] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
[10421.150795] usb 2-4: USB disconnect, address 7
[10421.160055] cannot submit datapipe for urb 0, error -19: no device
[10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10421.600054] usb 2-4: new high speed USB device using ehci_hcd and 
address 9
[10422.132066] usb 2-4: device not accepting address 9, error -71
[10422.244107] usb 2-4: new high speed USB device using ehci_hcd and 
address 10
[10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10422.532425] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
[10444.081927] usb 2-4: USB disconnect, address 10
[10444.348099] usb 2-4: new high speed USB device using ehci_hcd and 
address 11
[10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
[10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
[10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
[10444.876058] usb 7-2: new full speed USB device using uhci_hcd and 
address 2
[10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
[10456.280046] usb 2-4: new high speed USB device using ehci_hcd and 
address 12
[10456.812039] usb 2-4: device not accepting address 12, error -71
[10456.924056] usb 2-4: new high speed USB device using ehci_hcd and 
address 13
[10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.228083] usb 2-4: new high speed USB device using ehci_hcd and 
address 14
[10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.728073] usb 2-4: new high speed USB device using ehci_hcd and 
address 16
[10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
[10458.064094] usb 7-2: new full speed USB device using uhci_hcd and 
address 3
[10458.292116] usb 7-2: not running at top speed; connect to a high 
speed hub
[10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10458.436312] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
[10462.300114] usb 7-2: USB disconnect, address 3
[10462.304073] cannot submit datapipe for urb 0, error -19: no device
peed USB device using ehci_hcd and address 13
[10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.228083] usb 2-4: new high speed USB device using ehci_hcd and 
address 14
[10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
[10457.728073] usb 2-4: new high speed USB device using ehci_hcd and 
address 16
[10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
[10458.064094] usb 7-2: new full speed USB device using uhci_hcd and 
address 3
[10458.292116] usb 7-2: not running at top speed; connect to a high 
speed hub
[10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
[10458.436312] input: USB 2.0 Camera as 
/devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
[10462.300114] usb 7-2: USB disconnect, address 3
[10462.304073] cannot submit datapipe for urb 0, error -19: no device

Also, sometimes I get endless "unable to enumerate USB device" messages

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110613/e48a65bd/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: lsusb
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110613/e48a65bd/attachment.ksh>

From michal at physics.ubc.ca  Tue Jun 14 07:48:49 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Mon, 13 Jun 2011 22:48:49 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106130925420.4049@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
	<alpine.LNX.2.00.1106122059360.16043@tristan>
	<1307979375.7607.7.camel@zwerg>
	<alpine.LNX.2.00.1106130925420.4049@tristan>
Message-ID: <alpine.LNX.2.00.1106132201500.17792@tristan>

On Mon, 13 Jun 2011, Carl Michal wrote:

> On Mon, 13 Jun 2011, Alexey Fisher wrote:
>
>>  On So, 2011-06-12 at 21:05 -0700, Carl Michal wrote:
>> >  On Sun, 12 Jun 2011, Alexey Fisher wrote:
>> > 
>> > >  Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
>> > > > 
>> > > >  On Sun, 12 Jun 2011, Alexey Fisher wrote:
>> > > > 
>> > > > >  On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:
>> > > > > > > > 
>> > > > > > > >   2011/6/7 Alexey Fisher <bug-track at fisher-privat.net>:
>> > > > > > > > >   On Mo, 2011-06-06 at 17:31 -0700, Carl Michal wrote:
>> > > > > > > > > >   Hello,
>> > > > > > > > > > 
>> > > > > > > > > >   I'm having some trouble with a Quanta integrated 
>> > > > > > > > > >   webcam.  It
>> > > > > > > > > >   identifies
>> > > > > > > > > >   itself as: Laptop_Integrated_Webcam_2HDM, usbid: 
>> > > > > > > > > >   0408:2fb1.  This is
>> > > > > > > > > >   built
>> > > > > > > > > >   in to a Dell XPS-15 (L501X).
>> > > > > > > > > > 
>> > > > > > > > > >   The uvcvideo module works, but the video stutters and 
>> > > > > > > > > >   has some
>> > > > > > > > > >   distortions, even at low resolutions and frame rates.
>> > > > > > > > > > 
>> > > > > > > > > >   With the Camera Output set to MJPG (in guvcview) 
>> > > > > > > > > >   "Ignoring empty
>> > > > > > > > > >   buffer ..."
>> > > > > > > > > >   messages occur with most glitches.
>> > > > > > > > 
>> > > > > > > >   I would say the camera is not returning the full frame (or 
>> > > > > > > >   maybe empty
>> > > > > > > >   ones) for same reason.
>> > > > > > > > 
>> > > > > > > > > > 
>> > > > > > > > > >   If the output is set to YV12, the errors look like:
>> > > > > > > > > > 
>> > > > > > > > > >   VIDIOC_DQBUF - Unable to dequeue buffer : Input/output 
>> > > > > > > > > >   error
>> > > > > > > > > >   Error grabbing image
>> > > > > > > > > >   libv4l2: error converting / decoding frame data: 
>> > > > > > > > > >   v4l-convert: error
>> > > > > > > > > >   parsing JPEG header: Not a JPG file ?
>> > > > > > > > > > 
>> > > > > > > > 
>> > > > > > > >   YV12 is a format returned by libv4l, and it's obtained by
>> > > > > > > >   decompressing the MJPG stream, so in fact the camera is 
>> > > > > > > >   still in MJPG
>> > > > > > > >   format like above.
>> > > > > > > > 
>> > > > > > > > > >   With cheese, the video preview looks ok, but video 
>> > > > > > > > > >   capture is
>> > > > > > > > > >   unusable - the video stutters badly at low resolution, 
>> > > > > > > > > >   and the capture
>> > > > > > > > > >   hangs at high resolution (the program doesn't hang, but 
>> > > > > > > > > >   after a couple
>> > > > > > > > > >   of
>> > > > > > > > > >   frames no more get captured).
>> > > > > > > > > 
>> > > > > > > > 
>> > > > > > > >   Probably the same situation as above (incomplete or empty 
>> > > > > > > >   frames)
>> > > > > > > > 
>> > > > > > > > 
>> > > > > > > >   You should also increase uvc video verbosity and check 
>> > > > > > > >   dmesg for errors.
>> > > > > > > > 
>> > > > > > > >   From the looks of it I would say you are having some 
>> > > > > > > >   hardware sync
>> > > > > > > >   issues, did you try all possible resolutions and frame 
>> > > > > > > >   rates ?
>> > > > > > > >   Do these issues happen in all formats
>> > > > > > > > 
>> > > > > > > >   Regards,
>> > > > > > > >   Paulo
>> > > > > > > > 
>> > > > > > 
>> > > > > >  I've looked through the traces I've gotten with this webcam a 
>> > > > > >  little and
>> > > > > >  noticed something that may help.  The out of sync errors are 
>> > > > > >  always starts
>> > > > > >  with a sequence like this:
>> > > > > > 
>> > > > > >  Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 1, 
>> > > > > >  bytes: 64684.
>> > > > > >  Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dequeuing buffer 1 (4, 64684 bytes).
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Queuing buffer 1.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 2, 
>> > > > > >  bytes: 64728.
>> > > > > >  Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dequeuing buffer 2 (4, 64728 bytes).
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Queuing buffer 2.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: Frame complete (FID bit toggled) buf: 
>> > > > > >  3, bytes: 63504.
>> > > > > >  Jun 11 21:41:59 uvcvideo: Frame complete (EOF found) buf: 0, 
>> > > > > >  bytes: 1072.
>> > > > > >  Jun 11 21:41:59 uvcvideo: EOF in empty payload.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dequeuing buffer 3 (4, 63504 bytes).
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Queuing buffer 3.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dequeuing buffer 0 (4, 1072 bytes).
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> > > > > >  Jun 11 21:41:59 uvcvideo: Queuing buffer 0.
>> > > > > >  Jun 11 21:41:59 uvcvideo: uvc_v4l2_poll
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>> > > > > >  Jun 11 21:41:59 uvcvideo: Dropping payload (out of sync).
>> > > > > > 
>> > > > > >  I've added a couple of fields to the frame complete messages to 
>> > > > > >  indicate
>> > > > > >  which buffer is marked as complete and how many bytes were 
>> > > > > >  delivered to
>> > > > > >  it.
>> > > > > > 
>> > > > > >  Most frames are terminated with EOF, but occasionally an FID and 
>> > > > > >  EOF
>> > > > > >  are found in the same packet. So two buffers are marked as 
>> > > > > >  completed, but
>> > > > > >  the second one shouldn't be (I don't think).
>> > > > > > 
>> > > > > >  Any advice on where to look next?
>> > > > > 
>> > > > >  Try fid quirk:
>> > > > >  uvcvideo quirks=0x10
>> > > > > 
>> > > > >  for more quirks see:
>> > > > >  grep QUIRK linux-2.6/drivers/media/video/uvc/uvcvideo.h
>> > > > >  UVC_QUIRK_STATUS_INTERVAL 0x00000001
>> > > > >  UVC_QUIRK_PROBE_MINMAX 0x00000002
>> > > > >  UVC_QUIRK_PROBE_EXTRAFIELDS 0x00000004
>> > > > >  UVC_QUIRK_BUILTIN_ISIGHT 0x00000008
>> > > > >  UVC_QUIRK_STREAM_NO_FID 0x00000010
>> > > > >  UVC_QUIRK_IGNORE_SELECTOR_UNIT 0x00000020
>> > > > >  UVC_QUIRK_FIX_BANDWIDTH 0x00000080
>> > > > >  UVC_QUIRK_PROBE_DEF 0x00000100
>> > > > >  UVC_QUIRK_RESTRICT_FRAME_RATE 0x00000200
>> > > > > 
>> > > > >  --
>> > > > >  Regards,
>> > > > >         Alexey
>> > > > > 
>> > > > > 
>> > > > 
>> > > >  the fid quirk actually makes it quite a bit worse - many more out of 
>> > > >  sync
>> > > >  errors.  None of the other quirks (individually) solve the issue.
>> > > > 
>> > > >  I stuck in a crude hack to ignore the EOF that is found in the same 
>> > > >  packet
>> > > >  as the fid toggle, and then the number of sync errors is 
>> > > >  dramatically
>> > > >  reduced, but there are still some bad frames.  What next?
>> > > 
>> > >  Am i correct, your trace is for mjpeg format?
>> > >  Becouse buffers have different size, with uncompressed stream should 
>> > >  get
>> > >  always same size.
>> > >  There are two way to mark frame as complete, at frame beginning (FID) 
>> > >  or
>> > >  at frame end (EOF). EOF is optional, FID is important. Some cams do 
>> > >  not
>> > >  do FID or brake it, in this case we use QUIRK_NO_FID, so EOF is used.
>> > >  But we do not have EOF quirk. Let us try to ignore EOF, there is
>> > >  attached patch.
>> > > 
>> > >  --
>> > >  Regards,
>> > >         Alexey
>> > > 
>> >  Hi,
>> > 
>> >  With your patch the sync errors are almost completely gone, but there 
>> >  are
>> >  still corrupt frames - YUYV output is much worse than before (yes - the
>> >  earlier traces were MJPG).
>> > 
>> >  This is from YUYV at 640x480, 30fps
>> >  things are good for a while but then:
>> > 
>> >  Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. 
>> >  bytes: 614400
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> >  Jun 12 09:36:14 uvcvideo: Dequeuing buffer 3 (4, 614400 bytes).
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> >  Jun 12 09:36:14 uvcvideo: Queuing buffer 3.
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 0. 
>> >  bytes: 150952
>> >  Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 1. 
>> >  bytes: 2024
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> >  Jun 12 09:36:14 uvcvideo: Dequeuing buffer 0 (4, 150952 bytes).
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> >  Jun 12 09:36:14 uvcvideo: Queuing buffer 0.
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> >  Jun 12 09:36:14 uvcvideo: Dequeuing buffer 1 (4, 2024 bytes).
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> >  Jun 12 09:36:14 uvcvideo: Queuing buffer 1.
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 2. 
>> >  bytes: 461400
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_DQBUF)
>> >  Jun 12 09:36:14 uvcvideo: Dequeuing buffer 2 (4, 461400 bytes).
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_ioctl(VIDIOC_QBUF)
>> >  Jun 12 09:36:14 uvcvideo: Queuing buffer 2.
>> >  Jun 12 09:36:14 uvcvideo: uvc_v4l2_poll
>> >  Jun 12 09:36:14 uvcvideo: Frame complete (FID bit toggled) buf: 3. 
>> >  bytes: 614400
>> > 
>> >  where interestingly - the 150952+2024+461400 = 614376, which is 24 bytes
>> >  short of 614400.  The headers are 12 bytes long.  Seems like a weird 
>> >  conincidence.
>>
>>  "Dropping payload (out of sync)" say nothing but: FID was not tugged at
>>  the time we was expecting it.
>>
>>  I just realized: NO_FID quirk, do not disables FID handling if there is
>>  some wrong FID bit appear. It assume webcam do not use FID bit at all.
>>
>>  Try attached patch and load module with NO_FID quirk - quirks=0x10
>>
>>  --
>>  Regards,
>>         Alexey
>> 
> Hi,
>
> I think you nailed it.  Every frame looks perfect now.  The trace shows a few 
> of these:
>
> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>
> but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480 
> anyway) - in MJPG all the frames have the right size.
>
> There is a some weirdness with frame rates depending on the exposure setting: 
> 1) Exposure, auto gives 4 options: auto priority mode, manual mode, shutter 
> priority mode, and aperture priority mode.  Auto and shutter don't seem to be 
> settable (errors from guvcview when chosen). There is also an "Exposure, auto 
> priority" checkbox.
>
> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
>
> But I can't really complain at this point - the corrupt frames are gone.
> Will that quirk be added to the driver (usb id is: 0408:2fb1)?
>
> Thanks,
>
> Carl
>
>
>
>
>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>

Hi,

it seems like I am much better off by fully disabling FID (with your 
patch) than before.  With the patch, YUYV frames are _always_ the right 
size.  There are still some problems:

1) corrupt frames - with part of the image missing or the image displaced. 
Sometimes (but definitely not always) these occur at the same time as a 
trace message saying the error bit is set.

2) sometimes the camera just won't start.  when guvcview (or luvcview) is 
started, no frames come back from the camera.  There is a light next to 
the camera that comes on to indicate it should be active, but no frames 
arrive.  There seems to be a fairly strong correlation with using luvcview 
(which from the traces seems to use some different mechanism to get frames from 
the driver from guvcview.  guvcview polls, luvcview doesn't).  Sometimes 
just restarting guvcview several times will work and the camera eventually 
starts.  Sometimes just changing resolution or frame rates succeeds in 
starting the camera.  I haven't found anything reproducible.  I do not 
think this is related to your patch, as it did happen once before your 
patch was applied. Unloading and reloading the uvcvideo and ehci_hcd 
modules does not consistently solve it. guvcview just lists:

  Could not grab image (select timeout): Resource temporarily unavailable

and the trace shows guvcview polling, but nothing else going on.

I have tried adding the other quirks to the FID quirk, but haven't seen 
any improvement with any others.

Thanks for you help -

Carl


From bug-track at fisher-privat.net  Tue Jun 14 09:39:47 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 14 Jun 2011 09:39:47 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106132201500.17792@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307428534.3274.6.camel@zwerg>
	<BANLkTinkUdkJm+Jv-80xhr2JaUjkZGV-Wg@mail.gmail.com>
	<alpine.LNX.2.00.1106071039430.6544@tristan>
	<alpine.LNX.2.00.1106112144060.7428@tristan>
	<1307857867.3259.11.camel@zwerg>
	<alpine.LNX.2.00.1106112323490.9731@tristan>
	<1307866833.5899.15.camel@mini>
	<alpine.LNX.2.00.1106122059360.16043@tristan>
	<1307979375.7607.7.camel@zwerg>
	<alpine.LNX.2.00.1106130925420.4049@tristan>
	<alpine.LNX.2.00.1106132201500.17792@tristan>
Message-ID: <1308037187.5663.10.camel@mini>

Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> >> 
> > Hi,
> >
> > I think you nailed it.  Every frame looks perfect now.  The trace shows a few 
> > of these:
> >
> > Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> >
> > but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480 
> > anyway) - in MJPG all the frames have the right size.
> >
> > There is a some weirdness with frame rates depending on the exposure setting: 
> > 1) Exposure, auto gives 4 options: auto priority mode, manual mode, shutter 
> > priority mode, and aperture priority mode.  Auto and shutter don't seem to be 
> > settable (errors from guvcview when chosen). There is also an "Exposure, auto 
> > priority" checkbox.
> >
> > Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> >
> > But I can't really complain at this point - the corrupt frames are gone.
> > Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> >
> > Thanks,
> >
> 
> Hi,
> 
> it seems like I am much better off by fully disabling FID (with your 
> patch) than before.  With the patch, YUYV frames are _always_ the right 
> size.  There are still some problems:
> 
> 1) corrupt frames - with part of the image missing or the image displaced. 
> Sometimes (but definitely not always) these occur at the same time as a 
> trace message saying the error bit is set.
> 
> 2) sometimes the camera just won't start.  when guvcview (or luvcview) is 
> started, no frames come back from the camera.  There is a light next to 
> the camera that comes on to indicate it should be active, but no frames 
> arrive.  There seems to be a fairly strong correlation with using luvcview 
> (which from the traces seems to use some different mechanism to get frames from 
> the driver from guvcview.  guvcview polls, luvcview doesn't).  Sometimes 
> just restarting guvcview several times will work and the camera eventually 
> starts.  Sometimes just changing resolution or frame rates succeeds in 
> starting the camera.  I haven't found anything reproducible.  I do not 
> think this is related to your patch, as it did happen once before your 
> patch was applied. Unloading and reloading the uvcvideo and ehci_hcd 
> modules does not consistently solve it. guvcview just lists:
> 
>   Could not grab image (select timeout): Resource temporarily unavailable
> 
> and the trace shows guvcview polling, but nothing else going on.
> 
> I have tried adding the other quirks to the FID quirk, but haven't seen 
> any improvement with any others.
> 
> Thanks for you help -
> 
> Carl

Webcam returns error in the middle of some frame, theoretically we
should drop complete frame. But current uvcvideo just gather data and
assume the cam will resend previous parts to complete the frame.

Try attached patch additionally to my previous one.
-- 
Regards,
        Alexey
-------------- next part --------------
A non-text attachment was scrubbed...
Name: uvc2.diff
Type: text/x-patch
Size: 464 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110614/c0058848/attachment.bin>

From bug-track at fisher-privat.net  Tue Jun 14 09:43:23 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 14 Jun 2011 09:43:23 +0200
Subject: [Linux-uvc-devel] Webcam works intermittently - [18e3:9512]
 built-in in Hannspree SN12E2 netbook
In-Reply-To: <4DF64DC8.6030409@yahoo.co.uk>
References: <4DF64DC8.6030409@yahoo.co.uk>
Message-ID: <1308037403.5663.13.camel@mini>

Hi Tomas,

all listed error come directly  from usb driver. uvcvideo driver do not
even have chance to talk with your cam. It should be some hardware
issue. Try to check the cable.

Am Montag, den 13.06.2011, 18:50 +0100 schrieb Tomas Conway:
> Sorry for the double post - forgot to include the attachment last
> time.
> 
> Machine: Hannspree SN12E2 
> Webcam/mic ID: [18e3:9512], Fitipower Integrated Technology Inc 
> 
> Attachments 
> *********** 
> 
> lsusb - Output of 'lsusb -v -d 18e3:9512' 
> 
> ************ 
> 
> Sometimes the webcam works on bootup (or a few mintues after),
> sometimes it works immediately after I run lsusb, mostly it doesn't
> work at all. Sometimes the laptop will be on for hours before the
> webcam spontaneouly works. Usually within a couple of hours of working
> it will spontaneously stop working. 
> 
> My fear is that there is hardware problem - is it possible to
> determine whether or not this is the case? 
> 
> 
> Log example: 
> [10415.476069] usb 2-4: new high speed USB device using ehci_hcd and
> address 7 
> [10415.596080] usb 2-4: device descriptor read/64, error 4 
> [10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10415.988171] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10 
> [10421.150795] usb 2-4: USB disconnect, address 7 
> [10421.160055] cannot submit datapipe for urb 0, error -19: no device 
> [10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10421.600054] usb 2-4: new high speed USB device using ehci_hcd and
> address 9 
> [10422.132066] usb 2-4: device not accepting address 9, error -71 
> [10422.244107] usb 2-4: new high speed USB device using ehci_hcd and
> address 10 
> [10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10422.532425] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11 
> [10444.081927] usb 2-4: USB disconnect, address 10 
> [10444.348099] usb 2-4: new high speed USB device using ehci_hcd and
> address 11 
> [10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110 
> [10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32) 
> [10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10444.876058] usb 7-2: new full speed USB device using uhci_hcd and
> address 2 
> [10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2 
> [10456.280046] usb 2-4: new high speed USB device using ehci_hcd and
> address 12 
> [10456.812039] usb 2-4: device not accepting address 12, error -71 
> [10456.924056] usb 2-4: new high s[10415.476069] usb 2-4: new high
> speed USB device using ehci_hcd and address 7 
> [10415.596080] usb 2-4: device descriptor read/64, error 4 
> [10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10415.988171] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10 
> [10421.150795] usb 2-4: USB disconnect, address 7 
> [10421.160055] cannot submit datapipe for urb 0, error -19: no device 
> [10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10421.600054] usb 2-4: new high speed USB device using ehci_hcd and
> address 9 
> [10422.132066] usb 2-4: device not accepting address 9, error -71 
> [10422.244107] usb 2-4: new high speed USB device using ehci_hcd and
> address 10 
> [10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10422.532425] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11 
> [10444.081927] usb 2-4: USB disconnect, address 10 
> [10444.348099] usb 2-4: new high speed USB device using ehci_hcd and
> address 11 
> [10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110 
> [10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32) 
> [10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10444.876058] usb 7-2: new full speed USB device using uhci_hcd and
> address 2 
> [10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2 
> [10456.280046] usb 2-4: new high speed USB device using ehci_hcd and
> address 12 
> [10456.812039] usb 2-4: device not accepting address 12, error -71 
> [10456.924056] usb 2-4: new high speed USB device using ehci_hcd and
> address 13 
> [10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.228083] usb 2-4: new high speed USB device using ehci_hcd and
> address 14 
> [10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.728073] usb 2-4: new high speed USB device using ehci_hcd and
> address 16 
> [10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10458.064094] usb 7-2: new full speed USB device using uhci_hcd and
> address 3 
> [10458.292116] usb 7-2: not running at top speed; connect to a high
> speed hub 
> [10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10458.436312] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12 
> [10462.300114] usb 7-2: USB disconnect, address 3 
> [10462.304073] cannot submit datapipe for urb 0, error -19: no device 
> peed USB device using ehci_hcd and address 13 
> [10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.228083] usb 2-4: new high speed USB device using ehci_hcd and
> address 14 
> [10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10457.728073] usb 2-4: new high speed USB device using ehci_hcd and
> address 16 
> [10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4 
> [10458.064094] usb 7-2: new full speed USB device using uhci_hcd and
> address 3 
> [10458.292116] usb 7-2: not running at top speed; connect to a high
> speed hub 
> [10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera
> (18e3:9512) 
> [10458.436312] input: USB 2.0 Camera
> as /devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12 
> [10462.300114] usb 7-2: USB disconnect, address 3 
> [10462.304073] cannot submit datapipe for urb 0, error -19: no device 
> 
> Also, sometimes I get endless "unable to enumerate USB device"
> messages 
> 
> 
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel

-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Tue Jun 14 11:24:18 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 14 Jun 2011 11:24:18 +0200
Subject: [Linux-uvc-devel] Frame Rate/Corruption C910, plus 4 others
In-Reply-To: <alpine.DEB.2.02.1106090203420.31839@cervantes>
References: <alpine.DEB.2.02.1106090203420.31839@cervantes>
Message-ID: <1308043458.5663.16.camel@mini>

Hi Mark,

can you please take a look to my discussion with Carl, subject "Quanta
integrated webcam". There are soma patches, wich may solve your problem
as well.

Am Donnerstag, den 09.06.2011, 02:04 -0400 schrieb Mark Whitis:
> Low frame rate problems have been seen with at least 5 UVC cameras on 
> multiple computers.   It isn't low light, USB bandwidth, etc.   In the 
> past, I have assumed the cameras were being dishonest about their 
> performance, now I am pretty sure it is the UVC driver's fault.   On a 
> newer, faster, computer performance has even gone down on some cameras.
> 
> I just got a new Logitech C910 UVC webcam.   This camera has a 5MP 
> (2592x1944) sensor and can do 1920x1080/30P, 720x1280/30P, and 
> 640x480/60P.  It works right out of the box with guvcview except for:
>    - The crippling frame rate problems described here
>    - uvcvideo doesn't support still picture capture (this is a real 5MP
>      bayer resolution webcam).
>    - Exposure mode can be set to Manual or Aperature Priority.  Auto or
>      Shutter priority produce an error.
>    - Video in MJPG mode is badly corrupted when recording (any program) or 
> when
>      displayed in some programs.
> Other than that, auto/manual exposure, digital zoom, digital pan/tilt 
> (zoom first), auto/manual focus, etc. seem to work.   Sound not tested. 
> It does support still image.
> However, streaming to disk or using a number of other applications fails 
> badly:
> Tests were done on this camera, except where otherwise noted.
> 
> As we will see below, mplayer is the only one that admits to dropping 3/4 
> of the video frames at 60fps but the other programs (or the driver) are 
> doing it.
> 
> 
> 
> Because of the large number of video modes, less interesting modes have 
> been deleted and only 480P, 720P, 1080P, and full sensor resolution shown 
> in YUYV and MJPG:
> Init. UVC Camera (046d:0821) (location: usb-0000:00:13.2-3)
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
> 1/5,
> { discrete: width = 1280, height = 720 }
>  	Time interval between frame: 1/10, 2/15, 1/5,
> { discrete: width = 1920, height = 1080 }
>  	Time interval between frame: 1/2,
> { discrete: width = 2592, height = 1944 }
>  	Time interval between frame: 1/2,
> { pixelformat = 'MJPG', description = 'MJPEG' }
> { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/60, 1/30, 1/24, 1/20, 1/15, 1/10, 
> 2/15, 1/5,
> { discrete: width = 1280, height = 720 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
> 1/5,
> { discrete: width = 1920, height = 1080 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15, 
> 1/5,
> { discrete: width = 2592, height = 1944 }
>  	Time interval between frame: 1/10, 2/15, 1/5,
> { pixelformat = 'RGB3', description = 'RGB3' }
> ...
> { pixelformat = 'BGR3', description = 'BGR3' }
> ...
> 
> vid:046d
> pid:0821
> driver:uvcvideo
> Adding control for Pan (relative)
> UVCIOC_CTRL_ADD - Error: File exists
> checking format: 1196444237
> VIDIOC_G_COMP:: Invalid argument
>     compression control not supported
> fps is set to 1/30
> drawing controls
> 
> fps is set to 1/30
> 
> guvcview gets max 12-14fps in any video mode down to 160x120.
> Yes, I am using MJPG not YUYV.   No the camera exposure should not be 
> knocking down the frame rate as this occurs even when pointed at a light. 
> No the CPU isn't overloaded; Phenom II 1060T X6 and none of the cores are 
> heavily loaded.   No, I am not plugged into a 12Mbps port.  No, the USB 
> bus isn't loaded (unplugged another webcam). luvcview does a little 
> better, getting 30fps at 160x120.    But if you run guvcview as root, now 
> all of a sudden it can run 30fps up to 1920x1080.   This continues when 
> you switch back to a normal user.    Until it breaks.   Which happened 
> when I tried to read full sensor resolution.   After that, I was stuck at 
> <=15fps in all modes as root and ordinary user.   Removing both copies of 
> .guvcviewrc didn't help.    Unpluging the camera doesn't fix it. 
> Unplugging the camera and rmmoding uvcvideo (which takes videodev with it) 
> and replugging the camera didn't fix it.   Plugging into USB 3.0 
> superspeed port didn't help (not that the camera supports superspeed, just 
> trying to change the USB controller).  "shutdown -h now" didn't fix it. 
> Sound is disabled.
> 
> At one point during the brief time that it was working as root, I got 
> 58fps 640x480 and it did not slow down even when I lowered frame rate to 
> 30fps.   Don't know if it actually had anything to do with being root. 
> It did work just long enough to indicate that the camera can deliver on 
> its promised specifications.
> 
> It does appear guvcview frame rate display is somewhat unreliable.   I get 
> different results if I turn it off and on, and they vary depending on how 
> long it was off, like the title bar only gets updated once.   But on 
> different cameras that do slow the frame rate in low light, the title bar 
> fps is updated when I cover the lens.    The changing numbers when turning 
> off/on the title bar fps readout may reflect resetting the boxcar 
> averaging.  The low numbers do seem to reflect reality.  When I record 
> files using various programs, I only get 25fps according to ffprobe.
> 
> 
> Bad video looks like typically less than half of frame (varies how much 
> frame to frame) with some errors of 1/4 to 1/2 width of frame in the 
> section that is displayed.   Like there is a race condition between 
> grabbing the video and playback or one of the errors encountered is bad 
> enough to kill the rest of the frame.   I have played back with "mplayer 
> -vo x11" to disable any hardware accelleration on my video card and the 
> results are the same.
> 
> 
> - Cheese - works but very limited
> - guvcview record video - you get less than half a video frame and other 
> errors.
> - ffmpeg -f video4linux2 -s 640x480 -r 60 -vcodec mjpeg -i /dev/video0 -r 
> 60 -vcodec copy /tmp/test1.mjpeg
>    You get the same unusable video as guvcview
>    These errors reported before recording starts, then none during 
> recording.
> [mjpeg @ 0x1a0c900]mjpeg_decode_dc: bad vlc: 0:0 (0x1a297c0)
> [mjpeg @ 0x1a0c900]error dc
> [mjpeg @ 0x1a0c900]error y=2 x=11
> [video4linux2 @ 0x1a0b660]Estimating duration from bitrate, this may be 
> inaccurate
>    then playing back recorded stream with ffplay gives the
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=1 x=21
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)   0B f=0/0
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)f=0/1
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]error count: 64
> [mjpeg @ 0xf95850]error y=0 x=30
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=3 x=21
> The bad vlc lines originate from libavcodec/mjpegdec.c
> 
> 
> - vlc
>    vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG 
> --sout=file/ogg:/tmp/test3.mjp
>    vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
>    you get the same unusable video (<1/2frame) whether you are playing or 
> recording.   No errors reported on record.  When simply watching cam, 
> looks like this:
> [0x9ebdb0] signals interface error: signal 17 overriden (0x7f41629c9450)
> [0x9ebdb0] signals interface error:  /usr/lib/libQtCore.so.4(?)[(nil)]
> error dc
> error y=0 x=29
> error dc
> error y=6 x=1
> error dc
> error y=6 x=1
> error dc
> error y=1 x=8
>     vlc does display the image ok if you use YUYV instead of MJPG but then 
> you are severly limited in resolution/frame rate.
> - mplayer
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=60
> v4l2: 159 frames successfully processed, 475 frames dropped.
> real	0m10.939s
> I.E. about 58fps from camera but 14.5fps after frames dropped.
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=30
> v4l2: 149 frames successfully processed, 144 frames dropped.
> real	0m10.101s
> I.E. about 29fps from camera but about 14.75fps after frames dropped
> Setup time may affect results slightly.
> Note that if you request more frames than camera supports, it will report 
> more frames dropped.
> 
> 
> 
> - luvcview -s 640x480 -r 60 -f MJPG &
> 
>    prints "find DRI" repeatedly
>    reports 14, 16, and 20fps on subsequent runs when camera set to 60.
>    title bar updated at least twice as it initially reports 0.0 fps.
> 
>   luvcview -s 640x480 -r 60 -f MJPG -C -o /tmp/test4.avi &
>   xine, mplayer, and vlc are unable to read the file.
> 
> Using read method instead of mmap doesn't seem to make a difference, tried 
> with various programs.
> 
> Same problem on netbook running ubuntu 9.04.
> 
> It may be a bug where uvcvideo gives you the next frame received after you 
> request a frame instead of giving you the next frame stored in the queue.
> 
> No uvcvideo syslog messages
> 
> Other UVC cameras:
>    - 230X USB microscope UVC eb1a:1760 (real 1.3MP)
>     v4l2: 132 frames successfully processed, 199 frames dropped.   real 
> 12.252s
>     i.e. 10.77fps out of 27fps.
>     { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30,
>     looking at video monitor or overhead light.  guvcview says 17fps but 
> will drop to 3.5fps in low light when fps reported set to 30.
>      http://www.freelabs.com/~whitis/reviews/230X_USB_Microscope/
>      On a previous computer I was able to get 27 out of 30fps at 640x480
>      and 7fps out of 15fps at 1280x1024 in bright light.
>    - deal extreme sku #25948 $6.40 camera 18ec:3299 Arkmicro Technologies 
> Inc.  (0.3MP) 
> http://www.dealextreme.com/p/compact-usb-pc-webcam-300k-pixel-25948
>      { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>      { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/15, 1/10, 1/5,
>      ...
>      guvcview reports 20fps looking at overhead light
>      v4l2: 245 frames successfully processed, 74 frames dropped.  real 
> 0m10.706s
>      i.e. 22.88fps out of 29.79fps
>      pressing snapshot button changes color instead, cycling between 
> different colors
> 
>   - 0c45:62c0 Microdia Sonix USB 2.0 Camera (0.3MP)
>    { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>     {   discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/20, 1/15, 1/10, 1/5,
>     ...
>     guvcview reports 21.5fps looking at light, 9fps lens blocked
>     v4l2: 311 frames successfully processed, 24 frames dropped. real 
> 0m11.514s
>     i.e. 27fps out of 29fps
>     ebay cubeternet USB 2 WEBCAM Camera 5M, Mic, 6 Infrared LED PC/Mac UVC
>     claimed 1.3MP sensor, it was only 0.3MP.
> 
> 
>   - Built-in netbook camera 064E:A102 Suyin Corp
>     Different computer: Acer Aspire One 532h-2588 netbook
>      { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>      { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/25, 1/20, 1/15, 1/10, 1/5,
>      (hand typed)
>      ...
>      guvcview reports 7.00fps looking at overhead light/7.00fps lens 
> covered
>      ditto for luvcview.
> 
>    - Logitech quickcam fusion.   Now broken, but I recall similar results a 
> few years ago.   Other cameras were tested now.
> 
> 
> 
> 
> Ubuntu 11.04
> Linux cervantes 2.6.38-8-generic #42-Ubuntu SMP Mon Apr 11 03:31:24 UTC 
> 2011 x86_64 x86_64 x86_64 GNU/Linux
> AMD Phenom(tm) II X6 1090T Processor
> ASUS Crosshair IV Formula
> Radeon HD 6950
> luvcview 0.2.6
> guvcview 1.4.1
> Cheese 2.32.0
> FFmpeg version 0.6.2-4:0.6.2-1ubuntu1
> VLC media player 1.1.9 The Luggage (revision exported)
> MPlayer 1.0rc4-4.5.2 (C) 2000-2010 MPlayer Team
> This is xine (X11 gui) - a free video player v0.99.6.
> ii  libavcodec-extra-52                   4:0.6.2-1ubuntu2 
> Libav codec library
> rc  libavcodec52                          4:0.6.2-1ubuntu1 
> Libav codec library
> ii  libv4l-0                              0.8.3-1 
> Collection of video4linux support libraries
> ii  libgstreamer0.10-0                    0.10.32-3ubuntu3 
> Core GStreamer libraries and elements
> My video monitors are running at: 60hz (DVI), 60.3hz (VGA over 
> DisplayPort), 60hz (DVI).   ATI proprietary driver 11-5.
> 
> 
> lsusb -v -d 046d:0821 is 1770 lines, so I won't include it.   The guvcview 
> exceprts include some of the more pertinent details.  Someone else has 
> posted the lsusb output here for same model camera: 
> http://pastebin.ca/raw/1967260
> 
> Wireshark:
> guvcview -s 640x480 -r 30 -f YUYV
> used YUYV since it is hard to infer info about number of frames from 
> compressed video.
> guvcview reports 16fps
> Over 10 seconds, with guvcview already running:
> 125Mbit/second (all traffic)
>  	640*480*2*8bits*30 = 147.456 megabits
>  	640*480*2*8bits*16 = 78.6432 megabits
> 2629 packets of size>=5120bytes, typically 62016
> This indicates less than 30 frames actually making it onto the wire in 
> this mode or data is being lost within frames.
> 
> guvcview -s 1920x1080 -r 30 -f MJPG
> 13.50fps
> 125MBit/second over 10.941 seconds
> 2736 big packets, typically 62016 bytes from camera to host   Same number 
> of  small (320-639) packets, typically 576 bytes host to camera.   4 
> smaller packets (40-159 bytes).
> 
> Oddly, the highest MaxBit rate on this camera is 995328000 which exceeds 
> the capacity of USB High Speed.   That is for 1920*1080 30fps MJPEG and is 
> actually the uncompressed bitrate.  The bitrate for that resolution 
> FRAME_UNCOMPRESSED is given as 165888000 which is for 2fps.   Most of the 
> tests were done at 640x480 compressed or uncompressed and adequate 
> bandwidth should be available.
> 
> 
> 
>   lsusb -t
> /:  Bus 08.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M
> /:  Bus 07.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/4p, 12M
> /:  Bus 06.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/2p, 12M
> /:  Bus 05.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
> /:  Bus 04.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
>      |__ Port 3: Dev 3, If 0, Class=HID, Driver=usbhid, 1.5M
>      |__ Port 3: Dev 3, If 1, Class=HID, Driver=usbhid, 1.5M
>      |__ Port 4: Dev 4, If 0, Class=HID, Driver=usbhid, 1.5M
> /:  Bus 03.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/4p, 480M
>      |__ Port 3: Dev 2, If 0, Class=stor., Driver=usb-storage, 480M
> /:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
>      |__ Port 3: Dev 13, If 0, Class=audio, Driver=snd-usb-audio, 480M
>      |__ Port 3: Dev 13, If 1, Class=audio, Driver=snd-usb-audio, 480M
>      |__ Port 3: Dev 13, If 2, Class='bInterfaceClass 0x0e not yet 
> handled', Driver=uvcvideo, 480M
>      |__ Port 3: Dev 13, If 3, Class='bInterfaceClass 0x0e not yet 
> handled', Driver=uvcvideo, 480M
> /:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
> 
> Windows users have reported getting 30fps.
> http://forums.quickcamteam.net/showthread.php?tid=1345&page=2
> 
> Sometimes I get a little more than 15fps, for no apparent reason.  For 
> example, now guvcview reports 18.00fps at 640x480/30P-MJPG and when I tell 
> guvcview to capture video, it gives 24.18fps:
>   Duration: 00:00:05.54, start: 0.000000, bitrate: 16494 kb/s
>      Stream #0.0: Video: mjpeg, yuvj422p, 640x480, 24.18 tbr, 24.18 tbn, 
> 24.18 tbc
> http://ffmpeg-users.933282.n4.nabble.com/What-does-the-output-of-ffmpeg-mean-tbr-tbn-tbc-etc-td941538.html
> The video is corrupted.
> 
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel

-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Tue Jun 14 11:26:43 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 14 Jun 2011 11:26:43 +0200
Subject: [Linux-uvc-devel] Multiple webcams,
 error: uvcvideo: Failed to submit URB 0 (-28)
In-Reply-To: <alpine.DEB.2.02.1106090953520.22528@p34.internal.lan>
References: <alpine.DEB.2.02.1106081718580.3462@p34.internal.lan>
	<alpine.DEB.2.02.1106090953520.22528@p34.internal.lan>
Message-ID: <1308043603.5663.18.camel@mini>

Hi Justin,

this is probably bug in uvcvideo. Theoretically it should allow you to
run only 2-3 cams independent of type.

Am Donnerstag, den 09.06.2011, 09:56 -0400 schrieb Justin Piszcz:
> 
> On Wed, 8 Jun 2011, Justin Piszcz wrote:
> 
> > Is there anyway around this?
> > When using 5 different webcams, no problems.
> > When using 4-5 webcams of the same type, only 2 of 5 work.
> >
> > [  832.218440] uvcvideo: Failed to submit URB 0 (-28).
> >
> > I also tried with uvcvideo quirks=128.
> >
> > Why is this?
> >
> > Anyhow, I found a workaround:
> >
> > [ 1183.054874] uvcvideo: Probing generic UVC device 6
> > [ 1183.054908] uvcvideo: Found format MJPEG.
> > [ 1183.054916] uvcvideo: - 160x120 (30.0 fps)
> > [ 1183.054922] uvcvideo: - 176x144 (30.0 fps)
> > [ 1183.054927] uvcvideo: - 320x240 (15.0 fps)
> > [ 1183.054933] uvcvideo: - 352x288 (15.0 fps)
> > [ 1183.054938] uvcvideo: - 640x480 (15.0 fps)
> > [ 1183.054943] uvcvideo: - 800x600 (15.0 fps)
> > [ 1183.054949] uvcvideo: - 960x720 (10.0 fps)
> > [ 1183.054955] uvcvideo: Found format YUV 4:2:2 (YUYV).
> > [ 1183.054961] uvcvideo: - 160x120 (30.0 fps)
> > [ 1183.054966] uvcvideo: - 176x144 (30.0 fps)
> > [ 1183.054972] uvcvideo: - 320x240 (15.0 fps)
> > [ 1183.054978] uvcvideo: - 352x288 (15.0 fps)
> > [ 1183.054984] uvcvideo: - 640x480 (15.0 fps)
> > [ 1183.054989] uvcvideo: - 800x600 (15.0 fps)
> > [ 1183.054994] uvcvideo: - 960x720 (10.0 fps)
> > [ 1183.055000] uvcvideo: - 1600x1200 (5.0 fps)
> >
> > I can use MAX: 2 devices of the same type with YUV 4:2:2.
> > I can use MAX: at least ?? more devices of the same type with MJPEG.
> >
> > Now I see some weird banding or video artifacts, digging further (w/MJPEG).
> > Why is there a problem using > 2 of the same device with YUV 4:2:2?
> 
> 
> CC'd motion-user@ list to see if there is a 'proper' way to support > 2-3 
> web cams.
> 
> So far I have 1 PCI-e USB card with 4 ports and the system motherboard 
> itself and the motherboard headers, I am able to use 3 of the same camera, 
> but beyond that it says Failed to submit URB 0 (-28).
> 
> I would like to use YUV 4:2:2 (YUUV) 1600x1200 for all 4 cams, would this 
> be possible?
> 
> Right now I am able to use as many cameras as I want, as long as there 
> are not more than ~2 of the same type:
> 
> Bus 001 Device 003: ID 046d:0809 Logitech, Inc. Webcam Pro 9000
> Bus 002 Device 004: ID 046d:0990 Logitech, Inc. QuickCam Pro 9000
> Bus 007 Device 002: ID 0471:0311 Philips (or NXP) PCVC740K ToUcam Pro [pwc]
> Bus 002 Device 005: ID 046d:08b2 Logitech, Inc. QuickCam Pro 4000
> Bus 003 Device 004: ID 046d:08b2 Logitech, Inc. QuickCam Pro 4000
> Bus 003 Device 005: ID 046d:0809 Logitech, Inc. Webcam Pro 9000
> 
> Thoughts?
> 
> Justin.
> 
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel

-- 
Regards,
        Alexey



From bug-track at fisher-privat.net  Tue Jun 14 12:20:57 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 14 Jun 2011 12:20:57 +0200
Subject: [Linux-uvc-devel] Multiple webcams,
 error: uvcvideo: Failed to submit URB 0 (-28)
In-Reply-To: <alpine.DEB.2.02.1106140533570.21100@p34.internal.lan>
References: <alpine.DEB.2.02.1106081718580.3462@p34.internal.lan>
	<alpine.DEB.2.02.1106090953520.22528@p34.internal.lan>
	<1308043603.5663.18.camel@mini>
	<alpine.DEB.2.02.1106140533570.21100@p34.internal.lan>
Message-ID: <1308046857.22298.5.camel@zwerg>

On Di, 2011-06-14 at 05:34 -0400, Justin Piszcz wrote:
> 
> On Tue, 14 Jun 2011, Alexey Fisher wrote:
> 
> > Hi Justin,
> >
> > this is probably bug in uvcvideo. Theoretically it should allow you to
> > run only 2-3 cams independent of type.
> 
> Hi,
> 
> The other webcams used pwc or other modules, sorry for not detailing that
> in the first e-mail.
> 
> So w/UVC, 2-3 cams max?

No, it make decision according requested bandwidth. If 2 webcams request
all available bandwidth, even if they do not use it, you will get only 2
cams to work.

Other question is, if all your webcams use more als your usb can. It can
produce some other errors.

-- 
Regards,
        Alexey



From yann at minet.net  Tue Jun 14 12:02:09 2011
From: yann at minet.net (Yann Sionneau)
Date: Tue, 14 Jun 2011 12:02:09 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <1307908424.14901.4.camel@zwerg>
References: <4DE8E64B.3030009@minet.net>	
	<201106061942.20970.laurent.pinchart@ideasonboard.com>	
	<4DED452C.10502@minet.net> <4DEE4A3F.10308@minet.net>	
	<1307859849.4149.8.camel@zwerg> <4DF4DC2D.6070900@minet.net>
	<1307908424.14901.4.camel@zwerg>
Message-ID: <4DF731A1.9010603@minet.net>

Hi Alexey,

Thanks a lot for your testing and report ! :)

Your test and mine show that webcams seem to be implementing the UVC 
spec correctly regarding timestamping.

I mean :

(*) Putting PTS for each packet
(*) Putting SCR for each packet
(*) Having the same PTS for each packet of the same frame
(*) Having different SCR for each packet of the same frame

Well, about FID/EOF bugs, I guess a change of PTS can be interpreted as 
"the beginning of a new frame", so it may be useful in case of a webcam 
having troubles signaling new frames using the usual FID/EOF bits.

I am new to this (UVC), so you may need to confirm with someone else 
(Laurent ?) what I just wrote, but to me it makes sense to interpret a 
change of PTS as a "new frame".

Reading the code I noticed a few "quirks" used to workaround webcams not 
implementing correctly the UVC spec regarding FID and EOF bits.

Are there webcams which have both problems ? (not making FID toggle, and 
not specifying EOF ?)

Thanks !

Regards,

Yann

On 06/12/2011 09:53 PM, Alexey Fisher wrote:
> Hi Yann,
>
> here is the log from one of my cams. It is really cheap webcam
> integrated in my netboo?. lsusb info and kernel log are attached.
>
> If i understand correctly, PTS can be used to work with some FID/EOF
> bugs?
>
> On So, 2011-06-12 at 17:33 +0200, Yann Sionneau wrote:
>> Hi Alexey,
>>
>> Agreed, but bear in mind this patch I submitted is not for inclusion and
>> merge in the git tree, it is just for testing purpose, it will never be
>> merged in the git.
>>
>> This is just a one shot patch to show some informations and then you can
>> throw it away once you have the informations.
>>
>> But yes I could make it use the uvc_trace() API, it won't kill me :)
>>
>> Thanks for your feed back on the patch, do you have the time to test it
>> on your webcams and to publish part of your syslog ?
>>
>> Regards,
>>
>> Yann
>>
>> Le 12/06/11 08:24, Alexey Fisher a ?crit :
>>> Hi,
>>>
>>> please use "uvc_trace(UVC_TRACE_DESCR," or pr_debug instead of printk.
>>> So you can enable verbosity only if you need.
>>>
>>> On Di, 2011-06-07 at 17:56 +0200, Yann Sionneau wrote:
>>>> Hi again,
>>>>
>>>> here is as attached file a new patch that applies to linux 2.6.39 tree
>>>> (linux-2.6.git, tag v2.6.39).
>>>>
>>>> This patch now prints at the end of each stream :
>>>>
>>>> (*) total number of PTS (taking into account each packet)
>>>> (*) total number of SCR
>>>> (*) total number of ERR
>>>> (*) number of packets without PTS (nb_missing_pts)
>>>> (*) number of packets without SCR (nb_missing_scr)
>>>>
>>>> It will print as well for each packet (beware, it will hugely flood your
>>>> syslog) :
>>>>
>>>> (*) SCR
>>>> (*) diff with previous packet's SCR
>>>> (*) PTS
>>>> (*) diff with previous packet's PTS
>>>>
>>>> Beware, to see the "end of stream" statistics, you have to scroll up a
>>>> little bit, it will be somewhere in the end of the per-packet
>>>> information flood.
>>>>
>>>> Some results inline in the e-mail.
>>>>
>>>> On 06/06/2011 11:22 PM, Yann Sionneau wrote:
>>>>> Le 06/06/11 19:42, Laurent Pinchart a ?crit :
>>>>>> Hi Yann,
>>>>>>
>>>>>> Thanks for the patch.
>>>>>>
>>>>>> On Friday 03 June 2011 15:48:59 Yann Sionneau wrote:
>>>>>>> Hi Laurent and the UVC list,
>>>>>>>
>>>>>>> Here is a patch [snip]
>>>>>> You should take all UVC packets into account, not just the first one for each
>>>>>> frame.
>>>>> Yes I don't know why in my head I thought only the first uvc packet
>>>>> would have a header for the frame with timestamps and such, but it makes
>>>>> no sense, each packet has its own header and the start of frame is just
>>>>> signaled by the toggling of the FID :)
>>>>>
>>>>>> the important information are
>>>>>>
>>>>>> - do all frames have a PTS timestamp in their first packet ?
>>>>> It seems so yes, at least on the two webcams I tried with the patch.
>>>>>
>>>>>> - do all non-empty packets for a frame have a PTS timestamp, and is it
>>>>>> constant through the whole frame as it should be ?
>>>>> Let's modify the patch to count the PTS and SCR of all packets instead
>>>>> of only one per frame in order to sort this out !
>>>> I tested with the Logitech HD Pro C910, all packets have a PTS.
>>>> PTS are indeed constant through the whole frame as it should be.
>>>>>> - how many SCR timestamps do we have per frame ? are they constant through the
>>>>>> whole frame or do they vary as they should ?
>>>>>>
>>>>> Same here !
>>>> With the same webcam, all packets have a SCR.
>>>> The SCR value does vary through each frame, as it should do.
>>>> The difference between the previous SCR is usually the same, except at a
>>>> regular interval where there is a "jump" in SCR values.
>>>>
>>>> for example, SCR - SCR_prev would be 7 times the same difference, and
>>>> then it will change for just one time, and then go back to the old
>>>> difference for 7 times etc.
>>>>
>>>>>>> [snip]
>>>>> Thanks for your review and comments, will submit a new patch ASAP !



From barsnick at gmx.net  Tue Jun 14 15:41:46 2011
From: barsnick at gmx.net (Moritz Barsnick)
Date: Tue, 14 Jun 2011 15:41:46 +0200
Subject: [Linux-uvc-devel] Request to help us in using UVC driver for
 linux kernel-2.6.18
In-Reply-To: <20110610163735.spjmnvr1w8gck4sw@webmail.meritup.com>
References: <20110610163735.spjmnvr1w8gck4sw@webmail.meritup.com>
Message-ID: <20110614134146.GA27474@sunshine.barsnick.net>

On Fri, Jun 10, 2011 at 16:37:35 +0530, Purushotham.A at meritup.com wrote:
> We are working to bring up a USB webcam on DM365 board and the linux  
> kernel version with which we are  working is  linux-kernel-2.6.18. We

Wow, that kernel was released 20 September, 2006, almost 5 years ago!

A few years ago, there were some efforts to backport UVC to 2.6.18 due
to RHEL (and CentOS) sticking to that version. Check
http://www.gossamer-threads.com/lists/atrpms/devel/11394
and the attached patch, perhaps that helps.

Moritz


From jyrios at die.upm.es  Tue Jun 14 18:28:02 2011
From: jyrios at die.upm.es (Jorge Yesid Rios Ortiz)
Date: Tue, 14 Jun 2011 18:28:02 +0200
Subject: [Linux-uvc-devel] error code list
Message-ID: <1308068882.3072.17.camel@sacarino>


Hi:

I have a problem when I tried to use this web-cam in my embedded system:

Camera:
ID 041e:4058
model: Live! Cam Optia AF
manufacturer:  Creative Technology, Ltd


Embedded system ARTILA M-501:
CPU: ATMEL AT91RM9200, 180MHz
OS: Linux 2.6.14-M5
SDRAM: 64MB
USB Host interface: 2x, USB 2.0 compliant
UART: 4x, 921.6kbps



This cams works very fine when I used it on my PC with Linux, but when I
plugged to my embedded system I get this message:

usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
usb 1-2: Manufacturer: Creative Labs
uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
uvcvideo: Non-zero status (-110) in status completion handler.


I'm looking for about what means this code error, but I can't find
anything!!!

is Anybody help me?


Regards,


Jorge




From laurent.pinchart at ideasonboard.com  Tue Jun 14 19:09:50 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Tue, 14 Jun 2011 19:09:50 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <4DF731A1.9010603@minet.net>
References: <4DE8E64B.3030009@minet.net> <1307908424.14901.4.camel@zwerg>
	<4DF731A1.9010603@minet.net>
Message-ID: <201106141909.50831.laurent.pinchart@ideasonboard.com>

Hi Yann,

On Tuesday 14 June 2011 12:02:09 Yann Sionneau wrote:
> Hi Alexey,
> 
> Thanks a lot for your testing and report ! :)
> 
> Your test and mine show that webcams seem to be implementing the UVC
> spec correctly regarding timestamping.
> 
> I mean :
> 
> (*) Putting PTS for each packet
> (*) Putting SCR for each packet
> (*) Having the same PTS for each packet of the same frame
> (*) Having different SCR for each packet of the same frame
> 
> Well, about FID/EOF bugs, I guess a change of PTS can be interpreted as
> "the beginning of a new frame", so it may be useful in case of a webcam
> having troubles signaling new frames using the usual FID/EOF bits.
> 
> I am new to this (UVC), so you may need to confirm with someone else
> (Laurent ?) what I just wrote, but to me it makes sense to interpret a
> change of PTS as a "new frame".

That could be done, provided that the camera sends correct PTS values.

> Reading the code I noticed a few "quirks" used to workaround webcams not
> implementing correctly the UVC spec regarding FID and EOF bits.
> 
> Are there webcams which have both problems ? (not making FID toggle, and
> not specifying EOF ?)

Not that I know of.

-- 
Regards,

Laurent Pinchart


From conwaytomas at yahoo.co.uk  Tue Jun 14 21:25:45 2011
From: conwaytomas at yahoo.co.uk (Tomas Conway)
Date: Tue, 14 Jun 2011 20:25:45 +0100
Subject: [Linux-uvc-devel] Webcam works intermittently - [18e3:9512]
 built-in in Hannspree SN12E2 netbook
In-Reply-To: <1308037403.5663.13.camel@mini>
References: <4DF64DC8.6030409@yahoo.co.uk> <1308037403.5663.13.camel@mini>
Message-ID: <4DF7B5B9.6020403@yahoo.co.uk>

Thanks for the help Alexey.

I can't check the cable without voiding my warranty, but it's useful to 
know that you think it's a hardware issue. I'll run the problem passed 
the usb guys and see if they agree.

On 14/06/11 08:43, Alexey Fisher wrote:
> Hi Tomas,
>
> all listed error come directly  from usb driver. uvcvideo driver do not
> even have chance to talk with your cam. It should be some hardware
> issue. Try to check the cable.
>
> Am Montag, den 13.06.2011, 18:50 +0100 schrieb Tomas Conway:
>> Sorry for the double post - forgot to include the attachment last
>> time.
>>
>> Machine: Hannspree SN12E2
>> Webcam/mic ID: [18e3:9512], Fitipower Integrated Technology Inc
>>



From michal at physics.ubc.ca  Wed Jun 15 08:31:32 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Tue, 14 Jun 2011 23:31:32 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
Message-ID: <alpine.LNX.2.00.1106142327500.14184@tristan>

On Tue, 14 Jun 2011, Alexey Fisher wrote:

> Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>
>>> Hi,
>>>
>>> I think you nailed it.  Every frame looks perfect now.  The trace shows a few
>>> of these:
>>>
>>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>
>>> but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480
>>> anyway) - in MJPG all the frames have the right size.
>>>
>>> There is a some weirdness with frame rates depending on the exposure setting:
>>> 1) Exposure, auto gives 4 options: auto priority mode, manual mode, shutter
>>> priority mode, and aperture priority mode.  Auto and shutter don't seem to be
>>> settable (errors from guvcview when chosen). There is also an "Exposure, auto
>>> priority" checkbox.
>>>
>>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
>>>
>>> But I can't really complain at this point - the corrupt frames are gone.
>>> Will that quirk be added to the driver (usb id is: 0408:2fb1)?
>>>
>>> Thanks,
>>>
>>
>> Hi,
>>
>> it seems like I am much better off by fully disabling FID (with your
>> patch) than before.  With the patch, YUYV frames are _always_ the right
>> size.  There are still some problems:
>>
>> 1) corrupt frames - with part of the image missing or the image displaced.
>> Sometimes (but definitely not always) these occur at the same time as a
>> trace message saying the error bit is set.
>>
>> 2) sometimes the camera just won't start.  when guvcview (or luvcview) is
>> started, no frames come back from the camera.  There is a light next to
>> the camera that comes on to indicate it should be active, but no frames
>> arrive.  There seems to be a fairly strong correlation with using luvcview
>> (which from the traces seems to use some different mechanism to get frames from
>> the driver from guvcview.  guvcview polls, luvcview doesn't).  Sometimes
>> just restarting guvcview several times will work and the camera eventually
>> starts.  Sometimes just changing resolution or frame rates succeeds in
>> starting the camera.  I haven't found anything reproducible.  I do not
>> think this is related to your patch, as it did happen once before your
>> patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
>> modules does not consistently solve it. guvcview just lists:
>>
>>   Could not grab image (select timeout): Resource temporarily unavailable
>>
>> and the trace shows guvcview polling, but nothing else going on.
>>
>> I have tried adding the other quirks to the FID quirk, but haven't seen
>> any improvement with any others.
>>
>> Thanks for you help -
>>
>> Carl
>
> Webcam returns error in the middle of some frame, theoretically we
> should drop complete frame. But current uvcvideo just gather data and
> assume the cam will resend previous parts to complete the frame.
>
> Try attached patch additionally to my previous one.
> -- 
> Regards,
>        Alexey
>

Hi,

its very hard to say if this helps or not.  There are still corrupt 
frames, and some seem to occur at about the same time as the error bit 
trace messages, but some don't show anything unusual in the traces that 
I've noticed yet.

Since all the uncompressed frames were the right size (even ones where the 
error bit was set somewhere) those frames are at least complete.

Is there some convenient way to capture just those frames with the error 
bit set?

Thanks,

Carl



From bug-track at fisher-privat.net  Wed Jun 15 09:01:51 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Wed, 15 Jun 2011 09:01:51 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106142327500.14184@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
Message-ID: <1308121311.7917.4.camel@mini>

Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
> On Tue, 14 Jun 2011, Alexey Fisher wrote:
> 
> > Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> >>>>
> >>> Hi,
> >>>
> >>> I think you nailed it.  Every frame looks perfect now.  The trace shows a few
> >>> of these:
> >>>
> >>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> >>>
> >>> but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480
> >>> anyway) - in MJPG all the frames have the right size.
> >>>
> >>> There is a some weirdness with frame rates depending on the exposure setting:
> >>> 1) Exposure, auto gives 4 options: auto priority mode, manual mode, shutter
> >>> priority mode, and aperture priority mode.  Auto and shutter don't seem to be
> >>> settable (errors from guvcview when chosen). There is also an "Exposure, auto
> >>> priority" checkbox.
> >>>
> >>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> >>>
> >>> But I can't really complain at this point - the corrupt frames are gone.
> >>> Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> >>>
> >>> Thanks,
> >>>
> >>
> >> Hi,
> >>
> >> it seems like I am much better off by fully disabling FID (with your
> >> patch) than before.  With the patch, YUYV frames are _always_ the right
> >> size.  There are still some problems:
> >>
> >> 1) corrupt frames - with part of the image missing or the image displaced.
> >> Sometimes (but definitely not always) these occur at the same time as a
> >> trace message saying the error bit is set.
> >>
> >> 2) sometimes the camera just won't start.  when guvcview (or luvcview) is
> >> started, no frames come back from the camera.  There is a light next to
> >> the camera that comes on to indicate it should be active, but no frames
> >> arrive.  There seems to be a fairly strong correlation with using luvcview
> >> (which from the traces seems to use some different mechanism to get frames from
> >> the driver from guvcview.  guvcview polls, luvcview doesn't).  Sometimes
> >> just restarting guvcview several times will work and the camera eventually
> >> starts.  Sometimes just changing resolution or frame rates succeeds in
> >> starting the camera.  I haven't found anything reproducible.  I do not
> >> think this is related to your patch, as it did happen once before your
> >> patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
> >> modules does not consistently solve it. guvcview just lists:
> >>
> >>   Could not grab image (select timeout): Resource temporarily unavailable
> >>
> >> and the trace shows guvcview polling, but nothing else going on.
> >>
> >> I have tried adding the other quirks to the FID quirk, but haven't seen
> >> any improvement with any others.
> >>
> >> Thanks for you help -
> >>
> >> Carl
> >
> > Webcam returns error in the middle of some frame, theoretically we
> > should drop complete frame. But current uvcvideo just gather data and
> > assume the cam will resend previous parts to complete the frame.
> >
> > Try attached patch additionally to my previous one.
> > -- 
> > Regards,
> >        Alexey
> >
> 
> Hi,
> 
> its very hard to say if this helps or not.  There are still corrupt 
> frames, and some seem to occur at about the same time as the error bit 
> trace messages, but some don't show anything unusual in the traces that 
> I've noticed yet.
> 
> Since all the uncompressed frames were the right size (even ones where the 
> error bit was set somewhere) those frames are at least complete.
> 
> Is there some convenient way to capture just those frames with the error 
> bit set?
> 
> Thanks,
> 
> Carl
> 

you can try this command:
gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity ! jpegenc ! multifilesink location=tmp-%05d.jpg

it will produce for each frame one jpeg file. Watch out, it will produce
lots of files.

Attached patch is replacement for the last one. You do not need setting
trace option, it will print all we need.

-- 
Regards,
        Alexey
-------------- next part --------------
A non-text attachment was scrubbed...
Name: uvc3.diff
Type: text/x-patch
Size: 1685 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110615/65723067/attachment.bin>

From laurent.pinchart at ideasonboard.com  Wed Jun 15 11:13:34 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 15 Jun 2011 11:13:34 +0200
Subject: [Linux-uvc-devel] test results and a patch for timestamps in UVC
In-Reply-To: <201106141909.50831.laurent.pinchart@ideasonboard.com>
References: <201106141909.50831.laurent.pinchart@ideasonboard.com>
Message-ID: <1308129214-9492-1-git-send-email-laurent.pinchart@ideasonboard.com>

Hi Yann,

What about the following patch ? It will print at the end of the stream the
total number of frames and the number of frames with

- an early PTS (PTS present in at least one packet before the first non-empty
  packet)
- an initial PTS (PTS present in the first non-empty packet)
- a constant PTS through the whole frame
- at least one SCR per non-empty packet
- no two consecutive identical SCR

Is there anything else worth adding ? Maybe the number of frames with a
non-constant SCR.SOF ?

---
 drivers/media/video/uvc/uvc_video.c |  152 ++++++++++++++++++++++++++++++++++-
 drivers/media/video/uvc/uvcvideo.h  |   34 ++++++++
 2 files changed, 185 insertions(+), 1 deletions(-)

diff --git a/drivers/media/video/uvc/uvc_video.c b/drivers/media/video/uvc/uvc_video.c
index fc766b9..19de225 100644
--- a/drivers/media/video/uvc/uvc_video.c
+++ b/drivers/media/video/uvc/uvc_video.c
@@ -358,6 +358,147 @@ int uvc_commit_video(struct uvc_streaming *stream,
 }
 
 /* ------------------------------------------------------------------------
+ * Timestamp statistics
+ */
+
+static void uvc_video_stats_decode(struct uvc_streaming *stream,
+		const __u8 *data, int len)
+{
+	unsigned int header_size;
+	bool has_pts = false;
+	bool has_scr = false;
+	u16 scr_sof;
+	u32 scr_stc;
+	u32 pts;
+
+	switch (data[1] & (UVC_STREAM_PTS | UVC_STREAM_SCR)) {
+	case UVC_STREAM_PTS | UVC_STREAM_SCR:
+		header_size = 12;
+		has_pts = true;
+		has_scr = true;
+		break;
+	case UVC_STREAM_PTS:
+		header_size = 6;
+		has_pts = true;
+		break;
+	case UVC_STREAM_SCR:
+		header_size = 8;
+		has_scr = true;
+		break;
+	default:
+		header_size = 2;
+		break;
+	}
+
+	/* Check for invalid headers. */
+	if (len < header_size) {
+		stream->stats.frame.nb_invalid_headers++;
+		return;
+	}
+
+	/* Extract the timestamps. */
+	if (has_pts)
+		pts = get_unaligned_le32(&data[2]);
+
+	if (has_scr) {
+		scr_stc = get_unaligned_le32(&data[header_size - 6]);
+		scr_sof = get_unaligned_le32(&data[header_size - 2]);
+	}
+
+	/* Is PTS constant through the whole frame ? */
+	if (has_pts && stream->stats.frame.nb_pts) {
+		if (stream->stats.frame.pts != pts) {
+			stream->stats.frame.nb_pts_diffs++;
+			stream->stats.frame.last_pts_diff = stream->stats.frame.nb_packets;
+		}
+	}
+
+	if (has_pts) {
+		stream->stats.frame.nb_pts++;
+		stream->stats.frame.pts = pts;
+	}
+
+	/* Do all frames have a PTS in their first non-empty packet, or before
+	 * their first empty packet ?
+	 */
+	if (stream->stats.frame.size == 0) {
+		if (len > header_size)
+			stream->stats.frame.has_initial_pts = has_pts;
+		if (len == header_size && has_pts)
+			stream->stats.frame.has_early_pts = true;
+	}
+
+	/* Does the SCR.STC field vary through the frame ? */
+	if (has_scr && stream->stats.frame.nb_scr) {
+		if (stream->stats.frame.scr_stc != scr_stc)
+			stream->stats.frame.nb_scr_diffs++;
+	}
+
+	if (has_scr) {
+		stream->stats.frame.nb_scr++;
+		stream->stats.frame.scr_stc = scr_stc;
+		stream->stats.frame.scr_sof = scr_sof;
+	}
+
+	if (stream->stats.frame.size == 0 && len > header_size)
+		stream->stats.frame.first_data = stream->stats.frame.nb_packets;
+
+	stream->stats.frame.size += len - header_size;
+	stream->stats.frame.nb_packets++;
+	if (len > header_size)
+		stream->stats.frame.nb_non_empty_packets++;
+
+	if (data[1] & UVC_STREAM_ERR)
+		stream->stats.frame.nb_errors++;
+}
+
+static void uvc_video_stats_update(struct uvc_streaming *stream)
+{
+	struct uvc_stats_frame *frame = &stream->stats.frame;
+
+	uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
+		  "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
+		  stream->sequence, frame->first_data,
+		  frame->nb_non_empty_packets, frame->nb_packets,
+		  frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
+		  frame->has_early_pts ? "" : "!",
+		  frame->has_initial_pts ? "" : "!",
+		  frame->nb_scr_diffs, frame->nb_scr);
+
+	stream->stats.stream.nb_frames++;
+
+	if (frame->has_early_pts)
+		stream->stats.stream.nb_pts_early++;
+	if (frame->has_initial_pts)
+		stream->stats.stream.nb_pts_initial++;
+	if (frame->last_pts_diff <= frame->first_data)
+		stream->stats.stream.nb_pts_constant++;
+	if (frame->nb_scr >= frame->nb_non_empty_packets)
+		stream->stats.stream.nb_scr_count_ok++;
+	if (frame->nb_scr_diffs + 1 == frame->nb_scr)
+		stream->stats.stream.nb_scr_diffs_ok++;
+
+	memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
+}
+
+static void uvc_video_stats_dump(struct uvc_streaming *stream)
+{
+	uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
+		  "%u initial pts %u pts ok %u scr count ok %u scr diff ok\n",
+		  stream->stats.stream.nb_frames,
+		  stream->stats.stream.nb_pts_early,
+		  stream->stats.stream.nb_pts_initial,
+		  stream->stats.stream.nb_pts_constant,
+		  stream->stats.stream.nb_scr_count_ok,
+		  stream->stats.stream.nb_scr_diffs_ok);
+}
+
+static void uvc_video_stats_init(struct uvc_streaming *stream)
+{
+	memset(&stream->stats, 0, sizeof(stream->stats));
+}
+
+/* ------------------------------------------------------------------------
  * Video codecs
  */
 
@@ -431,8 +572,13 @@ static int uvc_video_decode_start(struct uvc_streaming *stream,
 	/* Increase the sequence number regardless of any buffer states, so
 	 * that discontinuous sequence numbers always indicate lost frames.
 	 */
-	if (stream->last_fid != fid)
+	if (stream->last_fid != fid) {
 		stream->sequence++;
+		if (stream->sequence)
+			uvc_video_stats_update(stream);
+	}
+
+	uvc_video_stats_decode(stream, data, len);
 
 	/* Store the payload FID bit and return immediately when the buffer is
 	 * NULL.
@@ -861,6 +1007,8 @@ static void uvc_uninit_video(struct uvc_streaming *stream, int free_buffers)
 	struct urb *urb;
 	unsigned int i;
 
+	uvc_video_stats_dump(stream);
+
 	for (i = 0; i < UVC_URBS; ++i) {
 		urb = stream->urb[i];
 		if (urb == NULL)
@@ -994,6 +1142,8 @@ static int uvc_init_video(struct uvc_streaming *stream, gfp_t gfp_flags)
 	stream->bulk.skip_payload = 0;
 	stream->bulk.payload_size = 0;
 
+	uvc_video_stats_init(stream);
+
 	if (intf->num_altsetting > 1) {
 		struct usb_host_endpoint *best_ep = NULL;
 		unsigned int best_psize = 3 * 1024;
diff --git a/drivers/media/video/uvc/uvcvideo.h b/drivers/media/video/uvc/uvcvideo.h
index 20107fd..6ec6c53 100644
--- a/drivers/media/video/uvc/uvcvideo.h
+++ b/drivers/media/video/uvc/uvcvideo.h
@@ -495,6 +495,39 @@ struct uvc_streaming {
 
 	__u32 sequence;
 	__u8 last_fid;
+
+	struct {
+		struct {
+			unsigned int nb_frames;		/* Number of frames */
+			unsigned int nb_pts_constant;	/* Number of frames with constant PTS */
+			unsigned int nb_pts_early;	/* Number of frames with early PTS */
+			unsigned int nb_pts_initial;	/* Number of frames with initial PTS */
+			unsigned int nb_scr_count_ok;	/* Number of frames with at least one SCR per non empty packet */
+			unsigned int nb_scr_diffs_ok;	/* Number of frames with varying SCR.STC */
+		} stream;
+
+		struct uvc_stats_frame {
+			unsigned int size;		/* Number of bytes captured */
+			unsigned int first_data;	/* Index of the first non-empty packet */
+
+			unsigned int nb_packets;	/* Number of packets */
+			unsigned int nb_non_empty_packets;	/* Number of non-empty packets */
+			unsigned int nb_invalid_headers;/* Number of packets with an invalid header */
+			unsigned int nb_errors;		/* Number of packets with the error bit set */
+
+			unsigned int nb_pts;		/* Number of packets with a PTS timestamp */
+			unsigned int nb_pts_diffs;	/* Number of PTS differences inside a frame */
+			unsigned int last_pts_diff;	/* Index of the last PTS difference */
+			bool has_initial_pts;		/* Whether the first non-empty packet has a PTS */
+			bool has_early_pts;		/* Whether a PTS is present before the first non-empty packet */
+			u32 pts;			/* PTS of the last packet */
+
+			unsigned int nb_scr;		/* Number of packets with a SCR timestamp */
+			unsigned int nb_scr_diffs;	/* Number of SCR.STC differences inside a frame */
+			u16 scr_sof;			/* SCR.SOF of the last packet */
+			u32 scr_stc;			/* SCR.STC of the last packet */
+		} frame;
+	} stats;
 };
 
 enum uvc_device_state {
@@ -566,6 +599,7 @@ struct uvc_driver {
 #define UVC_TRACE_SUSPEND	(1 << 8)
 #define UVC_TRACE_STATUS	(1 << 9)
 #define UVC_TRACE_VIDEO		(1 << 10)
+#define UVC_TRACE_TIMESTAMP	(1 << 11)
 
 #define UVC_WARN_MINMAX		0
 #define UVC_WARN_PROBE_DEF	1
-- 
Regards,

Laurent Pinchart



From ajay.bhargav at einfochips.com  Wed Jun 15 15:04:47 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Wed, 15 Jun 2011 18:34:47 +0530 (IST)
Subject: [Linux-uvc-devel] Multiple streaming interface and
	MPEG2-TS	support?
In-Reply-To: <1402894839.356026.1308142894934.JavaMail.root@ahm.einfochips.com>
Message-ID: <203022194.356046.1308143086997.JavaMail.root@ahm.einfochips.com>

Hi everyone, 

referring to message from mail archive (http://www.mail-archive.com/linux-uvc-devel at lists.berlios.de/msg04261.html). 

I am also trying to do somewhat similar. I have a camera which sends out video stream as MPEG2-TS. From archive i understood what places changes are needed, but i want to know how to go ahead with them. 

Regards, 
Ajay Bhargav 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110615/5c99b803/attachment.html>

From kofi at jedamzik.net  Wed Jun 15 16:01:29 2011
From: kofi at jedamzik.net (Kofi Jedamzik)
Date: Wed, 15 Jun 2011 16:01:29 +0200
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
Message-ID: <BANLkTinASGtMKkZM8TGfGaBXs8j_9sehUA@mail.gmail.com>

Hi,

... there is a "new" Logitech Webcam called "B990 HD Webcam" with
device id 046d:0828
it has an integrated hardware based H264 baseline video encoder

This cam is not listed.

MJPEG seems to work but I want to get out the H264 stream.

Is there anyone who could give me a hint how to do it?

Here are som dumps which might be helpful...

best regards

Kofi

#lsusb --verbose -d 046d:0828
(big output) -->> http://pastebin.com/9WFgytwY

#guvcview --device /dev/video0 --verbose
(big output) -->> http://pastebin.com/pqmUGYyn

#modinfo uvcvideo
filename:
/lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko
version:        v1.0.0

#tail /var/log/syslog
[11588.664940] usb 1-6: USB disconnect, address 4
[11594.580043] usb 1-6: new high speed USB device using ehci_hcd and address 5
[11594.927759] uvcvideo: Unknown video format
34363248-0000-0010-8000-00aa00389b71
[11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828)
[11595.024093] input: UVC Camera (046d:0828) as
/devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8


From bug-track at fisher-privat.net  Wed Jun 15 16:40:36 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Wed, 15 Jun 2011 16:40:36 +0200
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <BANLkTinASGtMKkZM8TGfGaBXs8j_9sehUA@mail.gmail.com>
References: <BANLkTinASGtMKkZM8TGfGaBXs8j_9sehUA@mail.gmail.com>
Message-ID: <1308148836.8247.5.camel@mini>

Hi,

theoretically this should do it:
gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink

but, if i'm correct, current kernel do not support h264. There was a
patch for some time, but im not sure if Laurent applyed it.

Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik:
> Hi,
> 
> ... there is a "new" Logitech Webcam called "B990 HD Webcam" with
> device id 046d:0828
> it has an integrated hardware based H264 baseline video encoder
> 
> This cam is not listed.
> 
> MJPEG seems to work but I want to get out the H264 stream.
> 
> Is there anyone who could give me a hint how to do it?
> 
> Here are som dumps which might be helpful...
> 
> best regards
> 
> Kofi
> 
> #lsusb --verbose -d 046d:0828
> (big output) -->> http://pastebin.com/9WFgytwY
> 
> #guvcview --device /dev/video0 --verbose
> (big output) -->> http://pastebin.com/pqmUGYyn
> 
> #modinfo uvcvideo
> filename:
> /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko
> version:        v1.0.0
> 
> #tail /var/log/syslog
> [11588.664940] usb 1-6: USB disconnect, address 4
> [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and address 5
> [11594.927759] uvcvideo: Unknown video format
> 34363248-0000-0010-8000-00aa00389b71
> [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828)
> [11595.024093] input: UVC Camera (046d:0828) as
> /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8
-- 
Regards,
        Alexey



From ajay.bhargav at einfochips.com  Thu Jun 16 06:56:52 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Thu, 16 Jun 2011 10:26:52 +0530 (IST)
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <1308148836.8247.5.camel@mini>
Message-ID: <804463466.358092.1308200212914.JavaMail.root@ahm.einfochips.com>

Hi, 

as far as i know stream based format are not yet supported in UVC driver. and UVC 1.1 specifications defines the H.264 payload specifications. I dont think they are implemented yet. 

I have a camera with me which outputs H.264 stream using MPEG2-TS container format. If you have any idea how to add support for MPEG2-TS please let me know. 

--Ajay 

----- Original Message ----- 
From: "Alexey Fisher" <bug-track at fisher-privat.net> 
To: "Kofi Jedamzik" <kofi at jedamzik.net> 
Cc: linux-uvc-devel at lists.berlios.de 
Sent: Wednesday, June 15, 2011 8:10:36 PM 
Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist 

Hi, 

theoretically this should do it: 
gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink 

but, if i'm correct, current kernel do not support h264. There was a 
patch for some time, but im not sure if Laurent applyed it. 

Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik: 
> Hi, 
> 
> ... there is a "new" Logitech Webcam called "B990 HD Webcam" with 
> device id 046d:0828 
> it has an integrated hardware based H264 baseline video encoder 
> 
> This cam is not listed. 
> 
> MJPEG seems to work but I want to get out the H264 stream. 
> 
> Is there anyone who could give me a hint how to do it? 
> 
> Here are som dumps which might be helpful... 
> 
> best regards 
> 
> Kofi 
> 
> #lsusb --verbose -d 046d:0828 
> (big output) -->> http://pastebin.com/9WFgytwY 
> 
> #guvcview --device /dev/video0 --verbose 
> (big output) -->> http://pastebin.com/pqmUGYyn 
> 
> #modinfo uvcvideo 
> filename: 
> /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko 
> version: v1.0.0 
> 
> #tail /var/log/syslog 
> [11588.664940] usb 1-6: USB disconnect, address 4 
> [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and address 5 
> [11594.927759] uvcvideo: Unknown video format 
> 34363248-0000-0010-8000-00aa00389b71 
> [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828) 
> [11595.024093] input: UVC Camera (046d:0828) as 
> /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8 
-- 
Regards, 
Alexey 

_______________________________________________ 
Linux-uvc-devel mailing list 
Linux-uvc-devel at lists.berlios.de 
https://lists.berlios.de/mailman/listinfo/linux-uvc-devel 

-- 
This message has been scanned for viruses and 
dangerous content by Clean Mail Gateway, and is 
believed to be clean. 

************************************************************************************************************************************************************* 
einfochips Business Disclaimer : This e-mail message and all attachments transmitted with it are intended solely for the use of the addressee and may contain legally privileged and confidential information. If the reader of this message is not the intended recipient, or an employee or agent responsible for delivering this message to the intended recipient, you are hereby notified that any dissemination, distribution, copying, or other use of this message or its attachments is strictly prohibited. If you have received this message in error, please notify the sender immediately by replying to this message and please delete it from your computer. Any views expressed in this message are those of the individual sender unless otherwise stated. Company has taken enough precautions to prevent the spread of viruses. However the company accepts no liability for any damage caused by any virus transmitted by this email. 
************************************************************************************************************************************************************* 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110616/aead0764/attachment.html>

From bug-track at fisher-privat.net  Thu Jun 16 08:36:02 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Thu, 16 Jun 2011 08:36:02 +0200
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <804463466.358092.1308200212914.JavaMail.root@ahm.einfochips.com>
References: <804463466.358092.1308200212914.JavaMail.root@ahm.einfochips.com>
Message-ID: <1308206162.4182.2.camel@mini>

Hi,

Stephan Lachowsky has provided some patches for MPEG-TS and H264
support.
https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006287.html
https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006288.html

I do not know the current status of this work. May be Laurent can tell
some thing about it.

Am Donnerstag, den 16.06.2011, 10:26 +0530 schrieb Ajay Bhargav:
> Hi,
> 
> as far as i know stream based format are not yet supported in UVC
> driver. and UVC 1.1 specifications defines the H.264 payload
> specifications. I dont think they are implemented yet.
> 
> I have a camera with me which outputs H.264 stream using MPEG2-TS
> container format. If you have any idea how to add support for MPEG2-TS
> please let me know.
> 
> --Ajay
> 
> ----- Original Message -----
> From: "Alexey Fisher" <bug-track at fisher-privat.net>
> To: "Kofi Jedamzik" <kofi at jedamzik.net>
> Cc: linux-uvc-devel at lists.berlios.de
> Sent: Wednesday, June 15, 2011 8:10:36 PM
> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in
> Devicelist
> 
> Hi,
> 
> theoretically this should do it:
> gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink
> 
> but, if i'm correct, current kernel do not support h264. There was a
> patch for some time, but im not sure if Laurent applyed it.
> 
> Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik:
> > Hi,
> > 
> > ... there is a "new" Logitech Webcam called "B990 HD Webcam" with
> > device id 046d:0828
> > it has an integrated hardware based H264 baseline video encoder
> > 
> > This cam is not listed.
> > 
> > MJPEG seems to work but I want to get out the H264 stream.
> > 
> > Is there anyone who could give me a hint how to do it?
> > 
> > Here are som dumps which might be helpful...
> > 
> > best regards
> > 
> > Kofi
> > 
> > #lsusb --verbose -d 046d:0828
> > (big output) -->> http://pastebin.com/9WFgytwY
> > 
> > #guvcview --device /dev/video0 --verbose
> > (big output) -->> http://pastebin.com/pqmUGYyn
> > 
> > #modinfo uvcvideo
> > filename:
> > /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko
> > version:        v1.0.0
> > 
> > #tail /var/log/syslog
> > [11588.664940] usb 1-6: USB disconnect, address 4
> > [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and
> address 5
> > [11594.927759] uvcvideo: Unknown video format
> > 34363248-0000-0010-8000-00aa00389b71
> > [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828)
> > [11595.024093] input: UVC Camera (046d:0828) as
> > /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8
> -- 
> Regards,
>         Alexey
> 
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by Clean Mail Gateway, and is
> believed to be clean.
> 
> *************************************************************************************************************************************************************
> einfochips Business Disclaimer : This e-mail message and all
> attachments transmitted with it are intended solely for the use of the
> addressee and may contain legally privileged and confidential
> information. If the reader of this message is not the intended
> recipient, or an employee or agent responsible for delivering this
> message to the intended recipient, you are hereby notified that any
> dissemination, distribution, copying, or other use of this message or
> its attachments is strictly prohibited. If you have received this
> message in error, please notify the sender immediately by replying to
> this message and please delete it from your computer. Any views
> expressed in this message are those of the individual sender unless
> otherwise stated. Company has taken enough precautions to prevent the
> spread of viruses. However the company accepts no liability for any
> damage caused by any virus transmitted by this email.
> *************************************************************************************************************************************************************
> 
> 

-- 
Regards,
        Alexey



From ajay.bhargav at einfochips.com  Thu Jun 16 08:41:00 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Thu, 16 Jun 2011 12:11:00 +0530 (IST)
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <195726721.358809.1308206357048.JavaMail.root@ahm.einfochips.com>
Message-ID: <1124598449.358818.1308206460416.JavaMail.root@ahm.einfochips.com>

Hi Alexey, 

Thanks for reply, Well i have already done this before even i saw that patches in mailing list... I am able to add /dev/video0 device on my machine but i am not able to read from that device. Here is the log: 


uvcvideo 1-1.2:1.0: usb_probe_interface 
uvcvideo 1-1.2:1.0: usb_probe_interface - got id 
uvcvideo: Probing generic UVC device 1.2 
uvcvideo: Videostreaming interface: 0x0A 
uvcvideo: Format 10, Desc Size: 7 
uvcvideo: Found format MPEG2-TS. 
uvcvideo: Found a Status endpoint (addr 81). 
uvcvideo: Found UVC 1.00 device USB Camera Aoni (04a8:0536) 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/2 to device 1.2 entity 5 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/3 to device 1.2 entity 5 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/6 to device 1.2 entity 5 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/7 to device 1.2 entity 5 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/8 to device 1.2 entity 5 
uvcvideo: Added control 00000000-0000-0000-0000-000000000101/5 to device 1.2 entity 5 
uvcvideo: Scanning UVC chain: OT 3 <- PU 5 <- SU 4 <- IT 1 
(-> XU 6)<6>uvcvideo: video stream id: 3 
uvcvideo: Stream List id: 3, Dev stream id: 3 
uvcvideo: Found a valid video chain (1 -> 3). 
uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround. 
input: USB Camera Aoni as /class/input/input0 
usb 1-1.2: link qh1024-0001/ff389200 start 1023 [1/0 us] 
uvcvideo: UVC device initialized. 
usb 1-1.2: adding 1-1.2:1.1 (config #1, interface 1) 
usb 1-1.2:1.1: uevent 
usb 1-1.2: adding 1-1.2:1.2 (config #1, interface 2) 
usb 1-1.2:1.2: uevent 
snd-usb-audio 1-1.2:1.2: usb_probe_interface 
snd-usb-audio 1-1.2:1.2: usb_probe_interface - got id 
usb 1-1.2: adding 1-1.2:1.3 (config #1, interface 3) 
usb 1-1.2:1.3: uevent 
uvcvideo: uvc_v4l2_open 
uvcvideo: uvc_v4l2_ioctl(VIDIOC_QUERYCAP) 
uvcvideo: uvc_v4l2_ioctl(VIDIOCGCAP) 
uvcvideo: Trying format 0x4745504d (MPEG): 10000x10000. 
uvcvideo: Default cam size: 10000x10000. 
uvcvideo: Using default frame interval 0.1 us (10000000.0 fps). 
uvcvideo: uvc_v4l2_release 

As per this conversation (http://lists.berlios.de/pipermail/linux-uvc-devel/2009-July/005008.html) it looks like there are lot more changes to be done, so that UVC is able to forward proper information to v4l2 layer. 

--Ajay 


----- Original Message ----- 
From: "Alexey Fisher" <bug-track at fisher-privat.net> 
To: "Ajay Bhargav" <ajay.bhargav at einfochips.com> 
Cc: linux-uvc-devel at lists.berlios.de, "Kofi Jedamzik" <kofi at jedamzik.net> 
Sent: Thursday, June 16, 2011 12:06:02 PM 
Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist 

Hi, 

Stephan Lachowsky has provided some patches for MPEG-TS and H264 
support. 
https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006287.html 
https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006288.html 

I do not know the current status of this work. May be Laurent can tell 
some thing about it. 

Am Donnerstag, den 16.06.2011, 10:26 +0530 schrieb Ajay Bhargav: 
> Hi, 
> 
> as far as i know stream based format are not yet supported in UVC 
> driver. and UVC 1.1 specifications defines the H.264 payload 
> specifications. I dont think they are implemented yet. 
> 
> I have a camera with me which outputs H.264 stream using MPEG2-TS 
> container format. If you have any idea how to add support for MPEG2-TS 
> please let me know. 
> 
> --Ajay 
> 
> ----- Original Message ----- 
> From: "Alexey Fisher" <bug-track at fisher-privat.net> 
> To: "Kofi Jedamzik" <kofi at jedamzik.net> 
> Cc: linux-uvc-devel at lists.berlios.de 
> Sent: Wednesday, June 15, 2011 8:10:36 PM 
> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in 
> Devicelist 
> 
> Hi, 
> 
> theoretically this should do it: 
> gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink 
> 
> but, if i'm correct, current kernel do not support h264. There was a 
> patch for some time, but im not sure if Laurent applyed it. 
> 
> Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik: 
> > Hi, 
> > 
> > ... there is a "new" Logitech Webcam called "B990 HD Webcam" with 
> > device id 046d:0828 
> > it has an integrated hardware based H264 baseline video encoder 
> > 
> > This cam is not listed. 
> > 
> > MJPEG seems to work but I want to get out the H264 stream. 
> > 
> > Is there anyone who could give me a hint how to do it? 
> > 
> > Here are som dumps which might be helpful... 
> > 
> > best regards 
> > 
> > Kofi 
> > 
> > #lsusb --verbose -d 046d:0828 
> > (big output) -->> http://pastebin.com/9WFgytwY 
> > 
> > #guvcview --device /dev/video0 --verbose 
> > (big output) -->> http://pastebin.com/pqmUGYyn 
> > 
> > #modinfo uvcvideo 
> > filename: 
> > /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko 
> > version: v1.0.0 
> > 
> > #tail /var/log/syslog 
> > [11588.664940] usb 1-6: USB disconnect, address 4 
> > [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and 
> address 5 
> > [11594.927759] uvcvideo: Unknown video format 
> > 34363248-0000-0010-8000-00aa00389b71 
> > [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828) 
> > [11595.024093] input: UVC Camera (046d:0828) as 
> > /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8 
> -- 
> Regards, 
> Alexey 
> 
> _______________________________________________ 
> Linux-uvc-devel mailing list 
> Linux-uvc-devel at lists.berlios.de 
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel 
> 
> -- 
> This message has been scanned for viruses and 
> dangerous content by Clean Mail Gateway, and is 
> believed to be clean. 
> 
> ************************************************************************************************************************************************************* 
> einfochips Business Disclaimer : This e-mail message and all 
> attachments transmitted with it are intended solely for the use of the 
> addressee and may contain legally privileged and confidential 
> information. If the reader of this message is not the intended 
> recipient, or an employee or agent responsible for delivering this 
> message to the intended recipient, you are hereby notified that any 
> dissemination, distribution, copying, or other use of this message or 
> its attachments is strictly prohibited. If you have received this 
> message in error, please notify the sender immediately by replying to 
> this message and please delete it from your computer. Any views 
> expressed in this message are those of the individual sender unless 
> otherwise stated. Company has taken enough precautions to prevent the 
> spread of viruses. However the company accepts no liability for any 
> damage caused by any virus transmitted by this email. 
> ************************************************************************************************************************************************************* 
> 
> 

-- 
Regards, 
Alexey 


-- 
This message has been scanned for viruses and 
dangerous content by Clean Mail Gateway, and is 
believed to be clean. 

************************************************************************************************************************************************************* 
einfochips Business Disclaimer : This e-mail message and all attachments transmitted with it are intended solely for the use of the addressee and may contain legally privileged and confidential information. If the reader of this message is not the intended recipient, or an employee or agent responsible for delivering this message to the intended recipient, you are hereby notified that any dissemination, distribution, copying, or other use of this message or its attachments is strictly prohibited. If you have received this message in error, please notify the sender immediately by replying to this message and please delete it from your computer. Any views expressed in this message are those of the individual sender unless otherwise stated. Company has taken enough precautions to prevent the spread of viruses. However the company accepts no liability for any damage caused by any virus transmitted by this email. 
************************************************************************************************************************************************************* 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110616/8c78b234/attachment.html>

From michal at physics.ubc.ca  Thu Jun 16 09:45:53 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Thu, 16 Jun 2011 00:45:53 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308121311.7917.4.camel@mini>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
Message-ID: <alpine.LNX.2.00.1106152253560.16649@tristan>


On Wed, 15 Jun 2011, Alexey Fisher wrote:

> Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>> On Tue, 14 Jun 2011, Alexey Fisher wrote:
>>
>>> Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>>>
>>>>> Hi,
>>>>>
>>>>> I think you nailed it.  Every frame looks perfect now.  The trace shows a few
>>>>> of these:
>>>>>
>>>>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>>>
>>>>> but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480
>>>>> anyway) - in MJPG all the frames have the right size.
>>>>>
>>>>> There is a some weirdness with frame rates depending on the exposure setting:
>>>>> 1) Exposure, auto gives 4 options: auto priority mode, manual mode, shutter
>>>>> priority mode, and aperture priority mode.  Auto and shutter don't seem to be
>>>>> settable (errors from guvcview when chosen). There is also an "Exposure, auto
>>>>> priority" checkbox.
>>>>>
>>>>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
>>>>>
>>>>> But I can't really complain at this point - the corrupt frames are gone.
>>>>> Will that quirk be added to the driver (usb id is: 0408:2fb1)?
>>>>>
>>>>> Thanks,
>>>>>
>>>>
>>>> Hi,
>>>>
>>>> it seems like I am much better off by fully disabling FID (with your
>>>> patch) than before.  With the patch, YUYV frames are _always_ the right
>>>> size.  There are still some problems:
>>>>
>>>> 1) corrupt frames - with part of the image missing or the image displaced.
>>>> Sometimes (but definitely not always) these occur at the same time as a
>>>> trace message saying the error bit is set.
>>>>
>>>> 2) sometimes the camera just won't start.  when guvcview (or luvcview) is
>>>> started, no frames come back from the camera.  There is a light next to
>>>> the camera that comes on to indicate it should be active, but no frames
>>>> arrive.  There seems to be a fairly strong correlation with using luvcview
>>>> (which from the traces seems to use some different mechanism to get frames from
>>>> the driver from guvcview.  guvcview polls, luvcview doesn't).  Sometimes
>>>> just restarting guvcview several times will work and the camera eventually
>>>> starts.  Sometimes just changing resolution or frame rates succeeds in
>>>> starting the camera.  I haven't found anything reproducible.  I do not
>>>> think this is related to your patch, as it did happen once before your
>>>> patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
>>>> modules does not consistently solve it. guvcview just lists:
>>>>
>>>>   Could not grab image (select timeout): Resource temporarily unavailable
>>>>
>>>> and the trace shows guvcview polling, but nothing else going on.
>>>>
>>>> I have tried adding the other quirks to the FID quirk, but haven't seen
>>>> any improvement with any others.
>>>>
>>>> Thanks for you help -
>>>>
>>>> Carl
>>>
>>> Webcam returns error in the middle of some frame, theoretically we
>>> should drop complete frame. But current uvcvideo just gather data and
>>> assume the cam will resend previous parts to complete the frame.
>>>
>>> Try attached patch additionally to my previous one.
>>> --
>>> Regards,
>>>        Alexey
>>>
>>
>> Hi,
>>
>> its very hard to say if this helps or not.  There are still corrupt
>> frames, and some seem to occur at about the same time as the error bit
>> trace messages, but some don't show anything unusual in the traces that
>> I've noticed yet.
>>
>> Since all the uncompressed frames were the right size (even ones where the
>> error bit was set somewhere) those frames are at least complete.
>>
>> Is there some convenient way to capture just those frames with the error
>> bit set?
>>
>> Thanks,
>>
>> Carl
>>
>
> you can try this command:
> gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity ! jpegenc ! multifilesink location=tmp-%05d.jpg
>
> it will produce for each frame one jpeg file. Watch out, it will produce
> lots of files.
>
> Attached patch is replacement for the last one. You do not need setting
> trace option, it will print all we need.
>
> -- 
> Regards,
>        Alexey
>
Hi,

we're learning a little here.  If I set nodrop=1, I get lots of frames 
that are too short (gst complains that they are fewer bytes than expected) 
but those coincide with the status < 0 test in uvc_video_decode_isoc - 
they do not correspond to those with the error bit set.

The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful 
even, since it means dropping frames that are in fact ok.

I have captured some bad frames though - one that has the colors badly 
screwed up - where everything is a bright green, and another where the 
image appears to be shifted about a quarter of a frame to one side - these 
were collected without the nodrop=1 parameter, so they are not caught as 
corrupt by any of the current tests. They are delivered as occuring with 
the full expected frame size. Are there other flags we should be checking 
for?  (hmm, like maybe an FID at the wrong time?)

Carl



From pj.assis at gmail.com  Thu Jun 16 10:42:08 2011
From: pj.assis at gmail.com (Paulo Assis)
Date: Thu, 16 Jun 2011 09:42:08 +0100
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <1124598449.358818.1308206460416.JavaMail.root@ahm.einfochips.com>
References: <195726721.358809.1308206357048.JavaMail.root@ahm.einfochips.com>
	<1124598449.358818.1308206460416.JavaMail.root@ahm.einfochips.com>
Message-ID: <BANLkTinwfMnJAesCtSaTcnfYqVWbWRE5cw@mail.gmail.com>

Hi,
Some documentation on the subject:

http://www.quickcamteam.net/uvc-h264

Regards,
Paulo

2011/6/16 Ajay Bhargav <ajay.bhargav at einfochips.com>:
> Hi Alexey,
>
> Thanks for reply, Well i have already done this before even i saw that
> patches in mailing list... I am able to add /dev/video0 device on my machine
> but i am not able to read from that device. Here is the log:
>
>
> uvcvideo 1-1.2:1.0: usb_probe_interface
> uvcvideo 1-1.2:1.0: usb_probe_interface - got id
> uvcvideo: Probing generic UVC device 1.2
> uvcvideo: Videostreaming interface: 0x0A
> uvcvideo: Format 10, Desc Size: 7
> uvcvideo: Found format MPEG2-TS.
> uvcvideo: Found a Status endpoint (addr 81).
> uvcvideo: Found UVC 1.00 device USB Camera Aoni?? (04a8:0536)
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/2 to device 1.2
> entity 5
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/3 to device 1.2
> entity 5
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/6 to device 1.2
> entity 5
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/7 to device 1.2
> entity 5
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/8 to device 1.2
> entity 5
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/5 to device 1.2
> entity 5
> uvcvideo: Scanning UVC chain: OT 3 <- PU 5 <- SU 4 <- IT 1
> ?(-> XU 6)<6>uvcvideo: video stream id: 3
> uvcvideo: Stream List id: 3, Dev stream id: 3
> uvcvideo: Found a valid video chain (1 -> 3).
> uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling
> workaround.
> input: USB Camera Aoni?? as /class/input/input0
> usb 1-1.2: link qh1024-0001/ff389200 start 1023 [1/0 us]
> uvcvideo: UVC device initialized.
> usb 1-1.2: adding 1-1.2:1.1 (config #1, interface 1)
> usb 1-1.2:1.1: uevent
> usb 1-1.2: adding 1-1.2:1.2 (config #1, interface 2)
> usb 1-1.2:1.2: uevent
> snd-usb-audio 1-1.2:1.2: usb_probe_interface
> snd-usb-audio 1-1.2:1.2: usb_probe_interface - got id
> usb 1-1.2: adding 1-1.2:1.3 (config #1, interface 3)
> usb 1-1.2:1.3: uevent
> uvcvideo: uvc_v4l2_open
> uvcvideo: uvc_v4l2_ioctl(VIDIOC_QUERYCAP)
> uvcvideo: uvc_v4l2_ioctl(VIDIOCGCAP)
> uvcvideo: Trying format 0x4745504d (MPEG): 10000x10000.
> uvcvideo: Default cam size: 10000x10000.
> uvcvideo: Using default frame interval 0.1 us (10000000.0 fps).
> uvcvideo: uvc_v4l2_release
>
> As per this conversation
> (http://lists.berlios.de/pipermail/linux-uvc-devel/2009-July/005008.html) it
> looks like there are lot more changes to be done, so that UVC is able to
> forward proper information to v4l2 layer.
>
> --Ajay
>
>
> ----- Original Message -----
> From: "Alexey Fisher" <bug-track at fisher-privat.net>
> To: "Ajay Bhargav" <ajay.bhargav at einfochips.com>
> Cc: linux-uvc-devel at lists.berlios.de, "Kofi Jedamzik" <kofi at jedamzik.net>
> Sent: Thursday, June 16, 2011 12:06:02 PM
> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
>
> Hi,
>
> Stephan Lachowsky has provided some patches for MPEG-TS and H264
> support.
> https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006287.html
> https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006288.html
>
> I do not know the current status of this work. May be Laurent can tell
> some thing about it.
>
> Am Donnerstag, den 16.06.2011, 10:26 +0530 schrieb Ajay Bhargav:
>> Hi,
>>
>> as far as i know stream based format are not yet supported in UVC
>> driver. and UVC 1.1 specifications defines the H.264 payload
>> specifications. I dont think they are implemented yet.
>>
>> I have a camera with me which outputs H.264 stream using MPEG2-TS
>> container format. If you have any idea how to add support for MPEG2-TS
>> please let me know.
>>
>> --Ajay
>>
>> ----- Original Message -----
>> From: "Alexey Fisher" <bug-track at fisher-privat.net>
>> To: "Kofi Jedamzik" <kofi at jedamzik.net>
>> Cc: linux-uvc-devel at lists.berlios.de
>> Sent: Wednesday, June 15, 2011 8:10:36 PM
>> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in
>> Devicelist
>>
>> Hi,
>>
>> theoretically this should do it:
>> gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink
>>
>> but, if i'm correct, current kernel do not support h264. There was a
>> patch for some time, but im not sure if Laurent applyed it.
>>
>> Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik:
>> > Hi,
>> >
>> > ... there is a "new" Logitech Webcam called "B990 HD Webcam" with
>> > device id 046d:0828
>> > it has an integrated hardware based H264 baseline video encoder
>> >
>> > This cam is not listed.
>> >
>> > MJPEG seems to work but I want to get out the H264 stream.
>> >
>> > Is there anyone who could give me a hint how to do it?
>> >
>> > Here are som dumps which might be helpful...
>> >
>> > best regards
>> >
>> > Kofi
>> >
>> > #lsusb --verbose -d 046d:0828
>> > (big output) -->> http://pastebin.com/9WFgytwY
>> >
>> > #guvcview --device /dev/video0 --verbose
>> > (big output) -->> http://pastebin.com/pqmUGYyn
>> >
>> > #modinfo uvcvideo
>> > filename:
>> > /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko
>> > version: ? ? ? ?v1.0.0
>> >
>> > #tail /var/log/syslog
>> > [11588.664940] usb 1-6: USB disconnect, address 4
>> > [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and
>> address 5
>> > [11594.927759] uvcvideo: Unknown video format
>> > 34363248-0000-0010-8000-00aa00389b71
>> > [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828)
>> > [11595.024093] input: UVC Camera (046d:0828) as
>> > /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8
>> --
>> Regards,
>> ? ? ? ? Alexey
>>
>> _______________________________________________
>> Linux-uvc-devel mailing list
>> Linux-uvc-devel at lists.berlios.de
>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>>
>> --
>> This message has been scanned for viruses and
>> dangerous content by Clean Mail Gateway, and is
>> believed to be clean.
>>
>>
>> *************************************************************************************************************************************************************
>> einfochips Business Disclaimer : This e-mail message and all
>> attachments transmitted with it are intended solely for the use of the
>> addressee and may contain legally privileged and confidential
>> information. If the reader of this message is not the intended
>> recipient, or an employee or agent responsible for delivering this
>> message to the intended recipient, you are hereby notified that any
>> dissemination, distribution, copying, or other use of this message or
>> its attachments is strictly prohibited. If you have received this
>> message in error, please notify the sender immediately by replying to
>> this message and please delete it from your computer. Any views
>> expressed in this message are those of the individual sender unless
>> otherwise stated. Company has taken enough precautions to prevent the
>> spread of viruses. However the company accepts no liability for any
>> damage caused by any virus transmitted by this email.
>>
>> *************************************************************************************************************************************************************
>>
>>
>
> --
> Regards,
> ?? ? ? ?Alexey
>
>
> --
> This message has been scanned for viruses and
> dangerous content by Clean Mail Gateway, and is
> believed to be clean.
>
> *************************************************************************************************************************************************************
> einfochips Business Disclaimer : This e-mail message and all attachments
> transmitted with it are intended solely for the use of the addressee and may
> contain legally privileged and confidential information. If the reader of
> this message is not the intended recipient, or an employee or agent
> responsible for delivering this message to the intended recipient, you are
> hereby notified that any dissemination, distribution, copying, or other use
> of this message or its attachments is strictly prohibited. If you have
> received this message in error, please notify the sender immediately by
> replying to this message and please delete it from your computer. Any views
> expressed in this message are those of the individual sender unless
> otherwise stated. Company has taken enough precautions to prevent the spread
> of viruses. However the company accepts no liability for any damage caused
> by any virus transmitted by this email.
> *************************************************************************************************************************************************************
>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>


From laurent.pinchart at ideasonboard.com  Thu Jun 16 10:59:27 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Thu, 16 Jun 2011 10:59:27 +0200
Subject: [Linux-uvc-devel] [PATCH v2] uvcvideo: Extract timestamp-related
	statistics
In-Reply-To: <1308129214-9492-1-git-send-email-laurent.pinchart@ideasonboard.com>
References: <1308129214-9492-1-git-send-email-laurent.pinchart@ideasonboard.com>
Message-ID: <1308214767-30766-1-git-send-email-laurent.pinchart@ideasonboard.com>

Signed-off-by: Laurent Pinchart <laurent.pinchart at ideasonboard.com>
---
 drivers/media/video/uvc/uvc_video.c |  196 ++++++++++++++++++++++++++++++++++-
 drivers/media/video/uvc/uvcvideo.h  |   39 +++++++
 2 files changed, 234 insertions(+), 1 deletions(-)

Hi Yann,

Here's a second version of the patch that prints the estimated SOF frequency.
With this information we should have all the stats we need. Let me know if you
think something is missing. I will then run this on the webcams I own and post
the results.

diff --git a/drivers/media/video/uvc/uvc_video.c b/drivers/media/video/uvc/uvc_video.c
index fc766b9..feb585b 100644
--- a/drivers/media/video/uvc/uvc_video.c
+++ b/drivers/media/video/uvc/uvc_video.c
@@ -358,6 +358,191 @@ int uvc_commit_video(struct uvc_streaming *stream,
 }
 
 /* ------------------------------------------------------------------------
+ * Timestamp statistics
+ */
+
+static void uvc_video_stats_decode(struct uvc_streaming *stream,
+		const __u8 *data, int len)
+{
+	unsigned int header_size;
+	bool has_pts = false;
+	bool has_scr = false;
+	u16 scr_sof;
+	u32 scr_stc;
+	u32 pts;
+
+	if (stream->stats.stream.nb_frames == 0 &&
+	    stream->stats.frame.nb_packets == 0)
+		ktime_get_ts(&stream->stats.stream.start_ts);
+
+	switch (data[1] & (UVC_STREAM_PTS | UVC_STREAM_SCR)) {
+	case UVC_STREAM_PTS | UVC_STREAM_SCR:
+		header_size = 12;
+		has_pts = true;
+		has_scr = true;
+		break;
+	case UVC_STREAM_PTS:
+		header_size = 6;
+		has_pts = true;
+		break;
+	case UVC_STREAM_SCR:
+		header_size = 8;
+		has_scr = true;
+		break;
+	default:
+		header_size = 2;
+		break;
+	}
+
+	/* Check for invalid headers. */
+	if (len < header_size) {
+		stream->stats.frame.nb_invalid_headers++;
+		return;
+	}
+
+	/* Extract the timestamps. */
+	if (has_pts)
+		pts = get_unaligned_le32(&data[2]);
+
+	if (has_scr) {
+		scr_stc = get_unaligned_le32(&data[header_size - 6]);
+		scr_sof = get_unaligned_le16(&data[header_size - 2]);
+	}
+
+	/* Is PTS constant through the whole frame ? */
+	if (has_pts && stream->stats.frame.nb_pts) {
+		if (stream->stats.frame.pts != pts) {
+			stream->stats.frame.nb_pts_diffs++;
+			stream->stats.frame.last_pts_diff =
+				stream->stats.frame.nb_packets;
+		}
+	}
+
+	if (has_pts) {
+		stream->stats.frame.nb_pts++;
+		stream->stats.frame.pts = pts;
+	}
+
+	/* Do all frames have a PTS in their first non-empty packet, or before
+	 * their first empty packet ?
+	 */
+	if (stream->stats.frame.size == 0) {
+		if (len > header_size)
+			stream->stats.frame.has_initial_pts = has_pts;
+		if (len == header_size && has_pts)
+			stream->stats.frame.has_early_pts = true;
+	}
+
+	/* Do the SCR.STC and SCR.SOF fields vary through the frame ? */
+	if (has_scr && stream->stats.frame.nb_scr) {
+		if (stream->stats.frame.scr_stc != scr_stc)
+			stream->stats.frame.nb_scr_diffs++;
+	}
+
+	if (has_scr) {
+		/* Expand the SOF counter to 32 bits and store its value. */
+		if (stream->stats.stream.nb_frames > 0 ||
+		    stream->stats.frame.nb_scr > 0)
+			stream->stats.stream.scr_sof_count +=
+				(scr_sof - stream->stats.stream.scr_sof) % 2048;
+		stream->stats.stream.scr_sof = scr_sof;
+
+		stream->stats.frame.nb_scr++;
+		stream->stats.frame.scr_stc = scr_stc;
+		stream->stats.frame.scr_sof = scr_sof;
+
+		if (scr_sof < stream->stats.stream.min_sof)
+			stream->stats.stream.min_sof = scr_sof;
+		if (scr_sof > stream->stats.stream.max_sof)
+			stream->stats.stream.max_sof = scr_sof;
+	}
+
+	if (stream->stats.frame.size == 0 && len > header_size)
+		stream->stats.frame.first_data = stream->stats.frame.nb_packets;
+
+	stream->stats.frame.size += len - header_size;
+	stream->stats.frame.nb_packets++;
+	if (len > header_size)
+		stream->stats.frame.nb_non_empty_packets++;
+
+	if (data[1] & UVC_STREAM_ERR)
+		stream->stats.frame.nb_errors++;
+}
+
+static void uvc_video_stats_update(struct uvc_streaming *stream)
+{
+	struct uvc_stats_frame *frame = &stream->stats.frame;
+
+	uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
+		  "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
+		  stream->sequence, frame->first_data,
+		  frame->nb_non_empty_packets, frame->nb_packets,
+		  frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
+		  frame->has_early_pts ? "" : "!",
+		  frame->has_initial_pts ? "" : "!",
+		  frame->nb_scr_diffs, frame->nb_scr);
+
+	stream->stats.stream.nb_frames++;
+
+	if (frame->has_early_pts)
+		stream->stats.stream.nb_pts_early++;
+	if (frame->has_initial_pts)
+		stream->stats.stream.nb_pts_initial++;
+	if (frame->last_pts_diff <= frame->first_data)
+		stream->stats.stream.nb_pts_constant++;
+	if (frame->nb_scr >= frame->nb_non_empty_packets)
+		stream->stats.stream.nb_scr_count_ok++;
+	if (frame->nb_scr_diffs + 1 == frame->nb_scr)
+		stream->stats.stream.nb_scr_diffs_ok++;
+
+	memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
+}
+
+static void uvc_video_stats_dump(struct uvc_streaming *stream)
+{
+	unsigned int scr_sof_freq;
+	unsigned int duration;
+	struct timespec ts;
+
+	ktime_get_ts(&ts);
+
+	ts.tv_sec -= stream->stats.stream.start_ts.tv_sec;
+	ts.tv_nsec -= stream->stats.stream.start_ts.tv_nsec;
+	if (ts.tv_nsec < 0) {
+		ts.tv_sec--;
+		ts.tv_nsec += 1000000000;
+	}
+
+	/* Compute the SCR.SOF frequency estimate. At the nominal 1kHz SOF
+	 * frequency this will not overflow before more than 1h.
+	 */
+	duration = ts.tv_sec * 1000 + ts.tv_nsec / 1000000;
+	if (duration != 0)
+		scr_sof_freq = stream->stats.stream.scr_sof_count * 1000
+			     / duration;
+	else
+		scr_sof_freq = 0;
+
+	uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
+		  "%u initial pts %u pts ok %u scr count ok %u scr diff ok, "
+		  "%u <= sof <= %u, sof freq %u.%03u kHz\n",
+		  stream->stats.stream.nb_frames,
+		  stream->stats.stream.nb_pts_early,
+		  stream->stats.stream.nb_pts_initial,
+		  stream->stats.stream.nb_pts_constant,
+		  stream->stats.stream.nb_scr_count_ok,
+		  stream->stats.stream.nb_scr_diffs_ok,
+		  stream->stats.stream.min_sof, stream->stats.stream.max_sof,
+		  scr_sof_freq / 1000, scr_sof_freq % 1000);
+}
+
+static void uvc_video_stats_init(struct uvc_streaming *stream)
+{
+	memset(&stream->stats, 0, sizeof(stream->stats));
+	stream->stats.stream.min_sof = 2048;
+}
+
+/* ------------------------------------------------------------------------
  * Video codecs
  */
 
@@ -431,8 +616,13 @@ static int uvc_video_decode_start(struct uvc_streaming *stream,
 	/* Increase the sequence number regardless of any buffer states, so
 	 * that discontinuous sequence numbers always indicate lost frames.
 	 */
-	if (stream->last_fid != fid)
+	if (stream->last_fid != fid) {
 		stream->sequence++;
+		if (stream->sequence)
+			uvc_video_stats_update(stream);
+	}
+
+	uvc_video_stats_decode(stream, data, len);
 
 	/* Store the payload FID bit and return immediately when the buffer is
 	 * NULL.
@@ -861,6 +1051,8 @@ static void uvc_uninit_video(struct uvc_streaming *stream, int free_buffers)
 	struct urb *urb;
 	unsigned int i;
 
+	uvc_video_stats_dump(stream);
+
 	for (i = 0; i < UVC_URBS; ++i) {
 		urb = stream->urb[i];
 		if (urb == NULL)
@@ -994,6 +1186,8 @@ static int uvc_init_video(struct uvc_streaming *stream, gfp_t gfp_flags)
 	stream->bulk.skip_payload = 0;
 	stream->bulk.payload_size = 0;
 
+	uvc_video_stats_init(stream);
+
 	if (intf->num_altsetting > 1) {
 		struct usb_host_endpoint *best_ep = NULL;
 		unsigned int best_psize = 3 * 1024;
diff --git a/drivers/media/video/uvc/uvcvideo.h b/drivers/media/video/uvc/uvcvideo.h
index 20107fd..2dfa309 100644
--- a/drivers/media/video/uvc/uvcvideo.h
+++ b/drivers/media/video/uvc/uvcvideo.h
@@ -495,6 +495,44 @@ struct uvc_streaming {
 
 	__u32 sequence;
 	__u8 last_fid;
+
+	struct {
+		struct {
+			struct timespec start_ts;	/* Stream start timestamp */
+			unsigned int nb_frames;		/* Number of frames */
+			unsigned int nb_pts_constant;	/* Number of frames with constant PTS */
+			unsigned int nb_pts_early;	/* Number of frames with early PTS */
+			unsigned int nb_pts_initial;	/* Number of frames with initial PTS */
+			unsigned int nb_scr_count_ok;	/* Number of frames with at least one SCR per non empty packet */
+			unsigned int nb_scr_diffs_ok;	/* Number of frames with varying SCR.STC */
+			unsigned int scr_sof_count;	/* STC.SOF counter accumulated since stream start */
+			unsigned int scr_sof;		/* STC.SOF of the last packet */
+			unsigned int min_sof;		/* Minimum STC.SOF value */
+			unsigned int max_sof;		/* Maximum STC.SOF value */
+		} stream;
+
+		struct uvc_stats_frame {
+			unsigned int size;		/* Number of bytes captured */
+			unsigned int first_data;	/* Index of the first non-empty packet */
+
+			unsigned int nb_packets;	/* Number of packets */
+			unsigned int nb_non_empty_packets;	/* Number of non-empty packets */
+			unsigned int nb_invalid_headers;/* Number of packets with an invalid header */
+			unsigned int nb_errors;		/* Number of packets with the error bit set */
+
+			unsigned int nb_pts;		/* Number of packets with a PTS timestamp */
+			unsigned int nb_pts_diffs;	/* Number of PTS differences inside a frame */
+			unsigned int last_pts_diff;	/* Index of the last PTS difference */
+			bool has_initial_pts;		/* Whether the first non-empty packet has a PTS */
+			bool has_early_pts;		/* Whether a PTS is present before the first non-empty packet */
+			u32 pts;			/* PTS of the last packet */
+
+			unsigned int nb_scr;		/* Number of packets with a SCR timestamp */
+			unsigned int nb_scr_diffs;	/* Number of SCR.STC differences inside a frame */
+			u16 scr_sof;			/* SCR.SOF of the last packet */
+			u32 scr_stc;			/* SCR.STC of the last packet */
+		} frame;
+	} stats;
 };
 
 enum uvc_device_state {
@@ -566,6 +604,7 @@ struct uvc_driver {
 #define UVC_TRACE_SUSPEND	(1 << 8)
 #define UVC_TRACE_STATUS	(1 << 9)
 #define UVC_TRACE_VIDEO		(1 << 10)
+#define UVC_TRACE_TIMESTAMP	(1 << 11)
 
 #define UVC_WARN_MINMAX		0
 #define UVC_WARN_PROBE_DEF	1
-- 
Regards,

Laurent Pinchart



From ajay.bhargav at einfochips.com  Thu Jun 16 11:09:51 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Thu, 16 Jun 2011 14:39:51 +0530 (IST)
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <BANLkTinwfMnJAesCtSaTcnfYqVWbWRE5cw@mail.gmail.com>
Message-ID: <293394781.359462.1308215391730.JavaMail.root@ahm.einfochips.com>

Hi Paulo, 

I have the pdf document of the same. But the thing is my camera is UVC V1.0 and actual format coming from camera is H.264 encoded stream in MPEG2-TS format. So i will have to look for only MPEG2-TS support. I hope i am going in right direction. As per my UVC traces, the video streaming format is 10 which is MPEG2-TS. 

@Laurent, Please provide me some information so i can move ahead. 

Regards, 
Ajay 

----- Original Message ----- 
From: "Paulo Assis" <pj.assis at gmail.com> 
To: "Ajay Bhargav" <ajay.bhargav at einfochips.com> 
Cc: "Alexey Fisher" <bug-track at fisher-privat.net>, "Kofi Jedamzik" <kofi at jedamzik.net>, linux-uvc-devel at lists.berlios.de 
Sent: Thursday, June 16, 2011 2:12:08 PM 
Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist 

Hi, 
Some documentation on the subject: 

http://www.quickcamteam.net/uvc-h264 

Regards, 
Paulo 

2011/6/16 Ajay Bhargav <ajay.bhargav at einfochips.com>: 
> Hi Alexey, 
> 
> Thanks for reply, Well i have already done this before even i saw that 
> patches in mailing list... I am able to add /dev/video0 device on my machine 
> but i am not able to read from that device. Here is the log: 
> 
> 
> uvcvideo 1-1.2:1.0: usb_probe_interface 
> uvcvideo 1-1.2:1.0: usb_probe_interface - got id 
> uvcvideo: Probing generic UVC device 1.2 
> uvcvideo: Videostreaming interface: 0x0A 
> uvcvideo: Format 10, Desc Size: 7 
> uvcvideo: Found format MPEG2-TS. 
> uvcvideo: Found a Status endpoint (addr 81). 
> uvcvideo: Found UVC 1.00 device USB Camera Aoni (04a8:0536) 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/2 to device 1.2 
> entity 5 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/3 to device 1.2 
> entity 5 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/6 to device 1.2 
> entity 5 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/7 to device 1.2 
> entity 5 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/8 to device 1.2 
> entity 5 
> uvcvideo: Added control 00000000-0000-0000-0000-000000000101/5 to device 1.2 
> entity 5 
> uvcvideo: Scanning UVC chain: OT 3 <- PU 5 <- SU 4 <- IT 1 
> (-> XU 6)<6>uvcvideo: video stream id: 3 
> uvcvideo: Stream List id: 3, Dev stream id: 3 
> uvcvideo: Found a valid video chain (1 -> 3). 
> uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling 
> workaround. 
> input: USB Camera Aoni as /class/input/input0 
> usb 1-1.2: link qh1024-0001/ff389200 start 1023 [1/0 us] 
> uvcvideo: UVC device initialized. 
> usb 1-1.2: adding 1-1.2:1.1 (config #1, interface 1) 
> usb 1-1.2:1.1: uevent 
> usb 1-1.2: adding 1-1.2:1.2 (config #1, interface 2) 
> usb 1-1.2:1.2: uevent 
> snd-usb-audio 1-1.2:1.2: usb_probe_interface 
> snd-usb-audio 1-1.2:1.2: usb_probe_interface - got id 
> usb 1-1.2: adding 1-1.2:1.3 (config #1, interface 3) 
> usb 1-1.2:1.3: uevent 
> uvcvideo: uvc_v4l2_open 
> uvcvideo: uvc_v4l2_ioctl(VIDIOC_QUERYCAP) 
> uvcvideo: uvc_v4l2_ioctl(VIDIOCGCAP) 
> uvcvideo: Trying format 0x4745504d (MPEG): 10000x10000. 
> uvcvideo: Default cam size: 10000x10000. 
> uvcvideo: Using default frame interval 0.1 us (10000000.0 fps). 
> uvcvideo: uvc_v4l2_release 
> 
> As per this conversation 
> (http://lists.berlios.de/pipermail/linux-uvc-devel/2009-July/005008.html) it 
> looks like there are lot more changes to be done, so that UVC is able to 
> forward proper information to v4l2 layer. 
> 
> --Ajay 
> 
> 
> ----- Original Message ----- 
> From: "Alexey Fisher" <bug-track at fisher-privat.net> 
> To: "Ajay Bhargav" <ajay.bhargav at einfochips.com> 
> Cc: linux-uvc-devel at lists.berlios.de, "Kofi Jedamzik" <kofi at jedamzik.net> 
> Sent: Thursday, June 16, 2011 12:06:02 PM 
> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist 
> 
> Hi, 
> 
> Stephan Lachowsky has provided some patches for MPEG-TS and H264 
> support. 
> https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006287.html 
> https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006288.html 
> 
> I do not know the current status of this work. May be Laurent can tell 
> some thing about it. 
> 
> Am Donnerstag, den 16.06.2011, 10:26 +0530 schrieb Ajay Bhargav: 
>> Hi, 
>> 
>> as far as i know stream based format are not yet supported in UVC 
>> driver. and UVC 1.1 specifications defines the H.264 payload 
>> specifications. I dont think they are implemented yet. 
>> 
>> I have a camera with me which outputs H.264 stream using MPEG2-TS 
>> container format. If you have any idea how to add support for MPEG2-TS 
>> please let me know. 
>> 
>> --Ajay 
>> 
>> ----- Original Message ----- 
>> From: "Alexey Fisher" <bug-track at fisher-privat.net> 
>> To: "Kofi Jedamzik" <kofi at jedamzik.net> 
>> Cc: linux-uvc-devel at lists.berlios.de 
>> Sent: Wednesday, June 15, 2011 8:10:36 PM 
>> Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in 
>> Devicelist 
>> 
>> Hi, 
>> 
>> theoretically this should do it: 
>> gst-inspect-0.10 v4l2src ! video/x-h264 ! ffdec_h264 ! autovideosink 
>> 
>> but, if i'm correct, current kernel do not support h264. There was a 
>> patch for some time, but im not sure if Laurent applyed it. 
>> 
>> Am Mittwoch, den 15.06.2011, 16:01 +0200 schrieb Kofi Jedamzik: 
>> > Hi, 
>> > 
>> > ... there is a "new" Logitech Webcam called "B990 HD Webcam" with 
>> > device id 046d:0828 
>> > it has an integrated hardware based H264 baseline video encoder 
>> > 
>> > This cam is not listed. 
>> > 
>> > MJPEG seems to work but I want to get out the H264 stream. 
>> > 
>> > Is there anyone who could give me a hint how to do it? 
>> > 
>> > Here are som dumps which might be helpful... 
>> > 
>> > best regards 
>> > 
>> > Kofi 
>> > 
>> > #lsusb --verbose -d 046d:0828 
>> > (big output) -->> http://pastebin.com/9WFgytwY 
>> > 
>> > #guvcview --device /dev/video0 --verbose 
>> > (big output) -->> http://pastebin.com/pqmUGYyn 
>> > 
>> > #modinfo uvcvideo 
>> > filename: 
>> > /lib/modules/2.6.38-8-generic/kernel/drivers/media/video/uvc/uvcvideo.ko 
>> > version: v1.0.0 
>> > 
>> > #tail /var/log/syslog 
>> > [11588.664940] usb 1-6: USB disconnect, address 4 
>> > [11594.580043] usb 1-6: new high speed USB device using ehci_hcd and 
>> address 5 
>> > [11594.927759] uvcvideo: Unknown video format 
>> > 34363248-0000-0010-8000-00aa00389b71 
>> > [11594.927786] uvcvideo: Found UVC 1.00 device <unnamed> (046d:0828) 
>> > [11595.024093] input: UVC Camera (046d:0828) as 
>> > /devices/pci0000:00/0000:00:12.2/usb1/1-6/1-6:1.0/input/input8 
>> -- 
>> Regards, 
>> Alexey 
>> 
>> _______________________________________________ 
>> Linux-uvc-devel mailing list 
>> Linux-uvc-devel at lists.berlios.de 
>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel 
>> 
>> -- 
>> This message has been scanned for viruses and 
>> dangerous content by Clean Mail Gateway, and is 
>> believed to be clean. 
>> 
>> 
>> ************************************************************************************************************************************************************* 
>> einfochips Business Disclaimer : This e-mail message and all 
>> attachments transmitted with it are intended solely for the use of the 
>> addressee and may contain legally privileged and confidential 
>> information. If the reader of this message is not the intended 
>> recipient, or an employee or agent responsible for delivering this 
>> message to the intended recipient, you are hereby notified that any 
>> dissemination, distribution, copying, or other use of this message or 
>> its attachments is strictly prohibited. If you have received this 
>> message in error, please notify the sender immediately by replying to 
>> this message and please delete it from your computer. Any views 
>> expressed in this message are those of the individual sender unless 
>> otherwise stated. Company has taken enough precautions to prevent the 
>> spread of viruses. However the company accepts no liability for any 
>> damage caused by any virus transmitted by this email. 
>> 
>> ************************************************************************************************************************************************************* 
>> 
>> 
> 
> -- 
> Regards, 
> Alexey 
> 
> 
> -- 
> This message has been scanned for viruses and 
> dangerous content by Clean Mail Gateway, and is 
> believed to be clean. 
> 
> ************************************************************************************************************************************************************* 
> einfochips Business Disclaimer : This e-mail message and all attachments 
> transmitted with it are intended solely for the use of the addressee and may 
> contain legally privileged and confidential information. If the reader of 
> this message is not the intended recipient, or an employee or agent 
> responsible for delivering this message to the intended recipient, you are 
> hereby notified that any dissemination, distribution, copying, or other use 
> of this message or its attachments is strictly prohibited. If you have 
> received this message in error, please notify the sender immediately by 
> replying to this message and please delete it from your computer. Any views 
> expressed in this message are those of the individual sender unless 
> otherwise stated. Company has taken enough precautions to prevent the spread 
> of viruses. However the company accepts no liability for any damage caused 
> by any virus transmitted by this email. 
> ************************************************************************************************************************************************************* 
> 
> 
> _______________________________________________ 
> Linux-uvc-devel mailing list 
> Linux-uvc-devel at lists.berlios.de 
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel 
> 
> 

-- 
This message has been scanned for viruses and 
dangerous content by Clean Mail Gateway, and is 
believed to be clean. 

************************************************************************************************************************************************************* 
einfochips Business Disclaimer : This e-mail message and all attachments transmitted with it are intended solely for the use of the addressee and may contain legally privileged and confidential information. If the reader of this message is not the intended recipient, or an employee or agent responsible for delivering this message to the intended recipient, you are hereby notified that any dissemination, distribution, copying, or other use of this message or its attachments is strictly prohibited. If you have received this message in error, please notify the sender immediately by replying to this message and please delete it from your computer. Any views expressed in this message are those of the individual sender unless otherwise stated. Company has taken enough precautions to prevent the spread of viruses. However the company accepts no liability for any damage caused by any virus transmitted by this email. 
************************************************************************************************************************************************************* 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110616/7efaf668/attachment.html>

From michal at physics.ubc.ca  Thu Jun 16 20:31:33 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Thu, 16 Jun 2011 11:31:33 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106152253560.16649@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
Message-ID: <alpine.LNX.2.00.1106161118080.4758@tristan>



On Thu, 16 Jun 2011, Carl Michal wrote:

>
> On Wed, 15 Jun 2011, Alexey Fisher wrote:
>
>>  Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>> >  On Tue, 14 Jun 2011, Alexey Fisher wrote:
>> > 
>> > >  Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>> > > > > > 
>> > > > >  Hi,
>> > > > > 
>> > > > >  I think you nailed it.  Every frame looks perfect now.  The trace 
>> > > > >  shows a few
>> > > > >  of these:
>> > > > > 
>> > > > >  Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>> > > > > 
>> > > > >  but I don't see corrupt frames any more in either MJPG or YUYV (at 
>> > > > >  640x480
>> > > > >  anyway) - in MJPG all the frames have the right size.
>> > > > > 
>> > > > >  There is a some weirdness with frame rates depending on the 
>> > > > >  exposure setting:
>> > > > >  1) Exposure, auto gives 4 options: auto priority mode, manual 
>> > > > >  mode, shutter
>> > > > >  priority mode, and aperture priority mode.  Auto and shutter don't 
>> > > > >  seem to be
>> > > > >  settable (errors from guvcview when chosen). There is also an 
>> > > > >  "Exposure, auto
>> > > > >  priority" checkbox.
>> > > > > 
>> > > > >  Frame rates drop dramatically in manual mode (to 10-15fps from 
>> > > > >  30).
>> > > > > 
>> > > > >  But I can't really complain at this point - the corrupt frames are 
>> > > > >  gone.
>> > > > >  Will that quirk be added to the driver (usb id is: 0408:2fb1)?
>> > > > > 
>> > > > >  Thanks,
>> > > > > 
>> > > > 
>> > > >  Hi,
>> > > > 
>> > > >  it seems like I am much better off by fully disabling FID (with your
>> > > >  patch) than before.  With the patch, YUYV frames are _always_ the 
>> > > >  right
>> > > >  size.  There are still some problems:
>> > > > 
>> > > >  1) corrupt frames - with part of the image missing or the image 
>> > > >  displaced.
>> > > >  Sometimes (but definitely not always) these occur at the same time 
>> > > >  as a
>> > > >  trace message saying the error bit is set.
>> > > > 
>> > > >  2) sometimes the camera just won't start.  when guvcview (or 
>> > > >  luvcview) is
>> > > >  started, no frames come back from the camera.  There is a light next 
>> > > >  to
>> > > >  the camera that comes on to indicate it should be active, but no 
>> > > >  frames
>> > > >  arrive.  There seems to be a fairly strong correlation with using 
>> > > >  luvcview
>> > > >  (which from the traces seems to use some different mechanism to get 
>> > > >  frames from
>> > > >  the driver from guvcview.  guvcview polls, luvcview doesn't). 
>> > > >  Sometimes
>> > > >  just restarting guvcview several times will work and the camera 
>> > > >  eventually
>> > > >  starts.  Sometimes just changing resolution or frame rates succeeds 
>> > > >  in
>> > > >  starting the camera.  I haven't found anything reproducible.  I do 
>> > > >  not
>> > > >  think this is related to your patch, as it did happen once before 
>> > > >  your
>> > > >  patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
>> > > >  modules does not consistently solve it. guvcview just lists:
>> > > > 
>> > > >    Could not grab image (select timeout): Resource temporarily 
>> > > >    unavailable
>> > > > 
>> > > >  and the trace shows guvcview polling, but nothing else going on.
>> > > > 
>> > > >  I have tried adding the other quirks to the FID quirk, but haven't 
>> > > >  seen
>> > > >  any improvement with any others.
>> > > > 
>> > > >  Thanks for you help -
>> > > > 
>> > > >  Carl
>> > > 
>> > >  Webcam returns error in the middle of some frame, theoretically we
>> > >  should drop complete frame. But current uvcvideo just gather data and
>> > >  assume the cam will resend previous parts to complete the frame.
>> > > 
>> > >  Try attached patch additionally to my previous one.
>> > >  --
>> > >  Regards,
>> > >         Alexey
>> > > 
>> > 
>> >  Hi,
>> > 
>> >  its very hard to say if this helps or not.  There are still corrupt
>> >  frames, and some seem to occur at about the same time as the error bit
>> >  trace messages, but some don't show anything unusual in the traces that
>> >  I've noticed yet.
>> > 
>> >  Since all the uncompressed frames were the right size (even ones where 
>> >  the
>> >  error bit was set somewhere) those frames are at least complete.
>> > 
>> >  Is there some convenient way to capture just those frames with the error
>> >  bit set?
>> > 
>> >  Thanks,
>> > 
>> >  Carl
>> > 
>>
>>  you can try this command:
>>  gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity !
>>  jpegenc ! multifilesink location=tmp-%05d.jpg
>>
>>  it will produce for each frame one jpeg file. Watch out, it will produce
>>  lots of files.
>>
>>  Attached patch is replacement for the last one. You do not need setting
>>  trace option, it will print all we need.
>>
>>  --
>>  Regards,
>>         Alexey
>> 
> Hi,
>
> we're learning a little here.  If I set nodrop=1, I get lots of frames that 
> are too short (gst complains that they are fewer bytes than expected) but 
> those coincide with the status < 0 test in uvc_video_decode_isoc - they do 
> not correspond to those with the error bit set.
>
> The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful even, 
> since it means dropping frames that are in fact ok.
>
> I have captured some bad frames though - one that has the colors badly 
> screwed up - where everything is a bright green, and another where the image 
> appears to be shifted about a quarter of a frame to one side - these were 
> collected without the nodrop=1 parameter, so they are not caught as corrupt 
> by any of the current tests. They are delivered as occuring with the full 
> expected frame size. Are there other flags we should be checking for?  (hmm, 
> like maybe an FID at the wrong time?)
>
> Carl
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>

Hi,

this gets weirder.  Dropping frames where the FID bit is toggled 
unexpectedly looks like it drops lots of good frames, and not all the bad 
ones. But this is not so easy - capturing frames with gstreamer actually 
seems relatively reliable in any case.  The fraction of bad frames 
generated seems to depend quite a bit on what program is used - guvcview 
and luvcview produce many more than gstreamer.

I put in checks at the begining of uvc_video_decode_start to look at other 
bits in the header, and found that the camera does occasionally return the 
STI bit and RES bit set, and sometimes doesn't set the EOH.  These usually 
happen together, but sometimes just one or two of these bits is 
unexpected. Dropping frames with any one of those unexpected *seems* to 
help, but there are still occasional bad frames.

If EOH is not set does that mean there is more header somewhere?

Carl



From bug-track at fisher-privat.net  Thu Jun 16 22:08:05 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Thu, 16 Jun 2011 22:08:05 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106161118080.4758@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
Message-ID: <1308254885.9729.7.camel@mini>

Am Donnerstag, den 16.06.2011, 11:31 -0700 schrieb Carl Michal:
> 
> On Thu, 16 Jun 2011, Carl Michal wrote:
> 
> >
> > On Wed, 15 Jun 2011, Alexey Fisher wrote:
> >
> >>  Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
> >> >  On Tue, 14 Jun 2011, Alexey Fisher wrote:
> >> > 
> >> > >  Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> >> > > > > > 
> >> > > > >  Hi,
> >> > > > > 
> >> > > > >  I think you nailed it.  Every frame looks perfect now.  The trace 
> >> > > > >  shows a few
> >> > > > >  of these:
> >> > > > > 
> >> > > > >  Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> >> > > > > 
> >> > > > >  but I don't see corrupt frames any more in either MJPG or YUYV (at 
> >> > > > >  640x480
> >> > > > >  anyway) - in MJPG all the frames have the right size.
> >> > > > > 
> >> > > > >  There is a some weirdness with frame rates depending on the 
> >> > > > >  exposure setting:
> >> > > > >  1) Exposure, auto gives 4 options: auto priority mode, manual 
> >> > > > >  mode, shutter
> >> > > > >  priority mode, and aperture priority mode.  Auto and shutter don't 
> >> > > > >  seem to be
> >> > > > >  settable (errors from guvcview when chosen). There is also an 
> >> > > > >  "Exposure, auto
> >> > > > >  priority" checkbox.
> >> > > > > 
> >> > > > >  Frame rates drop dramatically in manual mode (to 10-15fps from 
> >> > > > >  30).
> >> > > > > 
> >> > > > >  But I can't really complain at this point - the corrupt frames are 
> >> > > > >  gone.
> >> > > > >  Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> >> > > > > 
> >> > > > >  Thanks,
> >> > > > > 
> >> > > > 
> >> > > >  Hi,
> >> > > > 
> >> > > >  it seems like I am much better off by fully disabling FID (with your
> >> > > >  patch) than before.  With the patch, YUYV frames are _always_ the 
> >> > > >  right
> >> > > >  size.  There are still some problems:
> >> > > > 
> >> > > >  1) corrupt frames - with part of the image missing or the image 
> >> > > >  displaced.
> >> > > >  Sometimes (but definitely not always) these occur at the same time 
> >> > > >  as a
> >> > > >  trace message saying the error bit is set.
> >> > > > 
> >> > > >  2) sometimes the camera just won't start.  when guvcview (or 
> >> > > >  luvcview) is
> >> > > >  started, no frames come back from the camera.  There is a light next 
> >> > > >  to
> >> > > >  the camera that comes on to indicate it should be active, but no 
> >> > > >  frames
> >> > > >  arrive.  There seems to be a fairly strong correlation with using 
> >> > > >  luvcview
> >> > > >  (which from the traces seems to use some different mechanism to get 
> >> > > >  frames from
> >> > > >  the driver from guvcview.  guvcview polls, luvcview doesn't). 
> >> > > >  Sometimes
> >> > > >  just restarting guvcview several times will work and the camera 
> >> > > >  eventually
> >> > > >  starts.  Sometimes just changing resolution or frame rates succeeds 
> >> > > >  in
> >> > > >  starting the camera.  I haven't found anything reproducible.  I do 
> >> > > >  not
> >> > > >  think this is related to your patch, as it did happen once before 
> >> > > >  your
> >> > > >  patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
> >> > > >  modules does not consistently solve it. guvcview just lists:
> >> > > > 
> >> > > >    Could not grab image (select timeout): Resource temporarily 
> >> > > >    unavailable
> >> > > > 
> >> > > >  and the trace shows guvcview polling, but nothing else going on.
> >> > > > 
> >> > > >  I have tried adding the other quirks to the FID quirk, but haven't 
> >> > > >  seen
> >> > > >  any improvement with any others.
> >> > > > 
> >> > > >  Thanks for you help -
> >> > > > 
> >> > > >  Carl
> >> > > 
> >> > >  Webcam returns error in the middle of some frame, theoretically we
> >> > >  should drop complete frame. But current uvcvideo just gather data and
> >> > >  assume the cam will resend previous parts to complete the frame.
> >> > > 
> >> > >  Try attached patch additionally to my previous one.
> >> > >  --
> >> > >  Regards,
> >> > >         Alexey
> >> > > 
> >> > 
> >> >  Hi,
> >> > 
> >> >  its very hard to say if this helps or not.  There are still corrupt
> >> >  frames, and some seem to occur at about the same time as the error bit
> >> >  trace messages, but some don't show anything unusual in the traces that
> >> >  I've noticed yet.
> >> > 
> >> >  Since all the uncompressed frames were the right size (even ones where 
> >> >  the
> >> >  error bit was set somewhere) those frames are at least complete.
> >> > 
> >> >  Is there some convenient way to capture just those frames with the error
> >> >  bit set?
> >> > 
> >> >  Thanks,
> >> > 
> >> >  Carl
> >> > 
> >>
> >>  you can try this command:
> >>  gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity !
> >>  jpegenc ! multifilesink location=tmp-%05d.jpg
> >>
> >>  it will produce for each frame one jpeg file. Watch out, it will produce
> >>  lots of files.
> >>
> >>  Attached patch is replacement for the last one. You do not need setting
> >>  trace option, it will print all we need.
> >>
> >>  --
> >>  Regards,
> >>         Alexey
> >> 
> > Hi,
> >
> > we're learning a little here.  If I set nodrop=1, I get lots of frames that 
> > are too short (gst complains that they are fewer bytes than expected) but 
> > those coincide with the status < 0 test in uvc_video_decode_isoc - they do 
> > not correspond to those with the error bit set.
> >
> > The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful even, 
> > since it means dropping frames that are in fact ok.
> >
> > I have captured some bad frames though - one that has the colors badly 
> > screwed up - where everything is a bright green, and another where the image 
> > appears to be shifted about a quarter of a frame to one side - these were 
> > collected without the nodrop=1 parameter, so they are not caught as corrupt 
> > by any of the current tests. They are delivered as occuring with the full 
> > expected frame size. Are there other flags we should be checking for?  (hmm, 
> > like maybe an FID at the wrong time?)
> >
> > Carl
> >
> > _______________________________________________
> > Linux-uvc-devel mailing list
> > Linux-uvc-devel at lists.berlios.de
> > https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
> >
> 
> Hi,
> 
> this gets weirder.  Dropping frames where the FID bit is toggled 
> unexpectedly looks like it drops lots of good frames, and not all the bad 
> ones. But this is not so easy - capturing frames with gstreamer actually 
> seems relatively reliable in any case.  The fraction of bad frames 
> generated seems to depend quite a bit on what program is used - guvcview 
> and luvcview produce many more than gstreamer.
> 
> I put in checks at the begining of uvc_video_decode_start to look at other 
> bits in the header, and found that the camera does occasionally return the 
> STI bit and RES bit set, and sometimes doesn't set the EOH.  These usually 
> happen together, but sometimes just one or two of these bits is 
> unexpected. Dropping frames with any one of those unexpected *seems* to 
> help, but there are still occasional bad frames.
> 
> If EOH is not set does that mean there is more header somewhere?

Do you mean EOH or EOF?

can you please send me one sample of brocken frame, row, not jpeg. Use
"luvcview -C" to capture frames. It will probably use 640x480 in YUV by
default. YOu will get lots of files. To convert it in jpeg you can use
gstreamer:

for i in *.raw; do gst-launch-0.10 filesrc location=$i ! videoparse
format=3 width=640 height=480 ! jpegenc ! filesink location=$i.jpg; done

-- 
Regards,
        Alexey



From michal at physics.ubc.ca  Fri Jun 17 21:07:12 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 17 Jun 2011 12:07:12 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308254885.9729.7.camel@mini>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
	<1308254885.9729.7.camel@mini>
Message-ID: <alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>


On Thu, 16 Jun 2011, Alexey Fisher wrote:

> Am Donnerstag, den 16.06.2011, 11:31 -0700 schrieb Carl Michal:
>>
>> On Thu, 16 Jun 2011, Carl Michal wrote:
>>
>>>
>>> On Wed, 15 Jun 2011, Alexey Fisher wrote:
>>>
>>>>  Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>>>>>  On Tue, 14 Jun 2011, Alexey Fisher wrote:
>>>>>
>>>>>>  Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>>>>>>
>>>>>>>>  Hi,
>>>>>>>>
>>>>>>>>  I think you nailed it.  Every frame looks perfect now.  The trace
>>>>>>>>  shows a few
>>>>>>>>  of these:
>>>>>>>>
>>>>>>>>  Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>>>>>>
>>>>>>>>  but I don't see corrupt frames any more in either MJPG or YUYV (at
>>>>>>>>  640x480
>>>>>>>>  anyway) - in MJPG all the frames have the right size.
>>>>>>>>
>>>>>>>>  There is a some weirdness with frame rates depending on the
>>>>>>>>  exposure setting:
>>>>>>>>  1) Exposure, auto gives 4 options: auto priority mode, manual
>>>>>>>>  mode, shutter
>>>>>>>>  priority mode, and aperture priority mode.  Auto and shutter don't
>>>>>>>>  seem to be
>>>>>>>>  settable (errors from guvcview when chosen). There is also an
>>>>>>>>  "Exposure, auto
>>>>>>>>  priority" checkbox.
>>>>>>>>
>>>>>>>>  Frame rates drop dramatically in manual mode (to 10-15fps from
>>>>>>>>  30).
>>>>>>>>
>>>>>>>>  But I can't really complain at this point - the corrupt frames are
>>>>>>>>  gone.
>>>>>>>>  Will that quirk be added to the driver (usb id is: 0408:2fb1)?
>>>>>>>>
>>>>>>>>  Thanks,
>>>>>>>>
>>>>>>>
>>>>>>>  Hi,
>>>>>>>
>>>>>>>  it seems like I am much better off by fully disabling FID (with your
>>>>>>>  patch) than before.  With the patch, YUYV frames are _always_ the
>>>>>>>  right
>>>>>>>  size.  There are still some problems:
>>>>>>>
>>>>>>>  1) corrupt frames - with part of the image missing or the image
>>>>>>>  displaced.
>>>>>>>  Sometimes (but definitely not always) these occur at the same time
>>>>>>>  as a
>>>>>>>  trace message saying the error bit is set.
>>>>>>>
>>>>>>>  2) sometimes the camera just won't start.  when guvcview (or
>>>>>>>  luvcview) is
>>>>>>>  started, no frames come back from the camera.  There is a light next
>>>>>>>  to
>>>>>>>  the camera that comes on to indicate it should be active, but no
>>>>>>>  frames
>>>>>>>  arrive.  There seems to be a fairly strong correlation with using
>>>>>>>  luvcview
>>>>>>>  (which from the traces seems to use some different mechanism to get
>>>>>>>  frames from
>>>>>>>  the driver from guvcview.  guvcview polls, luvcview doesn't).
>>>>>>>  Sometimes
>>>>>>>  just restarting guvcview several times will work and the camera
>>>>>>>  eventually
>>>>>>>  starts.  Sometimes just changing resolution or frame rates succeeds
>>>>>>>  in
>>>>>>>  starting the camera.  I haven't found anything reproducible.  I do
>>>>>>>  not
>>>>>>>  think this is related to your patch, as it did happen once before
>>>>>>>  your
>>>>>>>  patch was applied. Unloading and reloading the uvcvideo and ehci_hcd
>>>>>>>  modules does not consistently solve it. guvcview just lists:
>>>>>>>
>>>>>>>    Could not grab image (select timeout): Resource temporarily
>>>>>>>    unavailable
>>>>>>>
>>>>>>>  and the trace shows guvcview polling, but nothing else going on.
>>>>>>>
>>>>>>>  I have tried adding the other quirks to the FID quirk, but haven't
>>>>>>>  seen
>>>>>>>  any improvement with any others.
>>>>>>>
>>>>>>>  Thanks for you help -
>>>>>>>
>>>>>>>  Carl
>>>>>>
>>>>>>  Webcam returns error in the middle of some frame, theoretically we
>>>>>>  should drop complete frame. But current uvcvideo just gather data and
>>>>>>  assume the cam will resend previous parts to complete the frame.
>>>>>>
>>>>>>  Try attached patch additionally to my previous one.
>>>>>>  --
>>>>>>  Regards,
>>>>>>         Alexey
>>>>>>
>>>>>
>>>>>  Hi,
>>>>>
>>>>>  its very hard to say if this helps or not.  There are still corrupt
>>>>>  frames, and some seem to occur at about the same time as the error bit
>>>>>  trace messages, but some don't show anything unusual in the traces that
>>>>>  I've noticed yet.
>>>>>
>>>>>  Since all the uncompressed frames were the right size (even ones where
>>>>>  the
>>>>>  error bit was set somewhere) those frames are at least complete.
>>>>>
>>>>>  Is there some convenient way to capture just those frames with the error
>>>>>  bit set?
>>>>>
>>>>>  Thanks,
>>>>>
>>>>>  Carl
>>>>>
>>>>
>>>>  you can try this command:
>>>>  gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity !
>>>>  jpegenc ! multifilesink location=tmp-%05d.jpg
>>>>
>>>>  it will produce for each frame one jpeg file. Watch out, it will produce
>>>>  lots of files.
>>>>
>>>>  Attached patch is replacement for the last one. You do not need setting
>>>>  trace option, it will print all we need.
>>>>
>>>>  --
>>>>  Regards,
>>>>         Alexey
>>>>
>>> Hi,
>>>
>>> we're learning a little here.  If I set nodrop=1, I get lots of frames that
>>> are too short (gst complains that they are fewer bytes than expected) but
>>> those coincide with the status < 0 test in uvc_video_decode_isoc - they do
>>> not correspond to those with the error bit set.
>>>
>>> The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful even,
>>> since it means dropping frames that are in fact ok.
>>>
>>> I have captured some bad frames though - one that has the colors badly
>>> screwed up - where everything is a bright green, and another where the image
>>> appears to be shifted about a quarter of a frame to one side - these were
>>> collected without the nodrop=1 parameter, so they are not caught as corrupt
>>> by any of the current tests. They are delivered as occuring with the full
>>> expected frame size. Are there other flags we should be checking for?  (hmm,
>>> like maybe an FID at the wrong time?)
>>>
>>> Carl
>>>
>>> _______________________________________________
>>> Linux-uvc-devel mailing list
>>> Linux-uvc-devel at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>>>
>>
>> Hi,
>>
>> this gets weirder.  Dropping frames where the FID bit is toggled
>> unexpectedly looks like it drops lots of good frames, and not all the bad
>> ones. But this is not so easy - capturing frames with gstreamer actually
>> seems relatively reliable in any case.  The fraction of bad frames
>> generated seems to depend quite a bit on what program is used - guvcview
>> and luvcview produce many more than gstreamer.
>>
>> I put in checks at the begining of uvc_video_decode_start to look at other
>> bits in the header, and found that the camera does occasionally return the
>> STI bit and RES bit set, and sometimes doesn't set the EOH.  These usually
>> happen together, but sometimes just one or two of these bits is
>> unexpected. Dropping frames with any one of those unexpected *seems* to
>> help, but there are still occasional bad frames.
>>
>> If EOH is not set does that mean there is more header somewhere?
>
> Do you mean EOH or EOF?
>
> can you please send me one sample of brocken frame, row, not jpeg. Use
> "luvcview -C" to capture frames. It will probably use 640x480 in YUV by
> default. YOu will get lots of files. To convert it in jpeg you can use
> gstreamer:
>
> for i in *.raw; do gst-launch-0.10 filesrc location=$i ! videoparse
> format=3 width=640 height=480 ! jpegenc ! filesink location=$i.jpg; done
>
> -- 
> Regards,
>        Alexey
>
>
Hi,

ok - I've put a few frames here:
http://www.phas.ubc.ca/~michal/Frames/

These are 1280x720.  With the first patch (to fully ignore FID toggling) 
collecting frames with
luvcview -C -f -s 640x480
gives no bad frames in a few minutes of collecting.  But going to 1280x720 
gives anywhere between 2-50 bad frames in 2 minutes.  These are without 
the nodrop=1 parameter.  If I add nodrop=1 the number of bad frames 
increases dramatically.  There are overflow errors and some frames get 
dropped from the  status<0 test.

The three frames I saved there were collected without nodrop=1, and with 
both the first and third patches - so FID is ignored, and any frame that 
had an error bit set is dropped.

I noticed that when the error bit is set, sometimes EOF is also set - 
I wonder if EOF + ERROR means "give up on this frame and go on to the 
next?" It looks like the driver currently ignores EOF if ERROR is 
set.

It appears to me that EOH (yes EOH) is generally set, but occasionally it 
is not. I don't see why STI or RES should ever be set - is there some 
possibility that bytes that are not header are being misinterpreted as 
header?

Thanks,

Carl



From michal at physics.ubc.ca  Fri Jun 17 23:33:25 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 17 Jun 2011 14:33:25 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
	<1308254885.9729.7.camel@mini>
	<alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
Message-ID: <alpine.LNX.2.00.1106171433120.26141@tristan>

On Fri, 17 Jun 2011, Carl Michal wrote:

>
> On Thu, 16 Jun 2011, Alexey Fisher wrote:
>
>>  Am Donnerstag, den 16.06.2011, 11:31 -0700 schrieb Carl Michal:
>> > 
>> >  On Thu, 16 Jun 2011, Carl Michal wrote:
>> > 
>> > > 
>> > >  On Wed, 15 Jun 2011, Alexey Fisher wrote:
>> > > 
>> > > >   Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>> > > > >   On Tue, 14 Jun 2011, Alexey Fisher wrote:
>> > > > > 
>> > > > > >   Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>> > > > > > > > > 
>> > > > > > > >   Hi,
>> > > > > > > > 
>> > > > > > > >   I think you nailed it.  Every frame looks perfect now.  The 
>> > > > > > > >   trace
>> > > > > > > >   shows a few
>> > > > > > > >   of these:
>> > > > > > > > 
>> > > > > > > >   Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>> > > > > > > > 
>> > > > > > > >   but I don't see corrupt frames any more in either MJPG or 
>> > > > > > > >   YUYV (at
>> > > > > > > >   640x480
>> > > > > > > >   anyway) - in MJPG all the frames have the right size.
>> > > > > > > > 
>> > > > > > > >   There is a some weirdness with frame rates depending on the
>> > > > > > > >   exposure setting:
>> > > > > > > >   1) Exposure, auto gives 4 options: auto priority mode, 
>> > > > > > > >   manual
>> > > > > > > >   mode, shutter
>> > > > > > > >   priority mode, and aperture priority mode.  Auto and 
>> > > > > > > >   shutter don't
>> > > > > > > >   seem to be
>> > > > > > > >   settable (errors from guvcview when chosen). There is also 
>> > > > > > > >   an
>> > > > > > > >   "Exposure, auto
>> > > > > > > >   priority" checkbox.
>> > > > > > > > 
>> > > > > > > >   Frame rates drop dramatically in manual mode (to 10-15fps 
>> > > > > > > >   from
>> > > > > > > >   30).
>> > > > > > > > 
>> > > > > > > >   But I can't really complain at this point - the corrupt 
>> > > > > > > >   frames are
>> > > > > > > >   gone.
>> > > > > > > >   Will that quirk be added to the driver (usb id is: 
>> > > > > > > >   0408:2fb1)?
>> > > > > > > > 
>> > > > > > > >   Thanks,
>> > > > > > > > 
>> > > > > > > 
>> > > > > > >   Hi,
>> > > > > > > 
>> > > > > > >   it seems like I am much better off by fully disabling FID 
>> > > > > > >   (with your
>> > > > > > >   patch) than before.  With the patch, YUYV frames are _always_ 
>> > > > > > >   the
>> > > > > > >   right
>> > > > > > >   size.  There are still some problems:
>> > > > > > > 
>> > > > > > >   1) corrupt frames - with part of the image missing or the 
>> > > > > > >   image
>> > > > > > >   displaced.
>> > > > > > >   Sometimes (but definitely not always) these occur at the same 
>> > > > > > >   time
>> > > > > > >   as a
>> > > > > > >   trace message saying the error bit is set.
>> > > > > > > 
>> > > > > > >   2) sometimes the camera just won't start.  when guvcview (or
>> > > > > > >   luvcview) is
>> > > > > > >   started, no frames come back from the camera.  There is a 
>> > > > > > >   light next
>> > > > > > >   to
>> > > > > > >   the camera that comes on to indicate it should be active, but 
>> > > > > > >   no
>> > > > > > >   frames
>> > > > > > >   arrive.  There seems to be a fairly strong correlation with 
>> > > > > > >   using
>> > > > > > >   luvcview
>> > > > > > >   (which from the traces seems to use some different mechanism 
>> > > > > > >   to get
>> > > > > > >   frames from
>> > > > > > >   the driver from guvcview.  guvcview polls, luvcview doesn't).
>> > > > > > >   Sometimes
>> > > > > > >   just restarting guvcview several times will work and the 
>> > > > > > >   camera
>> > > > > > >   eventually
>> > > > > > >   starts.  Sometimes just changing resolution or frame rates 
>> > > > > > >   succeeds
>> > > > > > >   in
>> > > > > > >   starting the camera.  I haven't found anything reproducible. 
>> > > > > > >   I do
>> > > > > > >   not
>> > > > > > >   think this is related to your patch, as it did happen once 
>> > > > > > >   before
>> > > > > > >   your
>> > > > > > >   patch was applied. Unloading and reloading the uvcvideo and 
>> > > > > > >   ehci_hcd
>> > > > > > >   modules does not consistently solve it. guvcview just lists:
>> > > > > > > 
>> > > > > > >     Could not grab image (select timeout): Resource temporarily
>> > > > > > >     unavailable
>> > > > > > > 
>> > > > > > >   and the trace shows guvcview polling, but nothing else going 
>> > > > > > >   on.
>> > > > > > > 
>> > > > > > >   I have tried adding the other quirks to the FID quirk, but 
>> > > > > > >   haven't
>> > > > > > >   seen
>> > > > > > >   any improvement with any others.
>> > > > > > > 
>> > > > > > >   Thanks for you help -
>> > > > > > > 
>> > > > > > >   Carl
>> > > > > > 
>> > > > > >   Webcam returns error in the middle of some frame, theoretically 
>> > > > > >   we
>> > > > > >   should drop complete frame. But current uvcvideo just gather 
>> > > > > >   data and
>> > > > > >   assume the cam will resend previous parts to complete the 
>> > > > > >   frame.
>> > > > > > 
>> > > > > >   Try attached patch additionally to my previous one.
>> > > > > >   --
>> > > > > >   Regards,
>> > > > > >          Alexey
>> > > > > > 
>> > > > > 
>> > > > >   Hi,
>> > > > > 
>> > > > >   its very hard to say if this helps or not.  There are still 
>> > > > >   corrupt
>> > > > >   frames, and some seem to occur at about the same time as the 
>> > > > >   error bit
>> > > > >   trace messages, but some don't show anything unusual in the 
>> > > > >   traces that
>> > > > >   I've noticed yet.
>> > > > > 
>> > > > >   Since all the uncompressed frames were the right size (even ones 
>> > > > >   where
>> > > > >   the
>> > > > >   error bit was set somewhere) those frames are at least complete.
>> > > > > 
>> > > > >   Is there some convenient way to capture just those frames with 
>> > > > >   the error
>> > > > >   bit set?
>> > > > > 
>> > > > >   Thanks,
>> > > > > 
>> > > > >   Carl
>> > > > > 
>> > > > 
>> > > >   you can try this command:
>> > > >   gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity !
>> > > >   jpegenc ! multifilesink location=tmp-%05d.jpg
>> > > > 
>> > > >   it will produce for each frame one jpeg file. Watch out, it will 
>> > > >   produce
>> > > >   lots of files.
>> > > > 
>> > > >   Attached patch is replacement for the last one. You do not need 
>> > > >   setting
>> > > >   trace option, it will print all we need.
>> > > > 
>> > > >   --
>> > > >   Regards,
>> > > >          Alexey
>> > > > 
>> > >  Hi,
>> > > 
>> > >  we're learning a little here.  If I set nodrop=1, I get lots of frames 
>> > >  that
>> > >  are too short (gst complains that they are fewer bytes than expected) 
>> > >  but
>> > >  those coincide with the status < 0 test in uvc_video_decode_isoc - 
>> > >  they do
>> > >  not correspond to those with the error bit set.
>> > > 
>> > >  The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful 
>> > >  even,
>> > >  since it means dropping frames that are in fact ok.
>> > > 
>> > >  I have captured some bad frames though - one that has the colors badly
>> > >  screwed up - where everything is a bright green, and another where the 
>> > >  image
>> > >  appears to be shifted about a quarter of a frame to one side - these 
>> > >  were
>> > >  collected without the nodrop=1 parameter, so they are not caught as 
>> > >  corrupt
>> > >  by any of the current tests. They are delivered as occuring with the 
>> > >  full
>> > >  expected frame size. Are there other flags we should be checking for? 
>> > >  (hmm,
>> > >  like maybe an FID at the wrong time?)
>> > > 
>> > >  Carl
>> > > 
>> > >  _______________________________________________
>> > >  Linux-uvc-devel mailing list
>> > >  Linux-uvc-devel at lists.berlios.de
>> > >  https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>> > > 
>> > 
>> >  Hi,
>> > 
>> >  this gets weirder.  Dropping frames where the FID bit is toggled
>> >  unexpectedly looks like it drops lots of good frames, and not all the 
>> >  bad
>> >  ones. But this is not so easy - capturing frames with gstreamer actually
>> >  seems relatively reliable in any case.  The fraction of bad frames
>> >  generated seems to depend quite a bit on what program is used - guvcview
>> >  and luvcview produce many more than gstreamer.
>> > 
>> >  I put in checks at the begining of uvc_video_decode_start to look at 
>> >  other
>> >  bits in the header, and found that the camera does occasionally return 
>> >  the
>> >  STI bit and RES bit set, and sometimes doesn't set the EOH.  These 
>> >  usually
>> >  happen together, but sometimes just one or two of these bits is
>> >  unexpected. Dropping frames with any one of those unexpected *seems* to
>> >  help, but there are still occasional bad frames.
>> > 
>> >  If EOH is not set does that mean there is more header somewhere?
>>
>>  Do you mean EOH or EOF?
>>
>>  can you please send me one sample of brocken frame, row, not jpeg. Use
>>  "luvcview -C" to capture frames. It will probably use 640x480 in YUV by
>>  default. YOu will get lots of files. To convert it in jpeg you can use
>>  gstreamer:
>>
>>  for i in *.raw; do gst-launch-0.10 filesrc location=$i ! videoparse
>>  format=3 width=640 height=480 ! jpegenc ! filesink location=$i.jpg; done
>>
>>  --
>>  Regards,
>>         Alexey
>> 
>> 
> Hi,
>
> ok - I've put a few frames here:
> http://www.phas.ubc.ca/~michal/Frames/
>
> These are 1280x720.  With the first patch (to fully ignore FID toggling) 
> collecting frames with
> luvcview -C -f -s 640x480
> gives no bad frames in a few minutes of collecting.  But going to 1280x720 
> gives anywhere between 2-50 bad frames in 2 minutes.  These are without the 
> nodrop=1 parameter.  If I add nodrop=1 the number of bad frames increases 
> dramatically.  There are overflow errors and some frames get dropped from the 
> status<0 test.
>
> The three frames I saved there were collected without nodrop=1, and with both 
> the first and third patches - so FID is ignored, and any frame that had an 
> error bit set is dropped.
>
> I noticed that when the error bit is set, sometimes EOF is also set - I 
> wonder if EOF + ERROR means "give up on this frame and go on to the next?" It 
> looks like the driver currently ignores EOF if ERROR is set.
>
> It appears to me that EOH (yes EOH) is generally set, but occasionally it is 
> not. I don't see why STI or RES should ever be set - is there some 
> possibility that bytes that are not header are being misinterpreted as 
> header?
>
> Thanks,
>
> Carl
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>
>
This looks deeper -

I've been looking at lengths of packets and headers in packets where these 
unexpected STI, RES, EOH and ERROR bits are set.

There are many things that seem inconsistent, but there are some patterns 
that come up repeatedly.  For example getting a packet with an ERROR bit 
set that has a length of 2048 and a header length (from data[0]) of 127 or 
125 or 110 or some other big number. That packet gets discarded because of 
the error bit, but then when the frame ends, it is 2048 bytes shorter than 
it should be.  I've also seen that with a packet length of 1024 and the 
frame ending 1024 bytes short.

It looks like the header has somehow disappeared and the image data is 
being interpreted as header.  To test this, I put in checks in 
uvc_video_decode_isoc for any EOH, STI, RES or ERROR - if any are set (or 
unset for EOH) then to return a header length of 0, so that the entire 
packet gets used as image data.

This by no means solves all my problems, but with that - I do find at 
least some frames assembled this way are complete and uncorrupted.

So somehow some headers are disappearing?

Carl



From michal at physics.ubc.ca  Sat Jun 18 08:07:57 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 17 Jun 2011 23:07:57 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106171433120.26141@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
	<1308254885.9729.7.camel@mini>
	<alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
	<alpine.LNX.2.00.1106171433120.26141@tristan>
Message-ID: <alpine.LNX.2.00.1106172303590.23394@tristan>



On Fri, 17 Jun 2011, Carl Michal wrote:

> On Fri, 17 Jun 2011, Carl Michal wrote:
>
>>
>>  On Thu, 16 Jun 2011, Alexey Fisher wrote:
>> 
>> >   Am Donnerstag, den 16.06.2011, 11:31 -0700 schrieb Carl Michal:
>> > > 
>> > >   On Thu, 16 Jun 2011, Carl Michal wrote:
>> > > 
>> > > > 
>> > > >   On Wed, 15 Jun 2011, Alexey Fisher wrote:
>> > > > 
>> > > > >    Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>> > > > > >    On Tue, 14 Jun 2011, Alexey Fisher wrote:
>> > > > > > 
>> > > > > > >    Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>> > > > > > > > > > 
>> > > > > > > > >    Hi,
>> > > > > > > > > 
>> > > > > > > > >    I think you nailed it.  Every frame looks perfect now. 
>> > > > > > > > >    The trace
>> > > > > > > > >    shows a few
>> > > > > > > > >    of these:
>> > > > > > > > > 
>> > > > > > > > >    Jun 13 09:24:24 uvcvideo: Dropping payload (error bit 
>> > > > > > > > >    set)
>> > > > > > > > > 
>> > > > > > > > >    but I don't see corrupt frames any more in either MJPG 
>> > > > > > > > >    or YUYV (at
>> > > > > > > > >    640x480
>> > > > > > > > >    anyway) - in MJPG all the frames have the right size.
>> > > > > > > > > 
>> > > > > > > > >    There is a some weirdness with frame rates depending on 
>> > > > > > > > >    the
>> > > > > > > > >    exposure setting:
>> > > > > > > > >    1) Exposure, auto gives 4 options: auto priority mode, 
>> > > > > > > > >    manual
>> > > > > > > > >    mode, shutter
>> > > > > > > > >    priority mode, and aperture priority mode.  Auto and 
>> > > > > > > > >    shutter don't
>> > > > > > > > >    seem to be
>> > > > > > > > >    settable (errors from guvcview when chosen). There is 
>> > > > > > > > >    also an
>> > > > > > > > >    "Exposure, auto
>> > > > > > > > >    priority" checkbox.
>> > > > > > > > > 
>> > > > > > > > >    Frame rates drop dramatically in manual mode (to 
>> > > > > > > > >    10-15fps from
>> > > > > > > > >    30).
>> > > > > > > > > 
>> > > > > > > > >    But I can't really complain at this point - the corrupt 
>> > > > > > > > >    frames are
>> > > > > > > > >    gone.
>> > > > > > > > >    Will that quirk be added to the driver (usb id is: 
>> > > > > > > > >    0408:2fb1)?
>> > > > > > > > > 
>> > > > > > > > >    Thanks,
>> > > > > > > > > 
>> > > > > > > > 
>> > > > > > > >    Hi,
>> > > > > > > > 
>> > > > > > > >    it seems like I am much better off by fully disabling FID 
>> > > > > > > >    (with your
>> > > > > > > >    patch) than before.  With the patch, YUYV frames are 
>> > > > > > > >    _always_ the
>> > > > > > > >    right
>> > > > > > > >    size.  There are still some problems:
>> > > > > > > > 
>> > > > > > > >    1) corrupt frames - with part of the image missing or the 
>> > > > > > > >    image
>> > > > > > > >    displaced.
>> > > > > > > >    Sometimes (but definitely not always) these occur at the 
>> > > > > > > >    same time
>> > > > > > > >    as a
>> > > > > > > >    trace message saying the error bit is set.
>> > > > > > > > 
>> > > > > > > >    2) sometimes the camera just won't start.  when guvcview 
>> > > > > > > >    (or
>> > > > > > > >    luvcview) is
>> > > > > > > >    started, no frames come back from the camera.  There is a 
>> > > > > > > >    light next
>> > > > > > > >    to
>> > > > > > > >    the camera that comes on to indicate it should be active, 
>> > > > > > > >    but no
>> > > > > > > >    frames
>> > > > > > > >    arrive.  There seems to be a fairly strong correlation 
>> > > > > > > >    with using
>> > > > > > > >    luvcview
>> > > > > > > >    (which from the traces seems to use some different 
>> > > > > > > >    mechanism to get
>> > > > > > > >    frames from
>> > > > > > > >    the driver from guvcview.  guvcview polls, luvcview 
>> > > > > > > >    doesn't).
>> > > > > > > >    Sometimes
>> > > > > > > >    just restarting guvcview several times will work and the 
>> > > > > > > >    camera
>> > > > > > > >    eventually
>> > > > > > > >    starts.  Sometimes just changing resolution or frame rates 
>> > > > > > > >    succeeds
>> > > > > > > >    in
>> > > > > > > >    starting the camera.  I haven't found anything 
>> > > > > > > >    reproducible. I do
>> > > > > > > >    not
>> > > > > > > >    think this is related to your patch, as it did happen once 
>> > > > > > > >    before
>> > > > > > > >    your
>> > > > > > > >    patch was applied. Unloading and reloading the uvcvideo 
>> > > > > > > >    and ehci_hcd
>> > > > > > > >    modules does not consistently solve it. guvcview just 
>> > > > > > > >    lists:
>> > > > > > > > 
>> > > > > > > >      Could not grab image (select timeout): Resource 
>> > > > > > > >      temporarily
>> > > > > > > >      unavailable
>> > > > > > > > 
>> > > > > > > >    and the trace shows guvcview polling, but nothing else 
>> > > > > > > >    going on.
>> > > > > > > > 
>> > > > > > > >    I have tried adding the other quirks to the FID quirk, but 
>> > > > > > > >    haven't
>> > > > > > > >    seen
>> > > > > > > >    any improvement with any others.
>> > > > > > > > 
>> > > > > > > >    Thanks for you help -
>> > > > > > > > 
>> > > > > > > >    Carl
>> > > > > > > 
>> > > > > > >    Webcam returns error in the middle of some frame, 
>> > > > > > >    theoretically we
>> > > > > > >    should drop complete frame. But current uvcvideo just gather 
>> > > > > > >    data and
>> > > > > > >    assume the cam will resend previous parts to complete the 
>> > > > > > >    frame.
>> > > > > > > 
>> > > > > > >    Try attached patch additionally to my previous one.
>> > > > > > >    --
>> > > > > > >    Regards,
>> > > > > > >           Alexey
>> > > > > > > 
>> > > > > > 
>> > > > > >    Hi,
>> > > > > > 
>> > > > > >    its very hard to say if this helps or not.  There are still 
>> > > > > >    corrupt
>> > > > > >    frames, and some seem to occur at about the same time as the 
>> > > > > >    error bit
>> > > > > >    trace messages, but some don't show anything unusual in the 
>> > > > > >    traces that
>> > > > > >    I've noticed yet.
>> > > > > > 
>> > > > > >    Since all the uncompressed frames were the right size (even 
>> > > > > >    ones where
>> > > > > >    the
>> > > > > >    error bit was set somewhere) those frames are at least 
>> > > > > >    complete.
>> > > > > > 
>> > > > > >    Is there some convenient way to capture just those frames with 
>> > > > > >    the error
>> > > > > >    bit set?
>> > > > > > 
>> > > > > >    Thanks,
>> > > > > > 
>> > > > > >    Carl
>> > > > > > 
>> > > > > 
>> > > > >    you can try this command:
>> > > > >    gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! 
>> > > > >    identity !
>> > > > >    jpegenc ! multifilesink location=tmp-%05d.jpg
>> > > > > 
>> > > > >    it will produce for each frame one jpeg file. Watch out, it will 
>> > > > >    produce
>> > > > >    lots of files.
>> > > > > 
>> > > > >    Attached patch is replacement for the last one. You do not need 
>> > > > >    setting
>> > > > >    trace option, it will print all we need.
>> > > > > 
>> > > > >    --
>> > > > >    Regards,
>> > > > >           Alexey
>> > > > > 
>> > > >   Hi,
>> > > > 
>> > > >   we're learning a little here.  If I set nodrop=1, I get lots of 
>> > > >   frames that
>> > > >   are too short (gst complains that they are fewer bytes than 
>> > > >   expected) but
>> > > >   those coincide with the status < 0 test in uvc_video_decode_isoc - 
>> > > >   they do
>> > > >   not correspond to those with the error bit set.
>> > > > 
>> > > >   The buf->error=1 in uvc_video_decode_start=1 is unnecessary - 
>> > > >   harmful even,
>> > > >   since it means dropping frames that are in fact ok.
>> > > > 
>> > > >   I have captured some bad frames though - one that has the colors 
>> > > >   badly
>> > > >   screwed up - where everything is a bright green, and another where 
>> > > >   the image
>> > > >   appears to be shifted about a quarter of a frame to one side - 
>> > > >   these were
>> > > >   collected without the nodrop=1 parameter, so they are not caught as 
>> > > >   corrupt
>> > > >   by any of the current tests. They are delivered as occuring with 
>> > > >   the full
>> > > >   expected frame size. Are there other flags we should be checking 
>> > > >   for? (hmm,
>> > > >   like maybe an FID at the wrong time?)
>> > > > 
>> > > >   Carl
>> > > > 
>> > > >   _______________________________________________
>> > > >   Linux-uvc-devel mailing list
>> > > >   Linux-uvc-devel at lists.berlios.de
>> > > >   https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>> > > > 
>> > > 
>> > >   Hi,
>> > > 
>> > >   this gets weirder.  Dropping frames where the FID bit is toggled
>> > >   unexpectedly looks like it drops lots of good frames, and not all the 
>> > >   bad
>> > >   ones. But this is not so easy - capturing frames with gstreamer 
>> > >   actually
>> > >   seems relatively reliable in any case.  The fraction of bad frames
>> > >   generated seems to depend quite a bit on what program is used - 
>> > >   guvcview
>> > >   and luvcview produce many more than gstreamer.
>> > > 
>> > >   I put in checks at the begining of uvc_video_decode_start to look at 
>> > >   other
>> > >   bits in the header, and found that the camera does occasionally 
>> > >   return the
>> > >   STI bit and RES bit set, and sometimes doesn't set the EOH.  These 
>> > >   usually
>> > >   happen together, but sometimes just one or two of these bits is
>> > >   unexpected. Dropping frames with any one of those unexpected *seems* 
>> > >   to
>> > >   help, but there are still occasional bad frames.
>> > > 
>> > >   If EOH is not set does that mean there is more header somewhere?
>> > 
>> >   Do you mean EOH or EOF?
>> > 
>> >   can you please send me one sample of brocken frame, row, not jpeg. Use
>> >   "luvcview -C" to capture frames. It will probably use 640x480 in YUV by
>> >   default. YOu will get lots of files. To convert it in jpeg you can use
>> >   gstreamer:
>> > 
>> >   for i in *.raw; do gst-launch-0.10 filesrc location=$i ! videoparse
>> >   format=3 width=640 height=480 ! jpegenc ! filesink location=$i.jpg; 
>> >   done
>> > 
>> >   --
>> >   Regards,
>> >          Alexey
>> > 
>> >
>>  Hi,
>>
>>  ok - I've put a few frames here:
>>  http://www.phas.ubc.ca/~michal/Frames/
>>
>>  These are 1280x720.  With the first patch (to fully ignore FID toggling)
>>  collecting frames with
>>  luvcview -C -f -s 640x480
>>  gives no bad frames in a few minutes of collecting.  But going to 1280x720
>>  gives anywhere between 2-50 bad frames in 2 minutes.  These are without
>>  the nodrop=1 parameter.  If I add nodrop=1 the number of bad frames
>>  increases dramatically.  There are overflow errors and some frames get
>>  dropped from the status<0 test.
>>
>>  The three frames I saved there were collected without nodrop=1, and with
>>  both the first and third patches - so FID is ignored, and any frame that
>>  had an error bit set is dropped.
>>
>>  I noticed that when the error bit is set, sometimes EOF is also set - I
>>  wonder if EOF + ERROR means "give up on this frame and go on to the next?"
>>  It looks like the driver currently ignores EOF if ERROR is set.
>>
>>  It appears to me that EOH (yes EOH) is generally set, but occasionally it
>>  is not. I don't see why STI or RES should ever be set - is there some
>>  possibility that bytes that are not header are being misinterpreted as
>>  header?
>>
>>  Thanks,
>>
>>  Carl
>>
>>  _______________________________________________
>>  Linux-uvc-devel mailing list
>>  Linux-uvc-devel at lists.berlios.de
>>  https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>> 
>> 
> This looks deeper -
>
> I've been looking at lengths of packets and headers in packets where these 
> unexpected STI, RES, EOH and ERROR bits are set.
>
> There are many things that seem inconsistent, but there are some patterns 
> that come up repeatedly.  For example getting a packet with an ERROR bit set 
> that has a length of 2048 and a header length (from data[0]) of 127 or 125 or 
> 110 or some other big number. That packet gets discarded because of the error 
> bit, but then when the frame ends, it is 2048 bytes shorter than it should 
> be.  I've also seen that with a packet length of 1024 and the frame ending 
> 1024 bytes short.
>
> It looks like the header has somehow disappeared and the image data is being 
> interpreted as header.  To test this, I put in checks in 
> uvc_video_decode_isoc for any EOH, STI, RES or ERROR - if any are set (or 
> unset for EOH) then to return a header length of 0, so that the entire packet 
> gets used as image data.
>
> This by no means solves all my problems, but with that - I do find at least 
> some frames assembled this way are complete and uncorrupted.
>
> So somehow some headers are disappearing?
>
> Carl
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>

I should add that there are some errors found in

urb->iso_frame_desc[i].status

The two errors I've seen are -18 (EXDEV) and -71 (EPROTO)

Carl



From laurent.pinchart at ideasonboard.com  Sat Jun 18 16:44:18 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Sat, 18 Jun 2011 16:44:18 +0200
Subject: [Linux-uvc-devel] 5986:0343 support
In-Reply-To: <4DD06C2F.8030305@gmail.com>
References: <4DD06C2F.8030305@gmail.com>
Message-ID: <201106181644.19047.laurent.pinchart@ideasonboard.com>

Hi Julian,

On Monday 16 May 2011 02:13:35 Julian Sikorski wrote:
> Hi,
> 
> I would like to report that the said device seems to work on Fedora 15.
> I am attaching lsusb -v output. lsusb reports it as Acer for some reason.

Thanks for the report. I'll update the supported devices list. Could you 
please tell me whether the device is a standalone webcam or integrated into a 
laptop, and give me the webcam/laptop commercial brand and model ?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Sat Jun 18 16:47:05 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Sat, 18 Jun 2011 16:47:05 +0200
Subject: [Linux-uvc-devel] Obtaining driver from git
In-Reply-To: <BANLkTikvnLLcs=5BD6i2r3QpG_f=7Xsdcw@mail.gmail.com>
References: <BANLkTikvnLLcs=5BD6i2r3QpG_f=7Xsdcw@mail.gmail.com>
Message-ID: <201106181647.05805.laurent.pinchart@ideasonboard.com>

Hi Brent,

Sorry for the late reply.

On Wednesday 18 May 2011 22:36:25 Brent Weatherall wrote:
> I cloned the repository and added the uvcvideo.git per the instructions on
> 'http://git.linuxtv.org/pinchartl/uvcvideo.git'.  I am new to git and having
> a horrible time obtaining the revision I want. Using a qtgit I see a branch
> of uvcvideo.h which has the 'struct uvc_xu_control_query' defined. Even
> though the GUI client can show this to me, there does not seem to be a
> straightforward way to load this version of the repository so I can build it
> and use use the updated version of the uvcvideo.ko module on my development
> machine. If I am reading the GUI client information correctly, I want to get
> SHA1 - cdd0bc822e118946c1ce2b78ea7332dbd967ebcf, with short log entry
> 'uvcvideo: Rename UVC_CONTROL_* flags to UVC_CTRL_FLAG_*' and ID '52'.
> After reading the man pages for git it seems to me I should simply do
> either:
> 
> 1. git pull git://linuxtv.org/pinchartl/uvcvideo.git
> cdd0bc822e118946c1ce2b78ea7332dbd967ebcf
> 
> or
> 
> 2. git pull
> git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git
> cdd0bc822e118946c1ce2b78ea7332dbd967ebcf
> 
> However, these fail with 'fatal: Couldn't find remote ref
> cdd0bc822e118946c1ce2b78ea7332dbd967ebcf' and I am at a loss as to how I am
> supposed to retrieve the revision I would like to try out. Can anyone offer
> some insights into what I am missing? The revision I am interested in is a
> branch from the main line.  I also tried pulling in the main line where the
> branch occurred with the intent of patching in the changes, but I receive
> the same error message.

git checkout cdd0bc822e118946c1ce2b78ea7332dbd967ebcf

should do the job.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Sat Jun 18 16:48:23 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Sat, 18 Jun 2011 16:48:23 +0200
Subject: [Linux-uvc-devel] Looking for upside down uvc cams
In-Reply-To: <1306060388.2916.0.camel@stefano-K52F>
References: <1306060388.2916.0.camel@stefano-K52F>
Message-ID: <201106181648.23373.laurent.pinchart@ideasonboard.com>

Hi Stefano,

On Sunday 22 May 2011 12:33:08 stefano wrote:
> Can you help me? Thanks! :)

What do you need help on ? Is your webcam upside-down ?

Please send me the output of lsusb -v for your camera (run as root if 
possible), I'll then add it to the supported devices list.

-- 
Regards,

Laurent Pinchart


From belegdol at gmail.com  Sat Jun 18 16:49:18 2011
From: belegdol at gmail.com (Julian Sikorski)
Date: Sat, 18 Jun 2011 16:49:18 +0200
Subject: [Linux-uvc-devel] 5986:0343 support
In-Reply-To: <201106181644.19047.laurent.pinchart@ideasonboard.com>
References: <4DD06C2F.8030305@gmail.com>
	<201106181644.19047.laurent.pinchart@ideasonboard.com>
Message-ID: <4DFCBAEE.4050908@gmail.com>

W dniu 2011-06-18 16:44, Laurent Pinchart pisze:
> Hi Julian,
>
> On Monday 16 May 2011 02:13:35 Julian Sikorski wrote:
>> Hi,
>>
>> I would like to report that the said device seems to work on Fedora 15.
>> I am attaching lsusb -v output. lsusb reports it as Acer for some reason.
>
> Thanks for the report. I'll update the supported devices list. Could you
> please tell me whether the device is a standalone webcam or integrated into a
> laptop, and give me the webcam/laptop commercial brand and model ?
>
This device is integrated into the laptop. The laptop is a Clevo P150HM.

Julian


From laurent.pinchart at ideasonboard.com  Sat Jun 18 17:02:11 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Sat, 18 Jun 2011 17:02:11 +0200
Subject: [Linux-uvc-devel] New cam: Celestron Model #44421 is supported
In-Reply-To: <201105130429.p4D4T0012994@nudel.nodomain.nowhere>
References: <201105130429.p4D4T0012994@nudel.nodomain.nowhere>
Message-ID: <201106181702.11727.laurent.pinchart@ideasonboard.com>

Hi Michael,

On Friday 13 May 2011 06:29:00 Mike Spencer wrote:
> The list of supported devices at http://www.ideasonboard.org/uvc/
> invites reporting to linux-uvc-devel of uvc devices not listed there.
> This one isn't there:
> 
> Celestron Digital Microscope Imager  Model #44421

Could you please send me the output of lsusb -v for your device (running as 
root if possible) ? I'll then update the supported devices list.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Sat Jun 18 17:28:40 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Sat, 18 Jun 2011 17:28:40 +0200
Subject: [Linux-uvc-devel] Fix potential oops & rollback after camera
	fails to start
In-Reply-To: <1306779581.30912.5.camel@night>
References: <1306779581.30912.5.camel@night>
Message-ID: <201106181728.40952.laurent.pinchart@ideasonboard.com>

Hi Sjoerd,

On Monday 30 May 2011 20:19:41 Sjoerd Simons wrote:
> Hey all,
> 
> Two small patches attached of the UVC driver. The first one avoid a
> kernel oops that's reasonably easy to trigger, the second makes the
> driver rollback properly if starting the camera fails (which seems to
> happen a bit too often with my logitech :/). More info in the patches
> themselves.
> 
> If i should use a different format/list/whatever for these patches let
> me know :) And ofcourse any other comments are appreciated

Thank you for the patches, and sorry for my late reply. The patches look good 
to me. Could you please give me your Signed-off-by line for both of them ?

-- 
Regards,

Laurent Pinchart


From sjoerd.simons at collabora.co.uk  Sat Jun 18 18:19:45 2011
From: sjoerd.simons at collabora.co.uk (Sjoerd Simons)
Date: Sat, 18 Jun 2011 17:19:45 +0100
Subject: [Linux-uvc-devel] Fix potential oops & rollback after camera
 fails to start
In-Reply-To: <201106181728.40952.laurent.pinchart@ideasonboard.com>
References: <1306779581.30912.5.camel@night>
	<201106181728.40952.laurent.pinchart@ideasonboard.com>
Message-ID: <1308413985.25991.4.camel@night>

On Sat, 2011-06-18 at 17:28 +0200, Laurent Pinchart wrote:
> Thank you for the patches, and sorry for my late reply. The patches look good 
> to me. Could you please give me your Signed-off-by line for both of them ?

Sorry about that, patches with signed-off-by attached. 
-- 
Sjoerd Simons <sjoerd.simons at collabora.co.uk>
Collabora Ltd.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-media-uvcvideo-Remove-buffers-from-the-queues-when-f.patch
Type: text/x-patch
Size: 1242 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110618/a35bc907/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-media-uvcvideo-Disable-the-queue-when-failing-to-sta.patch
Type: text/x-patch
Size: 1127 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110618/a35bc907/attachment-0001.bin>

From jyrios at die.upm.es  Mon Jun 20 10:45:25 2011
From: jyrios at die.upm.es (Jorge Yesid Rios Ortiz)
Date: Mon, 20 Jun 2011 10:45:25 +0200
Subject: [Linux-uvc-devel] webcam on a embedded system
Message-ID: <1308559525.3072.22.camel@sacarino>



Hi:

I have a problem when I tried to use this web-cam in my embedded system:

Camera:
ID 041e:4058
model: Live! Cam Optia AF
manufacturer:  Creative Technology, Ltd


Embedded system ARTILA M-501:
CPU: ARM AT91RM9200, 180MHz
OS: Linux 2.6.14-M5
SDRAM: 64MB
USB Host interface: 2x, USB 2.0 compliant
UART: 4x, 921.6kbps


This cams works very fine when I used it on my PC with Linux, but when I
plugged to my embedded system I get this message:

usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
usb 1-2: Manufacturer: Creative Labs
uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
uvcvideo: Non-zero status (-110) in status completion handler.


I'm looking for about what means this code error, but I can't find
anything!!!

is anybody help me?
If Anybody knows some camera that works on a embedded system with
similar characteristics, I would  appreciate very much tell me.


Regards,


Jorge



From yann at minet.net  Mon Jun 20 12:30:17 2011
From: yann at minet.net (Yann Sionneau)
Date: Mon, 20 Jun 2011 12:30:17 +0200
Subject: [Linux-uvc-devel] [PATCH v2] uvcvideo: Extract
	timestamp-related statistics
In-Reply-To: <1308214767-30766-1-git-send-email-laurent.pinchart@ideasonboard.com>
References: <1308129214-9492-1-git-send-email-laurent.pinchart@ideasonboard.com>
	<1308214767-30766-1-git-send-email-laurent.pinchart@ideasonboard.com>
Message-ID: <4DFF2139.9040002@minet.net>

On 06/16/2011 10:59 AM, Laurent Pinchart wrote:
> Signed-off-by: Laurent Pinchart<laurent.pinchart at ideasonboard.com>
> ---
>   drivers/media/video/uvc/uvc_video.c |  196 ++++++++++++++++++++++++++++++++++-
>   drivers/media/video/uvc/uvcvideo.h  |   39 +++++++
>   2 files changed, 234 insertions(+), 1 deletions(-)
>
> Hi Yann,
>
> Here's a second version of the patch that prints the estimated SOF frequency.
> With this information we should have all the stats we need. Let me know if you
> think something is missing. I will then run this on the webcams I own and post
> the results.
>
> [strip]
Hi Laurent,

Your patch works very well, it seems fine to me to collect data to know 
what we will be facing in real life implementing accurate timestamp 
support in the UVC driver.

I added two things :

(*) couting the pts time elapsed during the whole stream (in native 
device clock)
(*) counting the SCR.SOF for each frame

Patches to apply to v2.6.39 in following e-mails, first one being yours.

Regards,

-- 
Yann Sionneau


From yann at minet.net  Mon Jun 20 12:31:31 2011
From: yann at minet.net (Yann Sionneau)
Date: Mon, 20 Jun 2011 12:31:31 +0200
Subject: [Linux-uvc-devel] [PATCH 1/2] adding statistics about timestamps
Message-ID: <4DFF2183.5000200@minet.net>

---
  drivers/media/video/uvc/uvc_video.c |  196 
++++++++++++++++++++++++++++++++++-
  drivers/media/video/uvc/uvcvideo.h  |   39 +++++++
  2 files changed, 234 insertions(+), 1 deletions(-)

diff --git a/drivers/media/video/uvc/uvc_video.c 
b/drivers/media/video/uvc/uvc_video.c
index fc766b9..feb585b 100644
--- a/drivers/media/video/uvc/uvc_video.c
+++ b/drivers/media/video/uvc/uvc_video.c
@@ -358,6 +358,191 @@ int uvc_commit_video(struct uvc_streaming *stream,
  }

  /* 
------------------------------------------------------------------------
+ * Timestamp statistics
+ */
+
+static void uvc_video_stats_decode(struct uvc_streaming *stream,
+        const __u8 *data, int len)
+{
+    unsigned int header_size;
+    bool has_pts = false;
+    bool has_scr = false;
+    u16 scr_sof;
+    u32 scr_stc;
+    u32 pts;
+
+    if (stream->stats.stream.nb_frames == 0 &&
+        stream->stats.frame.nb_packets == 0)
+        ktime_get_ts(&stream->stats.stream.start_ts);
+
+    switch (data[1] & (UVC_STREAM_PTS | UVC_STREAM_SCR)) {
+    case UVC_STREAM_PTS | UVC_STREAM_SCR:
+        header_size = 12;
+        has_pts = true;
+        has_scr = true;
+        break;
+    case UVC_STREAM_PTS:
+        header_size = 6;
+        has_pts = true;
+        break;
+    case UVC_STREAM_SCR:
+        header_size = 8;
+        has_scr = true;
+        break;
+    default:
+        header_size = 2;
+        break;
+    }
+
+    /* Check for invalid headers. */
+    if (len < header_size) {
+        stream->stats.frame.nb_invalid_headers++;
+        return;
+    }
+
+    /* Extract the timestamps. */
+    if (has_pts)
+        pts = get_unaligned_le32(&data[2]);
+
+    if (has_scr) {
+        scr_stc = get_unaligned_le32(&data[header_size - 6]);
+        scr_sof = get_unaligned_le16(&data[header_size - 2]);
+    }
+
+    /* Is PTS constant through the whole frame ? */
+    if (has_pts && stream->stats.frame.nb_pts) {
+        if (stream->stats.frame.pts != pts) {
+            stream->stats.frame.nb_pts_diffs++;
+            stream->stats.frame.last_pts_diff =
+                stream->stats.frame.nb_packets;
+        }
+    }
+
+    if (has_pts) {
+        stream->stats.frame.nb_pts++;
+        stream->stats.frame.pts = pts;
+    }
+
+    /* Do all frames have a PTS in their first non-empty packet, or before
+     * their first empty packet ?
+     */
+    if (stream->stats.frame.size == 0) {
+        if (len > header_size)
+            stream->stats.frame.has_initial_pts = has_pts;
+        if (len == header_size && has_pts)
+            stream->stats.frame.has_early_pts = true;
+    }
+
+    /* Do the SCR.STC and SCR.SOF fields vary through the frame ? */
+    if (has_scr && stream->stats.frame.nb_scr) {
+        if (stream->stats.frame.scr_stc != scr_stc)
+            stream->stats.frame.nb_scr_diffs++;
+    }
+
+    if (has_scr) {
+        /* Expand the SOF counter to 32 bits and store its value. */
+        if (stream->stats.stream.nb_frames > 0 ||
+            stream->stats.frame.nb_scr > 0)
+            stream->stats.stream.scr_sof_count +=
+                (scr_sof - stream->stats.stream.scr_sof) % 2048;
+        stream->stats.stream.scr_sof = scr_sof;
+
+        stream->stats.frame.nb_scr++;
+        stream->stats.frame.scr_stc = scr_stc;
+        stream->stats.frame.scr_sof = scr_sof;
+
+        if (scr_sof < stream->stats.stream.min_sof)
+            stream->stats.stream.min_sof = scr_sof;
+        if (scr_sof > stream->stats.stream.max_sof)
+            stream->stats.stream.max_sof = scr_sof;
+    }
+
+    if (stream->stats.frame.size == 0 && len > header_size)
+        stream->stats.frame.first_data = stream->stats.frame.nb_packets;
+
+    stream->stats.frame.size += len - header_size;
+    stream->stats.frame.nb_packets++;
+    if (len > header_size)
+        stream->stats.frame.nb_non_empty_packets++;
+
+    if (data[1] & UVC_STREAM_ERR)
+        stream->stats.frame.nb_errors++;
+}
+
+static void uvc_video_stats_update(struct uvc_streaming *stream)
+{
+    struct uvc_stats_frame *frame = &stream->stats.frame;
+
+    uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
+          "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
+          stream->sequence, frame->first_data,
+          frame->nb_non_empty_packets, frame->nb_packets,
+          frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
+          frame->has_early_pts ? "" : "!",
+          frame->has_initial_pts ? "" : "!",
+          frame->nb_scr_diffs, frame->nb_scr);
+
+    stream->stats.stream.nb_frames++;
+
+    if (frame->has_early_pts)
+        stream->stats.stream.nb_pts_early++;
+    if (frame->has_initial_pts)
+        stream->stats.stream.nb_pts_initial++;
+    if (frame->last_pts_diff <= frame->first_data)
+        stream->stats.stream.nb_pts_constant++;
+    if (frame->nb_scr >= frame->nb_non_empty_packets)
+        stream->stats.stream.nb_scr_count_ok++;
+    if (frame->nb_scr_diffs + 1 == frame->nb_scr)
+        stream->stats.stream.nb_scr_diffs_ok++;
+
+    memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
+}
+
+static void uvc_video_stats_dump(struct uvc_streaming *stream)
+{
+    unsigned int scr_sof_freq;
+    unsigned int duration;
+    struct timespec ts;
+
+    ktime_get_ts(&ts);
+
+    ts.tv_sec -= stream->stats.stream.start_ts.tv_sec;
+    ts.tv_nsec -= stream->stats.stream.start_ts.tv_nsec;
+    if (ts.tv_nsec < 0) {
+        ts.tv_sec--;
+        ts.tv_nsec += 1000000000;
+    }
+
+    /* Compute the SCR.SOF frequency estimate. At the nominal 1kHz SOF
+     * frequency this will not overflow before more than 1h.
+     */
+    duration = ts.tv_sec * 1000 + ts.tv_nsec / 1000000;
+    if (duration != 0)
+        scr_sof_freq = stream->stats.stream.scr_sof_count * 1000
+                 / duration;
+    else
+        scr_sof_freq = 0;
+
+    uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
+          "%u initial pts %u pts ok %u scr count ok %u scr diff ok, "
+          "%u <= sof <= %u, sof freq %u.%03u kHz\n",
+          stream->stats.stream.nb_frames,
+          stream->stats.stream.nb_pts_early,
+          stream->stats.stream.nb_pts_initial,
+          stream->stats.stream.nb_pts_constant,
+          stream->stats.stream.nb_scr_count_ok,
+          stream->stats.stream.nb_scr_diffs_ok,
+          stream->stats.stream.min_sof, stream->stats.stream.max_sof,
+          scr_sof_freq / 1000, scr_sof_freq % 1000);
+}
+
+static void uvc_video_stats_init(struct uvc_streaming *stream)
+{
+    memset(&stream->stats, 0, sizeof(stream->stats));
+    stream->stats.stream.min_sof = 2048;
+}
+
+/* ------------------------------------------------------------------------
   * Video codecs
   */

@@ -431,8 +616,13 @@ static int uvc_video_decode_start(struct 
uvc_streaming *stream,
      /* Increase the sequence number regardless of any buffer states, so
       * that discontinuous sequence numbers always indicate lost frames.
       */
-    if (stream->last_fid != fid)
+    if (stream->last_fid != fid) {
          stream->sequence++;
+        if (stream->sequence)
+            uvc_video_stats_update(stream);
+    }
+
+    uvc_video_stats_decode(stream, data, len);

      /* Store the payload FID bit and return immediately when the buffer is
       * NULL.
@@ -861,6 +1051,8 @@ static void uvc_uninit_video(struct uvc_streaming 
*stream, int free_buffers)
      struct urb *urb;
      unsigned int i;

+    uvc_video_stats_dump(stream);
+
      for (i = 0; i < UVC_URBS; ++i) {
          urb = stream->urb[i];
          if (urb == NULL)
@@ -994,6 +1186,8 @@ static int uvc_init_video(struct uvc_streaming 
*stream, gfp_t gfp_flags)
      stream->bulk.skip_payload = 0;
      stream->bulk.payload_size = 0;

+    uvc_video_stats_init(stream);
+
      if (intf->num_altsetting > 1) {
          struct usb_host_endpoint *best_ep = NULL;
          unsigned int best_psize = 3 * 1024;
diff --git a/drivers/media/video/uvc/uvcvideo.h 
b/drivers/media/video/uvc/uvcvideo.h
index 45f01e7..40f461c 100644
--- a/drivers/media/video/uvc/uvcvideo.h
+++ b/drivers/media/video/uvc/uvcvideo.h
@@ -462,6 +462,44 @@ struct uvc_streaming {

      __u32 sequence;
      __u8 last_fid;
+
+    struct {
+        struct {
+            struct timespec start_ts;    /* Stream start timestamp */
+            unsigned int nb_frames;        /* Number of frames */
+            unsigned int nb_pts_constant;    /* Number of frames with 
constant PTS */
+            unsigned int nb_pts_early;    /* Number of frames with 
early PTS */
+            unsigned int nb_pts_initial;    /* Number of frames with 
initial PTS */
+            unsigned int nb_scr_count_ok;    /* Number of frames with 
at least one SCR per non empty packet */
+            unsigned int nb_scr_diffs_ok;    /* Number of frames with 
varying SCR.STC */
+            unsigned int scr_sof_count;    /* STC.SOF counter 
accumulated since stream start */
+            unsigned int scr_sof;        /* STC.SOF of the last packet */
+            unsigned int min_sof;        /* Minimum STC.SOF value */
+            unsigned int max_sof;        /* Maximum STC.SOF value */
+        } stream;
+
+        struct uvc_stats_frame {
+            unsigned int size;        /* Number of bytes captured */
+            unsigned int first_data;    /* Index of the first non-empty 
packet */
+
+            unsigned int nb_packets;    /* Number of packets */
+            unsigned int nb_non_empty_packets;    /* Number of 
non-empty packets */
+            unsigned int nb_invalid_headers;/* Number of packets with 
an invalid header */
+            unsigned int nb_errors;        /* Number of packets with 
the error bit set */
+
+            unsigned int nb_pts;        /* Number of packets with a PTS 
timestamp */
+            unsigned int nb_pts_diffs;    /* Number of PTS differences 
inside a frame */
+            unsigned int last_pts_diff;    /* Index of the last PTS 
difference */
+            bool has_initial_pts;        /* Whether the first non-empty 
packet has a PTS */
+            bool has_early_pts;        /* Whether a PTS is present 
before the first non-empty packet */
+            u32 pts;            /* PTS of the last packet */
+
+            unsigned int nb_scr;        /* Number of packets with a SCR 
timestamp */
+            unsigned int nb_scr_diffs;    /* Number of SCR.STC 
differences inside a frame */
+            u16 scr_sof;            /* SCR.SOF of the last packet */
+            u32 scr_stc;            /* SCR.STC of the last packet */
+        } frame;
+    } stats;
  };

  enum uvc_device_state {
@@ -529,6 +567,7 @@ struct uvc_driver {
  #define UVC_TRACE_SUSPEND    (1 << 8)
  #define UVC_TRACE_STATUS    (1 << 9)
  #define UVC_TRACE_VIDEO        (1 << 10)
+#define UVC_TRACE_TIMESTAMP    (1 << 11)

  #define UVC_WARN_MINMAX        0
  #define UVC_WARN_PROBE_DEF    1
-- 
1.7.4.1


From yann at minet.net  Mon Jun 20 12:32:13 2011
From: yann at minet.net (Yann Sionneau)
Date: Mon, 20 Jun 2011 12:32:13 +0200
Subject: [Linux-uvc-devel] [PATCH 2/2] count scr.sof per frame and pts for
	whole stream
Message-ID: <4DFF21AD.5090209@minet.net>

---
  drivers/media/video/uvc/uvc_video.c |   30 +++++++++++++++++++++---------
  drivers/media/video/uvc/uvcvideo.h  |    7 +++++--
  2 files changed, 26 insertions(+), 11 deletions(-)

diff --git a/drivers/media/video/uvc/uvc_video.c 
b/drivers/media/video/uvc/uvc_video.c
index feb585b..c8c5967 100644
--- a/drivers/media/video/uvc/uvc_video.c
+++ b/drivers/media/video/uvc/uvc_video.c
@@ -436,7 +436,9 @@ static void uvc_video_stats_decode(struct 
uvc_streaming *stream,
      /* Do the SCR.STC and SCR.SOF fields vary through the frame ? */
      if (has_scr && stream->stats.frame.nb_scr) {
          if (stream->stats.frame.scr_stc != scr_stc)
-            stream->stats.frame.nb_scr_diffs++;
+            stream->stats.frame.nb_scr_stc_diffs++;
+        if (stream->stats.frame.scr_sof != scr_sof)
+            stream->stats.frame.nb_scr_sof_diffs++;
      }

      if (has_scr) {
@@ -457,6 +459,13 @@ static void uvc_video_stats_decode(struct 
uvc_streaming *stream,
              stream->stats.stream.max_sof = scr_sof;
      }

+    if (has_pts) {
+        if (stream->stats.frame.nb_pts > 0 && stream->stats.stream.pts > 0)
+            stream->stats.stream.nb_pts_count +=
+            (pts - stream->stats.stream.pts);
+        stream->stats.stream.pts = pts;
+    }
+
      if (stream->stats.frame.size == 0 && len > header_size)
          stream->stats.frame.first_data = stream->stats.frame.nb_packets;

@@ -474,13 +483,15 @@ static void uvc_video_stats_update(struct 
uvc_streaming *stream)
      struct uvc_stats_frame *frame = &stream->stats.frame;

      uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
-          "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
+          "%u/%u/%u pts (%searly %sinitial) %u/%u scr.stc "
+          "%u/%u scr.sof",
            stream->sequence, frame->first_data,
            frame->nb_non_empty_packets, frame->nb_packets,
            frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
            frame->has_early_pts ? "" : "!",
            frame->has_initial_pts ? "" : "!",
-          frame->nb_scr_diffs, frame->nb_scr);
+          frame->nb_scr_stc_diffs, frame->nb_scr,
+          frame->nb_scr_sof_diffs, frame->nb_scr);

      stream->stats.stream.nb_frames++;

@@ -492,8 +503,8 @@ static void uvc_video_stats_update(struct 
uvc_streaming *stream)
          stream->stats.stream.nb_pts_constant++;
      if (frame->nb_scr >= frame->nb_non_empty_packets)
          stream->stats.stream.nb_scr_count_ok++;
-    if (frame->nb_scr_diffs + 1 == frame->nb_scr)
-        stream->stats.stream.nb_scr_diffs_ok++;
+    if (frame->nb_scr_stc_diffs + 1 == frame->nb_scr)
+        stream->stats.stream.nb_scr_stc_diffs_ok++;

      memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
  }
@@ -524,16 +535,17 @@ static void uvc_video_stats_dump(struct 
uvc_streaming *stream)
          scr_sof_freq = 0;

      uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
-          "%u initial pts %u pts ok %u scr count ok %u scr diff ok, "
-          "%u <= sof <= %u, sof freq %u.%03u kHz\n",
+          "%u initial pts %u pts ok %u scr count ok %u scr.stc diff ok"
+          " %u <= sof <= %u, sof freq %u.%03u kHz, pts count = %llu",
            stream->stats.stream.nb_frames,
            stream->stats.stream.nb_pts_early,
            stream->stats.stream.nb_pts_initial,
            stream->stats.stream.nb_pts_constant,
            stream->stats.stream.nb_scr_count_ok,
-          stream->stats.stream.nb_scr_diffs_ok,
+          stream->stats.stream.nb_scr_stc_diffs_ok,
            stream->stats.stream.min_sof, stream->stats.stream.max_sof,
-          scr_sof_freq / 1000, scr_sof_freq % 1000);
+          scr_sof_freq / 1000, scr_sof_freq % 1000,
+          (unsigned long long)stream->stats.stream.nb_pts_count);
  }

  static void uvc_video_stats_init(struct uvc_streaming *stream)
diff --git a/drivers/media/video/uvc/uvcvideo.h 
b/drivers/media/video/uvc/uvcvideo.h
index 40f461c..6c823d7 100644
--- a/drivers/media/video/uvc/uvcvideo.h
+++ b/drivers/media/video/uvc/uvcvideo.h
@@ -471,11 +471,13 @@ struct uvc_streaming {
              unsigned int nb_pts_early;    /* Number of frames with 
early PTS */
              unsigned int nb_pts_initial;    /* Number of frames with 
initial PTS */
              unsigned int nb_scr_count_ok;    /* Number of frames with 
at least one SCR per non empty packet */
-            unsigned int nb_scr_diffs_ok;    /* Number of frames with 
varying SCR.STC */
+            unsigned int nb_scr_stc_diffs_ok;    /* Number of frames 
with varying SCR.STC */
              unsigned int scr_sof_count;    /* STC.SOF counter 
accumulated since stream start */
              unsigned int scr_sof;        /* STC.SOF of the last packet */
              unsigned int min_sof;        /* Minimum STC.SOF value */
              unsigned int max_sof;        /* Maximum STC.SOF value */
+            unsigned int pts;
+            u64 nb_pts_count;
          } stream;

          struct uvc_stats_frame {
@@ -495,7 +497,8 @@ struct uvc_streaming {
              u32 pts;            /* PTS of the last packet */

              unsigned int nb_scr;        /* Number of packets with a 
SCR timestamp */
-            unsigned int nb_scr_diffs;    /* Number of SCR.STC 
differences inside a frame */
+            unsigned int nb_scr_stc_diffs;    /* Number of SCR.STC 
differences inside a frame */
+            unsigned int nb_scr_sof_diffs;    /* Number of SCR.SOF 
differences inside a frame */
              u16 scr_sof;            /* SCR.SOF of the last packet */
              u32 scr_stc;            /* SCR.STC of the last packet */
          } frame;
-- 
1.7.4.1


From michal at physics.ubc.ca  Tue Jun 21 19:33:55 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Tue, 21 Jun 2011 10:33:55 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308385402.14706.15.camel@mini>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
	<1308254885.9729.7.camel@mini>
	<alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
	<alpine.LNX.2.00.1106171433120.26141@tristan>
	<1308385402.14706.15.camel@mini>
Message-ID: <alpine.LNX.2.00.1106202337360.7204@tristan>



On Sat, 18 Jun 2011, Alexey Fisher wrote:

> Am Freitag, den 17.06.2011, 14:33 -0700 schrieb Carl Michal:
>> On Fri, 17 Jun 2011, Carl Michal wrote:
>>
>>>
>>> On Thu, 16 Jun 2011, Alexey Fisher wrote:
>>>
>>>>  Am Donnerstag, den 16.06.2011, 11:31 -0700 schrieb Carl Michal:
>>>>>
>>>>>  On Thu, 16 Jun 2011, Carl Michal wrote:
>>>>>
>>>>>>
>>>>>>  On Wed, 15 Jun 2011, Alexey Fisher wrote:
>>>>>>
>>>>>>>   Am Dienstag, den 14.06.2011, 23:31 -0700 schrieb Carl Michal:
>>>>>>>>   On Tue, 14 Jun 2011, Alexey Fisher wrote:
>>>>>>>>
>>>>>>>>>   Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>>>>>>>>>
>>>>>>>>>>>   Hi,
>>>>>>>>>>>
>>>>>>>>>>>   I think you nailed it.  Every frame looks perfect now.  The
>>>>>>>>>>>   trace
>>>>>>>>>>>   shows a few
>>>>>>>>>>>   of these:
>>>>>>>>>>>
>>>>>>>>>>>   Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>>>>>>>>>
>>>>>>>>>>>   but I don't see corrupt frames any more in either MJPG or
>>>>>>>>>>>   YUYV (at
>>>>>>>>>>>   640x480
>>>>>>>>>>>   anyway) - in MJPG all the frames have the right size.
>>>>>>>>>>>
>>>>>>>>>>>   There is a some weirdness with frame rates depending on the
>>>>>>>>>>>   exposure setting:
>>>>>>>>>>>   1) Exposure, auto gives 4 options: auto priority mode,
>>>>>>>>>>>   manual
>>>>>>>>>>>   mode, shutter
>>>>>>>>>>>   priority mode, and aperture priority mode.  Auto and
>>>>>>>>>>>   shutter don't
>>>>>>>>>>>   seem to be
>>>>>>>>>>>   settable (errors from guvcview when chosen). There is also
>>>>>>>>>>>   an
>>>>>>>>>>>   "Exposure, auto
>>>>>>>>>>>   priority" checkbox.
>>>>>>>>>>>
>>>>>>>>>>>   Frame rates drop dramatically in manual mode (to 10-15fps
>>>>>>>>>>>   from
>>>>>>>>>>>   30).
>>>>>>>>>>>
>>>>>>>>>>>   But I can't really complain at this point - the corrupt
>>>>>>>>>>>   frames are
>>>>>>>>>>>   gone.
>>>>>>>>>>>   Will that quirk be added to the driver (usb id is:
>>>>>>>>>>>   0408:2fb1)?
>>>>>>>>>>>
>>>>>>>>>>>   Thanks,
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>   Hi,
>>>>>>>>>>
>>>>>>>>>>   it seems like I am much better off by fully disabling FID
>>>>>>>>>>   (with your
>>>>>>>>>>   patch) than before.  With the patch, YUYV frames are _always_
>>>>>>>>>>   the
>>>>>>>>>>   right
>>>>>>>>>>   size.  There are still some problems:
>>>>>>>>>>
>>>>>>>>>>   1) corrupt frames - with part of the image missing or the
>>>>>>>>>>   image
>>>>>>>>>>   displaced.
>>>>>>>>>>   Sometimes (but definitely not always) these occur at the same
>>>>>>>>>>   time
>>>>>>>>>>   as a
>>>>>>>>>>   trace message saying the error bit is set.
>>>>>>>>>>
>>>>>>>>>>   2) sometimes the camera just won't start.  when guvcview (or
>>>>>>>>>>   luvcview) is
>>>>>>>>>>   started, no frames come back from the camera.  There is a
>>>>>>>>>>   light next
>>>>>>>>>>   to
>>>>>>>>>>   the camera that comes on to indicate it should be active, but
>>>>>>>>>>   no
>>>>>>>>>>   frames
>>>>>>>>>>   arrive.  There seems to be a fairly strong correlation with
>>>>>>>>>>   using
>>>>>>>>>>   luvcview
>>>>>>>>>>   (which from the traces seems to use some different mechanism
>>>>>>>>>>   to get
>>>>>>>>>>   frames from
>>>>>>>>>>   the driver from guvcview.  guvcview polls, luvcview doesn't).
>>>>>>>>>>   Sometimes
>>>>>>>>>>   just restarting guvcview several times will work and the
>>>>>>>>>>   camera
>>>>>>>>>>   eventually
>>>>>>>>>>   starts.  Sometimes just changing resolution or frame rates
>>>>>>>>>>   succeeds
>>>>>>>>>>   in
>>>>>>>>>>   starting the camera.  I haven't found anything reproducible.
>>>>>>>>>>   I do
>>>>>>>>>>   not
>>>>>>>>>>   think this is related to your patch, as it did happen once
>>>>>>>>>>   before
>>>>>>>>>>   your
>>>>>>>>>>   patch was applied. Unloading and reloading the uvcvideo and
>>>>>>>>>>   ehci_hcd
>>>>>>>>>>   modules does not consistently solve it. guvcview just lists:
>>>>>>>>>>
>>>>>>>>>>     Could not grab image (select timeout): Resource temporarily
>>>>>>>>>>     unavailable
>>>>>>>>>>
>>>>>>>>>>   and the trace shows guvcview polling, but nothing else going
>>>>>>>>>>   on.
>>>>>>>>>>
>>>>>>>>>>   I have tried adding the other quirks to the FID quirk, but
>>>>>>>>>>   haven't
>>>>>>>>>>   seen
>>>>>>>>>>   any improvement with any others.
>>>>>>>>>>
>>>>>>>>>>   Thanks for you help -
>>>>>>>>>>
>>>>>>>>>>   Carl
>>>>>>>>>
>>>>>>>>>   Webcam returns error in the middle of some frame, theoretically
>>>>>>>>>   we
>>>>>>>>>   should drop complete frame. But current uvcvideo just gather
>>>>>>>>>   data and
>>>>>>>>>   assume the cam will resend previous parts to complete the
>>>>>>>>>   frame.
>>>>>>>>>
>>>>>>>>>   Try attached patch additionally to my previous one.
>>>>>>>>>   --
>>>>>>>>>   Regards,
>>>>>>>>>          Alexey
>>>>>>>>>
>>>>>>>>
>>>>>>>>   Hi,
>>>>>>>>
>>>>>>>>   its very hard to say if this helps or not.  There are still
>>>>>>>>   corrupt
>>>>>>>>   frames, and some seem to occur at about the same time as the
>>>>>>>>   error bit
>>>>>>>>   trace messages, but some don't show anything unusual in the
>>>>>>>>   traces that
>>>>>>>>   I've noticed yet.
>>>>>>>>
>>>>>>>>   Since all the uncompressed frames were the right size (even ones
>>>>>>>>   where
>>>>>>>>   the
>>>>>>>>   error bit was set somewhere) those frames are at least complete.
>>>>>>>>
>>>>>>>>   Is there some convenient way to capture just those frames with
>>>>>>>>   the error
>>>>>>>>   bit set?
>>>>>>>>
>>>>>>>>   Thanks,
>>>>>>>>
>>>>>>>>   Carl
>>>>>>>>
>>>>>>>
>>>>>>>   you can try this command:
>>>>>>>   gst-launch-0.10 -v v4l2src ! video/x-raw-yuv,width=320 ! identity !
>>>>>>>   jpegenc ! multifilesink location=tmp-%05d.jpg
>>>>>>>
>>>>>>>   it will produce for each frame one jpeg file. Watch out, it will
>>>>>>>   produce
>>>>>>>   lots of files.
>>>>>>>
>>>>>>>   Attached patch is replacement for the last one. You do not need
>>>>>>>   setting
>>>>>>>   trace option, it will print all we need.
>>>>>>>
>>>>>>>   --
>>>>>>>   Regards,
>>>>>>>          Alexey
>>>>>>>
>>>>>>  Hi,
>>>>>>
>>>>>>  we're learning a little here.  If I set nodrop=1, I get lots of frames
>>>>>>  that
>>>>>>  are too short (gst complains that they are fewer bytes than expected)
>>>>>>  but
>>>>>>  those coincide with the status < 0 test in uvc_video_decode_isoc -
>>>>>>  they do
>>>>>>  not correspond to those with the error bit set.
>>>>>>
>>>>>>  The buf->error=1 in uvc_video_decode_start=1 is unnecessary - harmful
>>>>>>  even,
>>>>>>  since it means dropping frames that are in fact ok.
>>>>>>
>>>>>>  I have captured some bad frames though - one that has the colors badly
>>>>>>  screwed up - where everything is a bright green, and another where the
>>>>>>  image
>>>>>>  appears to be shifted about a quarter of a frame to one side - these
>>>>>>  were
>>>>>>  collected without the nodrop=1 parameter, so they are not caught as
>>>>>>  corrupt
>>>>>>  by any of the current tests. They are delivered as occuring with the
>>>>>>  full
>>>>>>  expected frame size. Are there other flags we should be checking for?
>>>>>>  (hmm,
>>>>>>  like maybe an FID at the wrong time?)
>>>>>>
>>>>>>  Carl
>>>>>>
>>>>>>  _______________________________________________
>>>>>>  Linux-uvc-devel mailing list
>>>>>>  Linux-uvc-devel at lists.berlios.de
>>>>>>  https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>>>>>>
>>>>>
>>>>>  Hi,
>>>>>
>>>>>  this gets weirder.  Dropping frames where the FID bit is toggled
>>>>>  unexpectedly looks like it drops lots of good frames, and not all the
>>>>>  bad
>>>>>  ones. But this is not so easy - capturing frames with gstreamer actually
>>>>>  seems relatively reliable in any case.  The fraction of bad frames
>>>>>  generated seems to depend quite a bit on what program is used - guvcview
>>>>>  and luvcview produce many more than gstreamer.
>>>>>
>>>>>  I put in checks at the begining of uvc_video_decode_start to look at
>>>>>  other
>>>>>  bits in the header, and found that the camera does occasionally return
>>>>>  the
>>>>>  STI bit and RES bit set, and sometimes doesn't set the EOH.  These
>>>>>  usually
>>>>>  happen together, but sometimes just one or two of these bits is
>>>>>  unexpected. Dropping frames with any one of those unexpected *seems* to
>>>>>  help, but there are still occasional bad frames.
>>>>>
>>>>>  If EOH is not set does that mean there is more header somewhere?
>>>>
>>>>  Do you mean EOH or EOF?
>>>>
>>>>  can you please send me one sample of brocken frame, row, not jpeg. Use
>>>>  "luvcview -C" to capture frames. It will probably use 640x480 in YUV by
>>>>  default. YOu will get lots of files. To convert it in jpeg you can use
>>>>  gstreamer:
>>>>
>>>>  for i in *.raw; do gst-launch-0.10 filesrc location=$i ! videoparse
>>>>  format=3 width=640 height=480 ! jpegenc ! filesink location=$i.jpg; done
>>>>
>>>>  --
>>>>  Regards,
>>>>         Alexey
>>>>
>>>>
>>> Hi,
>>>
>>> ok - I've put a few frames here:
>>> http://www.phas.ubc.ca/~michal/Frames/
>>>
>>> These are 1280x720.  With the first patch (to fully ignore FID toggling)
>>> collecting frames with
>>> luvcview -C -f -s 640x480
>>> gives no bad frames in a few minutes of collecting.  But going to 1280x720
>>> gives anywhere between 2-50 bad frames in 2 minutes.  These are without the
>>> nodrop=1 parameter.  If I add nodrop=1 the number of bad frames increases
>>> dramatically.  There are overflow errors and some frames get dropped from the
>>> status<0 test.
>>>
>>> The three frames I saved there were collected without nodrop=1, and with both
>>> the first and third patches - so FID is ignored, and any frame that had an
>>> error bit set is dropped.
>>>
>>> I noticed that when the error bit is set, sometimes EOF is also set - I
>>> wonder if EOF + ERROR means "give up on this frame and go on to the next?" It
>>> looks like the driver currently ignores EOF if ERROR is set.
>>>
>>> It appears to me that EOH (yes EOH) is generally set, but occasionally it is
>>> not. I don't see why STI or RES should ever be set - is there some
>>> possibility that bytes that are not header are being misinterpreted as
>>> header?
>>>
>>> Thanks,
>>>
>>> Carl
>>>
>>> _______________________________________________
>>> Linux-uvc-devel mailing list
>>> Linux-uvc-devel at lists.berlios.de
>>> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel
>>>
>>>
>> This looks deeper -
>>
>> I've been looking at lengths of packets and headers in packets where these
>> unexpected STI, RES, EOH and ERROR bits are set.
>>
>> There are many things that seem inconsistent, but there are some patterns
>> that come up repeatedly.  For example getting a packet with an ERROR bit
>> set that has a length of 2048 and a header length (from data[0]) of 127 or
>> 125 or 110 or some other big number. That packet gets discarded because of
>> the error bit, but then when the frame ends, it is 2048 bytes shorter than
>> it should be.  I've also seen that with a packet length of 1024 and the
>> frame ending 1024 bytes short.
>>
>> It looks like the header has somehow disappeared and the image data is
>> being interpreted as header.  To test this, I put in checks in
>> uvc_video_decode_isoc for any EOH, STI, RES or ERROR - if any are set (or
>> unset for EOH) then to return a header length of 0, so that the entire
>> packet gets used as image data.
>>
>> This by no means solves all my problems, but with that - I do find at
>> least some frames assembled this way are complete and uncorrupted.
>
> Great! das it solve the problem with FID?
>
>> So somehow some headers are disappearing?
>
> According to the documentation "USB Device Class Definition for Video
> Devices", "2.4.3.3 Video and Still Image Payload Headers":
>
> Every Payload Transfer containing video or still-image sample data must
> start with a Payload Header.
>
> In "2.4.3.2.2 Sample Isochronous Transfers", there are some samples. In
> Figure 2-15 shown how payload data send in one packet. Figure 2-13 show
> how payload data send in many packets. In 2-13 the payload header is not
> send on each packet. So what if the data for broken frame was send in
> different packets and for some reason interpreted as different payloads.
> In this case it is some usb driver issue.
>
> But i'm not sure, currently i'm deep in things what i actually do not
> know. Hope Laurent can tell more about it.
>
> -- 
> Regards,
>        Alexey
>

Hi,

I don't feel like I'm really near to solving this. The best I can say is 
that I think sometimes there may be a header missing. With the patch to fully 
disable FID, 640x480 and lower in YUV seem to work reasonably well. 
Nothing in MJPG is acceptable.  I think this is because the driver does a 
much better job of dropping bad frames in YUV with the check for the 
correct frame length.

I'm wondering if the camera is confused about its capabilities? It claims 
to be able to do 768x480, 1024x768, 1280x720, 1280x1024, and 1600x1200 
uncompressed at 30fps (and no other frame rates).  Lower resolutions have 
a reasonable selection of frame rates - eg 640x480 lists 30, 25, 20, 15, 
10 and 5fps. For 1600x1200 the bit rate listed (by lsusb -v) is 921600000, 
but isn't that way more the bus can do?  This computer does have USB3 
ports, but the camera is handled by ehci_hcd.

Could this be part of the problem?

Carl



From bug-track at fisher-privat.net  Tue Jun 21 20:02:28 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 21 Jun 2011 20:02:28 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106202337360.7204@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<1308121311.7917.4.camel@mini>
	<alpine.LNX.2.00.1106152253560.16649@tristan>
	<alpine.LNX.2.00.1106161118080.4758@tristan>
	<1308254885.9729.7.camel@mini>
	<alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
	<alpine.LNX.2.00.1106171433120.26141@tristan>
	<1308385402.14706.15.camel@mini>
	<alpine.LNX.2.00.1106202337360.7204@tristan>
Message-ID: <1308679348.31571.9.camel@mini>

Am Dienstag, den 21.06.2011, 10:33 -0700 schrieb Carl Michal:
> Hi,
> 
> I don't feel like I'm really near to solving this. The best I can say is 
> that I think sometimes there may be a header missing. With the patch to fully 
> disable FID, 640x480 and lower in YUV seem to work reasonably well. 
> Nothing in MJPG is acceptable.  I think this is because the driver does a 
> much better job of dropping bad frames in YUV with the check for the 
> correct frame length.
> 
> I'm wondering if the camera is confused about its capabilities? It claims 
> to be able to do 768x480, 1024x768, 1280x720, 1280x1024, and 1600x1200 
> uncompressed at 30fps (and no other frame rates).  Lower resolutions have 
> a reasonable selection of frame rates - eg 640x480 lists 30, 25, 20, 15, 
> 10 and 5fps. For 1600x1200 the bit rate listed (by lsusb -v) is 921600000, 
> but isn't that way more the bus can do?  This computer does have USB3 
> ports, but the camera is handled by ehci_hcd.
> 
> Could this be part of the problem?

this cam do many things in wrong/other way.

the question is, do we can work around the bugs it has?
There is a windows driver on dell website for this webcam, it use ms
uvcvideo driver but it use also some driver wich looks like proxy
between uvcvideo and the cam.

Can you confirm that it works well without driver on videos 7/Vista
(with native uvcvideo), if not it will be interesting to know what doing
this extra driver: filters bad frames or filters the settings?

-- 
Regards,
        Alexey



From kirr at mns.spb.ru  Tue Jun 21 20:07:43 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Tue, 21 Jun 2011 22:07:43 +0400
Subject: [Linux-uvc-devel] [PATCH] uvcvideo: Add FIX_BANDWIDTH quirk to HP
	Webcam found on HP Mini 5103 netbook
Message-ID: <1308679663-11431-1-git-send-email-kirr@mns.spb.ru>

The camera there identifeis itself as being manufactured by Cheng Uei
Precision Industry Co., Ltd (Foxlink), and product is titled as "HP
Webcam [2 MP Fixed]".

I was trying to get 2 USB video capture devices to work simultaneously,
and noticed that the above mentioned webcam always requires packet size
= 3072 bytes per micro frame (~= 23.4 MB/s isoc bandwidth), which is far
more than enough to get standard NTSC 640x480x2x30 = ~17.6 MB/s isoc
bandwidth.

As there are alt interfaces with smaller MxPS

    T:  Bus=01 Lev=01 Prnt=01 Port=03 Cnt=01 Dev#=  2 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=05c8 ProdID=0403 Rev= 1.06
    S:  Manufacturer=Foxlink
    S:  Product=HP Webcam [2 MP Fixed]
    S:  SerialNumber=200909240102
    C:* #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=0e(video) Sub=03 Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=0e(video) Sub=01 Prot=00 Driver=uvcvideo
    E:  Ad=83(I) Atr=03(Int.) MxPS=  16 Ivl=4ms
    I:* If#= 1 Alt= 0 #EPs= 0 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    I:  If#= 1 Alt= 1 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS= 128 Ivl=125us
    I:  If#= 1 Alt= 2 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS= 512 Ivl=125us
    I:  If#= 1 Alt= 3 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS=1024 Ivl=125us
    I:  If#= 1 Alt= 4 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS=1536 Ivl=125us
    I:  If#= 1 Alt= 5 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS=2048 Ivl=125us
    I:  If#= 1 Alt= 6 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS=2688 Ivl=125us
    I:  If#= 1 Alt= 7 #EPs= 1 Cls=0e(video) Sub=02 Prot=00 Driver=uvcvideo
    E:  Ad=81(I) Atr=05(Isoc) MxPS=3072 Ivl=125us

UVC_QUIRK_FIX_BANDWIDTH helps here and NTSC video can be served with
MxPS=2688 i.e. 20.5 MB/s isoc bandwidth.

In terms of microframe time allocation, before the quirk NTSC video
required 60 usecs / microframe and 53 usecs / microframe after.


P.S. Now with tweaked ehci-hcd to allow up to 90% isoc bandwith (instead of
allowed for high speed 80%) I can capture two video sources -- PAL 720x576
YUV422 @25fps + NTSC 640x480 YUV422 @30fps simultaneously. Hooray!

Signed-off-by: Kirill Smelkov <kirr at mns.spb.ru>
---
 drivers/media/video/uvc/uvc_driver.c |    9 +++++++++
 1 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/media/video/uvc/uvc_driver.c b/drivers/media/video/uvc/uvc_driver.c
index b6eae48..f633700 100644
--- a/drivers/media/video/uvc/uvc_driver.c
+++ b/drivers/media/video/uvc/uvc_driver.c
@@ -2130,6 +2130,15 @@ static struct usb_device_id uvc_ids[] = {
 	  .bInterfaceProtocol	= 0,
 	  .driver_info 		= UVC_QUIRK_PROBE_MINMAX
 				| UVC_QUIRK_BUILTIN_ISIGHT },
+	/* Foxlink ("HP Webcam" on HP Mini 5103) */
+	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
+				| USB_DEVICE_ID_MATCH_INT_INFO,
+	  .idVendor		= 0x05c8,
+	  .idProduct		= 0x0403,
+	  .bInterfaceClass	= USB_CLASS_VIDEO,
+	  .bInterfaceSubClass	= 1,
+	  .bInterfaceProtocol	= 0,
+	  .driver_info		= UVC_QUIRK_FIX_BANDWIDTH },
 	/* Genesys Logic USB 2.0 PC Camera */
 	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
 				| USB_DEVICE_ID_MATCH_INT_INFO,
-- 
1.7.6.rc1



From bug-track at fisher-privat.net  Tue Jun 21 20:34:36 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Tue, 21 Jun 2011 20:34:36 +0200
Subject: [Linux-uvc-devel] [PATCH 1/2] adding statistics about timestamps
In-Reply-To: <4DFF2183.5000200@minet.net>
References: <4DFF2183.5000200@minet.net>
Message-ID: <1308681277.2672.1.camel@mini>

hmmm... did you copy-pasted this patch?
it seems to be broken,
some lines are wrapped.

Am Montag, den 20.06.2011, 12:31 +0200 schrieb Yann Sionneau:
> ---
>   drivers/media/video/uvc/uvc_video.c |  196 
> ++++++++++++++++++++++++++++++++++-
>   drivers/media/video/uvc/uvcvideo.h  |   39 +++++++
>   2 files changed, 234 insertions(+), 1 deletions(-)
> 
> diff --git a/drivers/media/video/uvc/uvc_video.c 
> b/drivers/media/video/uvc/uvc_video.c
> index fc766b9..feb585b 100644
> --- a/drivers/media/video/uvc/uvc_video.c
> +++ b/drivers/media/video/uvc/uvc_video.c
> @@ -358,6 +358,191 @@ int uvc_commit_video(struct uvc_streaming *stream,
>   }
> 
>   /* 
> ------------------------------------------------------------------------
> + * Timestamp statistics
> + */
> +
> +static void uvc_video_stats_decode(struct uvc_streaming *stream,
> +        const __u8 *data, int len)
> +{
> +    unsigned int header_size;
> +    bool has_pts = false;
> +    bool has_scr = false;
> +    u16 scr_sof;
> +    u32 scr_stc;
> +    u32 pts;
> +
> +    if (stream->stats.stream.nb_frames == 0 &&
> +        stream->stats.frame.nb_packets == 0)
> +        ktime_get_ts(&stream->stats.stream.start_ts);
> +
> +    switch (data[1] & (UVC_STREAM_PTS | UVC_STREAM_SCR)) {
> +    case UVC_STREAM_PTS | UVC_STREAM_SCR:
> +        header_size = 12;
> +        has_pts = true;
> +        has_scr = true;
> +        break;
> +    case UVC_STREAM_PTS:
> +        header_size = 6;
> +        has_pts = true;
> +        break;
> +    case UVC_STREAM_SCR:
> +        header_size = 8;
> +        has_scr = true;
> +        break;
> +    default:
> +        header_size = 2;
> +        break;
> +    }
> +
> +    /* Check for invalid headers. */
> +    if (len < header_size) {
> +        stream->stats.frame.nb_invalid_headers++;
> +        return;
> +    }
> +
> +    /* Extract the timestamps. */
> +    if (has_pts)
> +        pts = get_unaligned_le32(&data[2]);
> +
> +    if (has_scr) {
> +        scr_stc = get_unaligned_le32(&data[header_size - 6]);
> +        scr_sof = get_unaligned_le16(&data[header_size - 2]);
> +    }
> +
> +    /* Is PTS constant through the whole frame ? */
> +    if (has_pts && stream->stats.frame.nb_pts) {
> +        if (stream->stats.frame.pts != pts) {
> +            stream->stats.frame.nb_pts_diffs++;
> +            stream->stats.frame.last_pts_diff =
> +                stream->stats.frame.nb_packets;
> +        }
> +    }
> +
> +    if (has_pts) {
> +        stream->stats.frame.nb_pts++;
> +        stream->stats.frame.pts = pts;
> +    }
> +
> +    /* Do all frames have a PTS in their first non-empty packet, or before
> +     * their first empty packet ?
> +     */
> +    if (stream->stats.frame.size == 0) {
> +        if (len > header_size)
> +            stream->stats.frame.has_initial_pts = has_pts;
> +        if (len == header_size && has_pts)
> +            stream->stats.frame.has_early_pts = true;
> +    }
> +
> +    /* Do the SCR.STC and SCR.SOF fields vary through the frame ? */
> +    if (has_scr && stream->stats.frame.nb_scr) {
> +        if (stream->stats.frame.scr_stc != scr_stc)
> +            stream->stats.frame.nb_scr_diffs++;
> +    }
> +
> +    if (has_scr) {
> +        /* Expand the SOF counter to 32 bits and store its value. */
> +        if (stream->stats.stream.nb_frames > 0 ||
> +            stream->stats.frame.nb_scr > 0)
> +            stream->stats.stream.scr_sof_count +=
> +                (scr_sof - stream->stats.stream.scr_sof) % 2048;
> +        stream->stats.stream.scr_sof = scr_sof;
> +
> +        stream->stats.frame.nb_scr++;
> +        stream->stats.frame.scr_stc = scr_stc;
> +        stream->stats.frame.scr_sof = scr_sof;
> +
> +        if (scr_sof < stream->stats.stream.min_sof)
> +            stream->stats.stream.min_sof = scr_sof;
> +        if (scr_sof > stream->stats.stream.max_sof)
> +            stream->stats.stream.max_sof = scr_sof;
> +    }
> +
> +    if (stream->stats.frame.size == 0 && len > header_size)
> +        stream->stats.frame.first_data = stream->stats.frame.nb_packets;
> +
> +    stream->stats.frame.size += len - header_size;
> +    stream->stats.frame.nb_packets++;
> +    if (len > header_size)
> +        stream->stats.frame.nb_non_empty_packets++;
> +
> +    if (data[1] & UVC_STREAM_ERR)
> +        stream->stats.frame.nb_errors++;
> +}
> +
> +static void uvc_video_stats_update(struct uvc_streaming *stream)
> +{
> +    struct uvc_stats_frame *frame = &stream->stats.frame;
> +
> +    uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
> +          "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
> +          stream->sequence, frame->first_data,
> +          frame->nb_non_empty_packets, frame->nb_packets,
> +          frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
> +          frame->has_early_pts ? "" : "!",
> +          frame->has_initial_pts ? "" : "!",
> +          frame->nb_scr_diffs, frame->nb_scr);
> +
> +    stream->stats.stream.nb_frames++;
> +
> +    if (frame->has_early_pts)
> +        stream->stats.stream.nb_pts_early++;
> +    if (frame->has_initial_pts)
> +        stream->stats.stream.nb_pts_initial++;
> +    if (frame->last_pts_diff <= frame->first_data)
> +        stream->stats.stream.nb_pts_constant++;
> +    if (frame->nb_scr >= frame->nb_non_empty_packets)
> +        stream->stats.stream.nb_scr_count_ok++;
> +    if (frame->nb_scr_diffs + 1 == frame->nb_scr)
> +        stream->stats.stream.nb_scr_diffs_ok++;
> +
> +    memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
> +}
> +
> +static void uvc_video_stats_dump(struct uvc_streaming *stream)
> +{
> +    unsigned int scr_sof_freq;
> +    unsigned int duration;
> +    struct timespec ts;
> +
> +    ktime_get_ts(&ts);
> +
> +    ts.tv_sec -= stream->stats.stream.start_ts.tv_sec;
> +    ts.tv_nsec -= stream->stats.stream.start_ts.tv_nsec;
> +    if (ts.tv_nsec < 0) {
> +        ts.tv_sec--;
> +        ts.tv_nsec += 1000000000;
> +    }
> +
> +    /* Compute the SCR.SOF frequency estimate. At the nominal 1kHz SOF
> +     * frequency this will not overflow before more than 1h.
> +     */
> +    duration = ts.tv_sec * 1000 + ts.tv_nsec / 1000000;
> +    if (duration != 0)
> +        scr_sof_freq = stream->stats.stream.scr_sof_count * 1000
> +                 / duration;
> +    else
> +        scr_sof_freq = 0;
> +
> +    uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
> +          "%u initial pts %u pts ok %u scr count ok %u scr diff ok, "
> +          "%u <= sof <= %u, sof freq %u.%03u kHz\n",
> +          stream->stats.stream.nb_frames,
> +          stream->stats.stream.nb_pts_early,
> +          stream->stats.stream.nb_pts_initial,
> +          stream->stats.stream.nb_pts_constant,
> +          stream->stats.stream.nb_scr_count_ok,
> +          stream->stats.stream.nb_scr_diffs_ok,
> +          stream->stats.stream.min_sof, stream->stats.stream.max_sof,
> +          scr_sof_freq / 1000, scr_sof_freq % 1000);
> +}
> +
> +static void uvc_video_stats_init(struct uvc_streaming *stream)
> +{
> +    memset(&stream->stats, 0, sizeof(stream->stats));
> +    stream->stats.stream.min_sof = 2048;
> +}
> +
> +/* ------------------------------------------------------------------------
>    * Video codecs
>    */
> 
> @@ -431,8 +616,13 @@ static int uvc_video_decode_start(struct 
> uvc_streaming *stream,
>       /* Increase the sequence number regardless of any buffer states, so
>        * that discontinuous sequence numbers always indicate lost frames.
>        */
> -    if (stream->last_fid != fid)
> +    if (stream->last_fid != fid) {
>           stream->sequence++;
> +        if (stream->sequence)
> +            uvc_video_stats_update(stream);
> +    }
> +
> +    uvc_video_stats_decode(stream, data, len);
> 
>       /* Store the payload FID bit and return immediately when the buffer is
>        * NULL.
> @@ -861,6 +1051,8 @@ static void uvc_uninit_video(struct uvc_streaming 
> *stream, int free_buffers)
>       struct urb *urb;
>       unsigned int i;
> 
> +    uvc_video_stats_dump(stream);
> +
>       for (i = 0; i < UVC_URBS; ++i) {
>           urb = stream->urb[i];
>           if (urb == NULL)
> @@ -994,6 +1186,8 @@ static int uvc_init_video(struct uvc_streaming 
> *stream, gfp_t gfp_flags)
>       stream->bulk.skip_payload = 0;
>       stream->bulk.payload_size = 0;
> 
> +    uvc_video_stats_init(stream);
> +
>       if (intf->num_altsetting > 1) {
>           struct usb_host_endpoint *best_ep = NULL;
>           unsigned int best_psize = 3 * 1024;
> diff --git a/drivers/media/video/uvc/uvcvideo.h 
> b/drivers/media/video/uvc/uvcvideo.h
> index 45f01e7..40f461c 100644
> --- a/drivers/media/video/uvc/uvcvideo.h
> +++ b/drivers/media/video/uvc/uvcvideo.h
> @@ -462,6 +462,44 @@ struct uvc_streaming {
> 
>       __u32 sequence;
>       __u8 last_fid;
> +
> +    struct {
> +        struct {
> +            struct timespec start_ts;    /* Stream start timestamp */
> +            unsigned int nb_frames;        /* Number of frames */
> +            unsigned int nb_pts_constant;    /* Number of frames with 
> constant PTS */
> +            unsigned int nb_pts_early;    /* Number of frames with 
> early PTS */
> +            unsigned int nb_pts_initial;    /* Number of frames with 
> initial PTS */
> +            unsigned int nb_scr_count_ok;    /* Number of frames with 
> at least one SCR per non empty packet */
> +            unsigned int nb_scr_diffs_ok;    /* Number of frames with 
> varying SCR.STC */
> +            unsigned int scr_sof_count;    /* STC.SOF counter 
> accumulated since stream start */
> +            unsigned int scr_sof;        /* STC.SOF of the last packet */
> +            unsigned int min_sof;        /* Minimum STC.SOF value */
> +            unsigned int max_sof;        /* Maximum STC.SOF value */
> +        } stream;
> +
> +        struct uvc_stats_frame {
> +            unsigned int size;        /* Number of bytes captured */
> +            unsigned int first_data;    /* Index of the first non-empty 
> packet */
> +
> +            unsigned int nb_packets;    /* Number of packets */
> +            unsigned int nb_non_empty_packets;    /* Number of 
> non-empty packets */
> +            unsigned int nb_invalid_headers;/* Number of packets with 
> an invalid header */
> +            unsigned int nb_errors;        /* Number of packets with 
> the error bit set */
> +
> +            unsigned int nb_pts;        /* Number of packets with a PTS 
> timestamp */
> +            unsigned int nb_pts_diffs;    /* Number of PTS differences 
> inside a frame */
> +            unsigned int last_pts_diff;    /* Index of the last PTS 
> difference */
> +            bool has_initial_pts;        /* Whether the first non-empty 
> packet has a PTS */
> +            bool has_early_pts;        /* Whether a PTS is present 
> before the first non-empty packet */
> +            u32 pts;            /* PTS of the last packet */
> +
> +            unsigned int nb_scr;        /* Number of packets with a SCR 
> timestamp */
> +            unsigned int nb_scr_diffs;    /* Number of SCR.STC 
> differences inside a frame */
> +            u16 scr_sof;            /* SCR.SOF of the last packet */
> +            u32 scr_stc;            /* SCR.STC of the last packet */
> +        } frame;
> +    } stats;
>   };
> 
>   enum uvc_device_state {
> @@ -529,6 +567,7 @@ struct uvc_driver {
>   #define UVC_TRACE_SUSPEND    (1 << 8)
>   #define UVC_TRACE_STATUS    (1 << 9)
>   #define UVC_TRACE_VIDEO        (1 << 10)
> +#define UVC_TRACE_TIMESTAMP    (1 << 11)
> 
>   #define UVC_WARN_MINMAX        0
>   #define UVC_WARN_PROBE_DEF    1

-- 
Regards,
        Alexey



From laurent.pinchart at ideasonboard.com  Wed Jun 22 00:55:36 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 00:55:36 +0200
Subject: [Linux-uvc-devel] [PATCH] [media] uvcvideo: Fix control mapping
	for devices with multiple chains
In-Reply-To: <1306880661.2916.39.camel@svmlwks101>
References: <1306880661.2916.39.camel@svmlwks101>
Message-ID: <201106220055.37215.laurent.pinchart@ideasonboard.com>

Hi Stephan,

On Wednesday 01 June 2011 00:24:21 Stephan Lachowsky wrote:
> The search for matching extension units fails to take account of the
> current chain.  In the case where you have two distinct video chains,
> both containing an XU with the same GUID but different unit ids, you
> will be unable to perform a mapping on the second chain because entity
> on the first chain will always be found first
> 
> Fix this by only searching the current chain when performing a control
> mapping.  This is analogous to the search used by uvc_find_control(),
> and is the correct behaviour.

Thanks for the patch. I agree with your analysis, but I'm concerned about 
devices that might have extension units not connected to any chain. They would 
become unaccessible.

Devices for which extension unit control mappings have been published have all 
their XUs connected to a chain, so I'm OK with the patch. I will add a TODO 
comment to remind me of the issue, and I'll solve the problem later if it ever 
occurs.

> Signed-off-by: Stephan Lachowsky <stephan.lachowsky at maxim-ic.com>
> ---
>  drivers/media/video/uvc/uvc_ctrl.c |    4 ++--
>  1 files changed, 2 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/media/video/uvc/uvc_ctrl.c
> b/drivers/media/video/uvc/uvc_ctrl.c index 59f8a9a..a77648f 100644
> --- a/drivers/media/video/uvc/uvc_ctrl.c
> +++ b/drivers/media/video/uvc/uvc_ctrl.c
> @@ -1565,8 +1565,8 @@ int uvc_ctrl_add_mapping(struct uvc_video_chain
> *chain, return -EINVAL;
>  	}
> 
> -	/* Search for the matching (GUID/CS) control in the given device */
> -	list_for_each_entry(entity, &dev->entities, list) {
> +	/* Search for the matching (GUID/CS) control on the current chain */
> +	list_for_each_entry(entity, &chain->entities, chain) {
>  		unsigned int i;
> 
>  		if (UVC_ENTITY_TYPE(entity) != UVC_VC_EXTENSION_UNIT ||

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:01:56 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:01:56 +0200
Subject: [Linux-uvc-devel] [PATCH] [media] uvcvideo: Fix control mapping
	for devices with multiple chains
In-Reply-To: <201106220055.37215.laurent.pinchart@ideasonboard.com>
References: <1306880661.2916.39.camel@svmlwks101>
	<201106220055.37215.laurent.pinchart@ideasonboard.com>
Message-ID: <201106220101.56630.laurent.pinchart@ideasonboard.com>

Hi Stephan,

On Wednesday 22 June 2011 00:55:36 Laurent Pinchart wrote:
> On Wednesday 01 June 2011 00:24:21 Stephan Lachowsky wrote:
> > The search for matching extension units fails to take account of the
> > current chain.  In the case where you have two distinct video chains,
> > both containing an XU with the same GUID but different unit ids, you
> > will be unable to perform a mapping on the second chain because entity
> > on the first chain will always be found first
> > 
> > Fix this by only searching the current chain when performing a control
> > mapping.  This is analogous to the search used by uvc_find_control(),
> > and is the correct behaviour.
> 
> Thanks for the patch. I agree with your analysis, but I'm concerned about
> devices that might have extension units not connected to any chain. They
> would become unaccessible.
> 
> Devices for which extension unit control mappings have been published have
> all their XUs connected to a chain, so I'm OK with the patch. I will add a
> TODO comment to remind me of the issue, and I'll solve the problem later
> if it ever occurs.

Sorry, I spoke too fast. uvc_find_control() has the same issue, so there's no 
need to add a comment specific to uvc_ctrl_add_mapping(). I'll apply your 
patch as-is.

> > Signed-off-by: Stephan Lachowsky <stephan.lachowsky at maxim-ic.com>
> > ---
> > 
> >  drivers/media/video/uvc/uvc_ctrl.c |    4 ++--
> >  1 files changed, 2 insertions(+), 2 deletions(-)
> > 
> > diff --git a/drivers/media/video/uvc/uvc_ctrl.c
> > b/drivers/media/video/uvc/uvc_ctrl.c index 59f8a9a..a77648f 100644
> > --- a/drivers/media/video/uvc/uvc_ctrl.c
> > +++ b/drivers/media/video/uvc/uvc_ctrl.c
> > @@ -1565,8 +1565,8 @@ int uvc_ctrl_add_mapping(struct uvc_video_chain
> > *chain, return -EINVAL;
> > 
> >  	}
> > 
> > -	/* Search for the matching (GUID/CS) control in the given device */
> > -	list_for_each_entry(entity, &dev->entities, list) {
> > +	/* Search for the matching (GUID/CS) control on the current chain */
> > +	list_for_each_entry(entity, &chain->entities, chain) {
> > 
> >  		unsigned int i;
> >  		
> >  		if (UVC_ENTITY_TYPE(entity) != UVC_VC_EXTENSION_UNIT ||

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:06:32 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:06:32 +0200
Subject: [Linux-uvc-devel] VAIO Webcam - 04f2:b26d Chicony Electronics
	Co.
In-Reply-To: <BANLkTimFAZ9hXR4v+=iCJEr7qwwFpooJLQ@mail.gmail.com>
References: <BANLkTimFAZ9hXR4v+=iCJEr7qwwFpooJLQ@mail.gmail.com>
Message-ID: <201106220106.33179.laurent.pinchart@ideasonboard.com>

Hi Giacomo,

On Thursday 02 June 2011 10:20:12 Giacomo wrote:
> Dear Linux UVC development team,
> 
> I've just bought a SONY VAIO VPCSB laptop, which includes the
> following built-in webcam
> 
> 04f2:b26d Chicony Electronics Co., Ltd
> 
> Unfortunately, if I try to switch on the webcam, the laptop freezes

Ouch.

> (btw, I'm using Debian Squeeze, kernel 2.6.38-2-686).
> Is such a webcam already supported? Or may I ask to enlist it for
> the development?

First of all, could you please send me the output of

lsusb -v -d 04f2:b26d

running as root if possible ? 

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:08:52 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:08:52 +0200
Subject: [Linux-uvc-devel] UVC device not listed on the Linux UVC
	project homepage
In-Reply-To: <BLU0-SMTP25622E7291D1C818A6C33983610@phx.gbl>
References: <BLU0-SMTP25622E7291D1C818A6C33983610@phx.gbl>
Message-ID: <201106220108.52849.laurent.pinchart@ideasonboard.com>

Hi Kyle,

On Sunday 05 June 2011 21:17:53 Kyle Towns wrote:
> Heya.
> 
> I just want to report 1e4e:0102 USB 2.0 camera by Etron Technologies
> does appear to work after updating my distribution with the media built
> git repository. It didn't work at all before that. I'm using Linux Mint 10.

Thank you for the report.

Could you please send me the output of

lsusb -v -d 1e4e:0102

running as root if possible ?

Could you please also give me the commercial device name and brand ?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:24:39 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:24:39 +0200
Subject: [Linux-uvc-devel] Microsoft Lifecam HD 3000 (exposure + led
	issues)
In-Reply-To: <BANLkTikLfSn39PKZwpN7xzBgbqUNLs6UuA@mail.gmail.com>
References: <BANLkTi=+7gHg1ZSL8HpqE2_f7VviTsgfTQ@mail.gmail.com>
	<201105312335.29526.laurent.pinchart@ideasonboard.com>
	<BANLkTikLfSn39PKZwpN7xzBgbqUNLs6UuA@mail.gmail.com>
Message-ID: <201106220124.39249.laurent.pinchart@ideasonboard.com>

Hi Marco,

On Sunday 05 June 2011 12:42:43 Marco Gulino wrote:
> > Could you please send me the output of lsusb -v (running as root if
> > possible) for your webcam ?
> 
> Sure... you can find it in the attachment.

Thank you. I've updated the supported devices list.

> I also found out (reading another thread in this list:
> https://lists.berlios.de/pipermail/linux-uvc-devel/2011-February/006321.htm
> l ) that the camera does accept some discrete values for exposure control,
> i guess the sensor is exactly the same as Lifecam HD 5000 then.
> I patched v4l2ucp to display a combo in place of a slider to easly setup
> these values, so at least this problem is partially fixed (still annoying,
> but it's usable at least).

OK, problem solved :-)

> > UVC doesn't provide a standard control for this. Some cameras support
> > controlling the LED manually, and implements that using UVC extension
> > units.
> > Without manufacturer documentation it might be difficult to find out how
> > to control the LED, but trial/error is possible (be warned that this
> > could in theory brick the camera).
> 
> I see... it seems kinda hard then...
> Anyway worth trying, it would really help cooling down the camera... Any
> hints on what to try?

According to the USB descriptors, your camera has one extension unit with 8 
controls.

      VideoControl Interface Descriptor:
        bLength                27
        bDescriptorType        36
        bDescriptorSubtype      6 (EXTENSION_UNIT)
        bUnitID                 5
        guidExtensionCode         {29a787c9-d359-6945-8467-ff0849fc19e8}
        bNumControl            16
        bNrPins                 1
        baSourceID( 0)          4
        bControlSize            2
        bmControls( 0)       0xff
        bmControls( 1)       0xff
        iExtension              0 

Using the UVC extension unit API (made public in the 3.0 kernel and documented 
in Documentation/video4linux/uvcvideo.txt) you can query those controls and 
modify them. Have a look at the UVCIOC_CTRL_QUERY ioctl documentation. I still 
need to publish a tool to automate the process.

Be warned that poking XU controls directly might in theory break your device, 
even though chances are low. Chances are also unfortunately low that randomly 
poking controls will turn the LED on or off (but you never know). Can you 
control it manually in Windows ?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:28:41 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:28:41 +0200
Subject: [Linux-uvc-devel] Request to help me in bringing up UVC driver
	for linux-2.6.18 version
In-Reply-To: <BANLkTinVPVzAbMeEVqOAnUgLavGZKYt+LQ@mail.gmail.com>
References: <BANLkTinVPVzAbMeEVqOAnUgLavGZKYt+LQ@mail.gmail.com>
Message-ID: <201106220128.41478.laurent.pinchart@ideasonboard.com>

Hi,

On Tuesday 07 June 2011 07:12:29 purushotham reddy wrote:
> Hello Sir/madam,
> 
> I would like to build UVC driver in old linux kernel-2.6.18 in which there
> is no UVC driver in it. I would like to know is there any patch which can
> be applied to my kernel.
> 
> Also, please let me know the procedure to build this driver to my kernel.

You can try to compile the whole V4L subsystem using the media_build git tree 
from git.linuxtv.org. Instructions are available at 
http://www.linuxtv.org/wiki/index.php/How_to_Obtain,_Build_and_Install_V4L-
DVB_Device_Drivers.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:29:52 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:29:52 +0200
Subject: [Linux-uvc-devel] uvcvideo: Failed to submit URB 0 (-28) error
	for VGA-YUV capture
In-Reply-To: <BANLkTimqRqFYpxFDH_XQjrQLhoaan2ngiQ@mail.gmail.com>
References: <BANLkTimqRqFYpxFDH_XQjrQLhoaan2ngiQ@mail.gmail.com>
Message-ID: <201106220129.52404.laurent.pinchart@ideasonboard.com>

Hi,

On Wednesday 08 June 2011 10:07:20 Chandrashekhar Lavania wrote:
> Hi,
> 
> I am trying to capture VGA frames in YUYV format from Logitech QuickCam
> E3500.
> 
> But When I try to do this , I get the following error:
> 
> uvcvideo: Failed to submit URB 0 (-28).
> 
> Also, I put printk in the uvc_init_video_isoc() function of uvc_video.c to
> get psize and size values in the following manner:
> 
> psize = le16_to_cpu(ep->desc.wMaxPacketSize);
> psize = (psize & 0x07ff) * (1 + ((psize >> 11) & 3));
> size = stream->ctrl.dwMaxVideoFrameSize;
> 
> printk(KERN_ALERT "SIZE = %d\n",size);
> printk(KERN_ALERT "PSIZE = %d\n",psize);
> 
> When I try to capture VGA - YUV I get the following alerts:
> 
> SIZE = 614400
> 
> PSIZE = 1984
> 
> This is for single frame capture.
> 
> 
> I tried to do the same thing for QVGA -YUV, and then I was able to capture
> the image. I got the following alerts:
> 
> 
> SIZE = 153600
> 
> PSIZE = 512
> 
> 
> What could be causing this...

Do you have other connected USB devices that could use the USB bandwidth ?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 01:50:02 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 01:50:02 +0200
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <1307950475.3300.67.camel@zwerg>
References: <4DF2C4C1.30005@iinet.net.au> <4DF5ABC1.1090808@iinet.net.au>
	<1307950475.3300.67.camel@zwerg>
Message-ID: <201106220150.02629.laurent.pinchart@ideasonboard.com>

On Monday 13 June 2011 09:34:35 Alexey Fisher wrote:
> On Mo, 2011-06-13 at 14:18 +0800, hagar wrote:
> > On 06/12/2011 02:11 PM, Alexey Fisher wrote:
> > > On So, 2011-06-12 at 13:51 +0800, hagar wrote:

[snip]

> > > Bad news. uvcvideo thins your cam has only 640x480, because your cam
> > > tells it has only 640x480.
> > > 
> > > See this part of lsusb info:
> > >> Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
> > > 
> > >> Device Descriptor:
> > > ------------8<---------------------------------
> > > 
> > >>         VideoStreaming Interface Descriptor:
> > >>           bLength                            26
> > >>           bDescriptorType                    36
> > >>           bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
> > >>           bEndpointAddress                    0
> > >>           bNumImageSizePatterns               5
> > >>           wWidth( 0)                        640
> > >>           wHeight( 0)                       480
> > >>           wWidth( 1)                        352
> > >>           wHeight( 1)                       288
> > >>           wWidth( 2)                        320
> > >>           wHeight( 2)                       240
> > >>           wWidth( 3)                        176
> > >>           wHeight( 3)                       144
> > >>           wWidth( 4)                        160
> > >>           wHeight( 4)                       120
> > >>           bNumCompressionPatterns             5
> > 
> > According to The WinXP driver ini file the camera is capable of - (
> > Would all the hex numbers be of use ? )
> > 
> > UVC FUNC_MODE HIGH SPEED RGB24
> > 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
> > 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> > 
> > UVC FUNC_MODE FULL SPEED RGB24
> > 640x480, 160x120, 176x144, 320x240, 352x288
> > 
> > UVC FUNC_MODE YUY2 HIGH SPEED VIDEO
> > 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
> > 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> > 
> > UVC FUNC_MODE STILL PIN HIGH SPEED RGB24
> > 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
> > 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
> > 
> > UVC FUNC_MODE STILL PIN FULL SPEED RGB24
> > 640x480, 160x120, 176x144, 320x240, 352x288
> 
> Can you please check the driver (some.sys file) it use under win xp.
> 
> The idea of UVC (usb video class) is zero config functionality. You plug
> some device and it just work. It is only possible if manufacture write
> all needed settings in the eeprom of the device (webcam,...).
> If you plug your device in MacOSX or Windows Vista/7, in any UVC ready
> OS, you will get same result - max resolution 640x480.
> If you need to install some thing to get more, then it is not UVC
> device, at least not 100%.
> 
> Only good thing you can do for you and all others is to send this device
> back. Manufactures should learn to read and use uvc specification.

This isn't the first time I hear about such a problem. I wonder how the 
Windows UVC driver handles that. usbsnoop might shed some light on this.

Hagar, the device isn't listed in the supported devices list. I will add it. 
Do you have a link to a website describing the product ?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 02:04:33 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 02:04:33 +0200
Subject: [Linux-uvc-devel] Webcam works intermittently - [18e3:9512]
	built-in in Hannspree SN12E2 netbook
In-Reply-To: <4DF649AC.6000003@yahoo.co.uk>
References: <4DF649AC.6000003@yahoo.co.uk>
Message-ID: <201106220204.34449.laurent.pinchart@ideasonboard.com>

Hi Thomas,

On Monday 13 June 2011 19:32:28 Tomas Conway wrote:
> Machine: Hannspree SN12E2
> Webcam/mic ID: [18e3:9512], Fitipower Integrated Technology Inc
> 
> Attachments
> ***********
> 
> lsusb - Output of 'lsusb -v -d 18e3:9512'
> 
> ************
> 
> Sometimes the webcam works on bootup (or a few mintues after), sometimes
> it works immediately after I run lsusb, mostly it doesn't work at all.
> Sometimes the laptop will be on for hours before the webcam spontaneouly
> works. Usually within a couple of hours of working it will spontaneously
> stop working.
> 
> My fear is that there is hardware problem - is it possible to determine
> whether or not this is the case?
> 
> 
> Log example:
> [10415.476069] usb 2-4: new high speed USB device using ehci_hcd and
> address 7
> [10415.596080] usb 2-4: device descriptor read/64, error 4
> [10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10415.988171] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
> [10421.150795] usb 2-4: USB disconnect, address 7

This indeed looks like a faulty device. Webcams are not supposed to disconnect 
spontaneously like that :-) This could be caused by faulty hardware (including 
cables), or by webcam firmware crashes, possibly due to timing differences 
between Windows (under which the manufacturer usually tests the device) and 
Linux (under which sane users use the device ;-)).

> [10421.160055] cannot submit datapipe for urb 0, error -19: no device
> [10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10421.600054] usb 2-4: new high speed USB device using ehci_hcd and
> address 9
> [10422.132066] usb 2-4: device not accepting address 9, error -71
> [10422.244107] usb 2-4: new high speed USB device using ehci_hcd and
> address 10
> [10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10422.532425] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
> [10444.081927] usb 2-4: USB disconnect, address 10
> [10444.348099] usb 2-4: new high speed USB device using ehci_hcd and
> address 11
> [10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
> [10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
> [10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10444.876058] usb 7-2: new full speed USB device using uhci_hcd and
> address 2
> [10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
> [10456.280046] usb 2-4: new high speed USB device using ehci_hcd and
> address 12
> [10456.812039] usb 2-4: device not accepting address 12, error -71
> [10456.924056] usb 2-4: new high s[10415.476069] usb 2-4: new high speed
> USB device using ehci_hcd and address 7
> [10415.596080] usb 2-4: device descriptor read/64, error 4
> [10415.977255] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10415.988171] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input10
> [10421.150795] usb 2-4: USB disconnect, address 7
> [10421.160055] cannot submit datapipe for urb 0, error -19: no device
> [10421.356381] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10421.600054] usb 2-4: new high speed USB device using ehci_hcd and
> address 9
> [10422.132066] usb 2-4: device not accepting address 9, error -71
> [10422.244107] usb 2-4: new high speed USB device using ehci_hcd and
> address 10
> [10422.521422] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10422.532425] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.7/usb2/2-4/2-4:1.0/input/input11
> [10444.081927] usb 2-4: USB disconnect, address 10
> [10444.348099] usb 2-4: new high speed USB device using ehci_hcd and
> address 11
> [10444.418602] ehci_hcd 0000:00:1d.7: port 4 reset error -110
> [10444.418619] hub 2-0:1.0: hub_port_status failed (err = -32)
> [10444.620081] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10444.876058] usb 7-2: new full speed USB device using uhci_hcd and
> address 2
> [10444.940081] hub 7-0:1.0: unable to enumerate USB device on port 2
> [10456.280046] usb 2-4: new high speed USB device using ehci_hcd and
> address 12
> [10456.812039] usb 2-4: device not accepting address 12, error -71
> [10456.924056] usb 2-4: new high speed USB device using ehci_hcd and
> address 13
> [10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.228083] usb 2-4: new high speed USB device using ehci_hcd and
> address 14
> [10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.728073] usb 2-4: new high speed USB device using ehci_hcd and
> address 16
> [10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10458.064094] usb 7-2: new full speed USB device using uhci_hcd and
> address 3
> [10458.292116] usb 7-2: not running at top speed; connect to a high
> speed hub
> [10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10458.436312] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
> [10462.300114] usb 7-2: USB disconnect, address 3
> [10462.304073] cannot submit datapipe for urb 0, error -19: no device
> peed USB device using ehci_hcd and address 13
> [10456.984412] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.228083] usb 2-4: new high speed USB device using ehci_hcd and
> address 14
> [10457.296381] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.484269] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10457.728073] usb 2-4: new high speed USB device using ehci_hcd and
> address 16
> [10457.796365] hub 2-0:1.0: unable to enumerate USB device on port 4
> [10458.064094] usb 7-2: new full speed USB device using uhci_hcd and
> address 3
> [10458.292116] usb 7-2: not running at top speed; connect to a high
> speed hub
> [10458.422485] uvcvideo: Found UVC 1.00 device USB 2.0 Camera (18e3:9512)
> [10458.436312] input: USB 2.0 Camera as
> /devices/pci0000:00/0000:00:1d.1/usb7/7-2/7-2:1.0/input/input12
> [10462.300114] usb 7-2: USB disconnect, address 3
> [10462.304073] cannot submit datapipe for urb 0, error -19: no device
> 
> Also, sometimes I get endless "unable to enumerate USB device" messages

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 02:32:25 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 02:32:25 +0200
Subject: [Linux-uvc-devel] Frame Rate/Corruption C910, plus 4 others
In-Reply-To: <alpine.DEB.2.02.1106090203420.31839@cervantes>
References: <alpine.DEB.2.02.1106090203420.31839@cervantes>
Message-ID: <201106220232.26624.laurent.pinchart@ideasonboard.com>

Hi Mark,

On Thursday 09 June 2011 08:04:56 Mark Whitis wrote:
> Low frame rate problems have been seen with at least 5 UVC cameras on
> multiple computers. It isn't low light, USB bandwidth, etc. In the past, I
> have assumed the cameras were being dishonest about their performance, now I
> am pretty sure it is the UVC driver's fault.

That's a serious accusation :-)

> On a newer, faster, computer performance has even gone down on some cameras.
> 
> I just got a new Logitech C910 UVC webcam.   This camera has a 5MP
> (2592x1944) sensor and can do 1920x1080/30P, 720x1280/30P, and
> 640x480/60P.  It works right out of the box with guvcview except for:
>    - The crippling frame rate problems described here
>    - uvcvideo doesn't support still picture capture (this is a real 5MP
>      bayer resolution webcam).

That's somewhere in my TODO list. Time is unfortunately a scarce resource :-(

>    - Exposure mode can be set to Manual or Aperature Priority.  Auto or
>      Shutter priority produce an error.

This is fixed in 3.0. The driver will report auto and shutter-priority modes 
as being unsupported. Obviously trying to set them will still produce an 
error, but a different one (ERANGE instead of EIO).

>    - Video in MJPG mode is badly corrupted when recording (any program) or
>      when displayed in some programs.
> Other than that, auto/manual exposure, digital zoom, digital pan/tilt (zoom
> first), auto/manual focus, etc. seem to work. Sound not tested.
> It does support still image.
> However, streaming to disk or using a number of other applications fails
> badly:
> Tests were done on this camera, except where otherwise noted.
> 
> As we will see below, mplayer is the only one that admits to dropping 3/4
> of the video frames at 60fps but the other programs (or the driver) are
> doing it.
> 
> 
> 
> Because of the large number of video modes, less interesting modes have
> been deleted and only 480P, 720P, 1080P, and full sensor resolution shown
> in YUYV and MJPG:
> Init. UVC Camera (046d:0821) (location: usb-0000:00:13.2-3)
> { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
> { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15,
> 1/5,
> { discrete: width = 1280, height = 720 }
>  	Time interval between frame: 1/10, 2/15, 1/5,
> { discrete: width = 1920, height = 1080 }
>  	Time interval between frame: 1/2,
> { discrete: width = 2592, height = 1944 }
>  	Time interval between frame: 1/2,
> { pixelformat = 'MJPG', description = 'MJPEG' }
> { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/60, 1/30, 1/24, 1/20, 1/15, 1/10,
> 2/15, 1/5,
> { discrete: width = 1280, height = 720 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15,
> 1/5,
> { discrete: width = 1920, height = 1080 }
>  	Time interval between frame: 1/30, 1/24, 1/20, 1/15, 1/10, 2/15,
> 1/5,
> { discrete: width = 2592, height = 1944 }
>  	Time interval between frame: 1/10, 2/15, 1/5,
> { pixelformat = 'RGB3', description = 'RGB3' }
> ...
> { pixelformat = 'BGR3', description = 'BGR3' }
> ...
> 
> vid:046d
> pid:0821
> driver:uvcvideo
> Adding control for Pan (relative)
> UVCIOC_CTRL_ADD - Error: File exists
> checking format: 1196444237
> VIDIOC_G_COMP:: Invalid argument
>     compression control not supported
> fps is set to 1/30
> drawing controls
> 
> fps is set to 1/30
> 
> guvcview gets max 12-14fps in any video mode down to 160x120.
> Yes, I am using MJPG not YUYV. No the camera exposure should not be knocking
> down the frame rate as this occurs even when pointed at a light. No the CPU
> isn't overloaded; Phenom II 1060T X6 and none of the cores are heavily
> loaded. No, I am not plugged into a 12Mbps port. No, the USB bus isn't
> loaded (unplugged another webcam). luvcview does a little better, getting
> 30fps at 160x120. But if you run guvcview as root, now all of a sudden it
> can run 30fps up to 1920x1080. This continues when you switch back to a
> normal user. Until it breaks. Which happened when I tried to read full
> sensor resolution. After that, I was stuck at <=15fps in all modes as root
> and ordinary user. Removing both copies of .guvcviewrc didn't help.
> Unpluging the camera doesn't fix it. Unplugging the camera and rmmoding
> uvcvideo (which takes videodev with it) and replugging the camera didn't fix
> it. Plugging into USB 3.0 superspeed port didn't help (not that the camera
> supports superspeed, just trying to change the USB controller).  "shutdown -
> h now" didn't fix it.
> Sound is disabled.
> 
> At one point during the brief time that it was working as root, I got 58fps
> 640x480 and it did not slow down even when I lowered frame rate to 30fps.
> Don't know if it actually had anything to do with being root.

The uvcvideo driver doesn't care whether you run applications as root or as a 
normal user as far as performances and frame rates are concerned. Some 
applications might try to setup real-time scheduling, which could make a 
difference. Most applications probably don't bother.

> It did work just long enough to indicate that the camera can deliver on its
> promised specifications.

Which doesn't mean that it always does.

> It does appear guvcview frame rate display is somewhat unreliable. I get
> different results if I turn it off and on, and they vary depending on how
> long it was off, like the title bar only gets updated once. But on different
> cameras that do slow the frame rate in low light, the title bar fps is
> updated when I cover the lens. The changing numbers when turning off/on the
> title bar fps readout may reflect resetting the boxcar averaging. The low
> numbers do seem to reflect reality. When I record files using various
> programs, I only get 25fps according to ffprobe.

Have you tried yavta ? It's one of the most simple test applications. It has 
no GUI, which helps testing devices without any interference from GUI-related 
issues.

> Bad video looks like typically less than half of frame (varies how much
> frame to frame) with some errors of 1/4 to 1/2 width of frame in the section
> that is displayed. Like there is a race condition between grabbing the video
> and playback or one of the errors encountered is bad enough to kill the rest
> of the frame. I have played back with "mplayer -vo x11" to disable any
> hardware accelleration on my video card and the results are the same.
> 
> 
> - Cheese - works but very limited
> - guvcview record video - you get less than half a video frame and other
> errors.
> - ffmpeg -f video4linux2 -s 640x480 -r 60 -vcodec mjpeg -i /dev/video0 -r
> 60 -vcodec copy /tmp/test1.mjpeg
>    You get the same unusable video as guvcview
>    These errors reported before recording starts, then none during
> recording.
> [mjpeg @ 0x1a0c900]mjpeg_decode_dc: bad vlc: 0:0 (0x1a297c0)
> [mjpeg @ 0x1a0c900]error dc
> [mjpeg @ 0x1a0c900]error y=2 x=11
> [video4linux2 @ 0x1a0b660]Estimating duration from bitrate, this may be
> inaccurate
>    then playing back recorded stream with ffplay gives the
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=1 x=21
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)   0B f=0/0
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)f=0/1
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=2 x=9
> [mjpeg @ 0xf95850]error count: 64
> [mjpeg @ 0xf95850]error y=0 x=30
> [mjpeg @ 0xf95850]mjpeg_decode_dc: bad vlc: 0:0 (0xfe2240)
> [mjpeg @ 0xf95850]error dc
> [mjpeg @ 0xf95850]error y=3 x=21
> The bad vlc lines originate from libavcodec/mjpegdec.c
> 
> 
> - vlc
>    vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
> --sout=file/ogg:/tmp/test3.mjp
>    vlc v4l2:///dev/video0:width=640:height=480:fps=60:chroma=MJPG
>    you get the same unusable video (<1/2frame) whether you are playing or
> recording.   No errors reported on record.  When simply watching cam,
> looks like this:
> [0x9ebdb0] signals interface error: signal 17 overriden (0x7f41629c9450)
> [0x9ebdb0] signals interface error:  /usr/lib/libQtCore.so.4(?)[(nil)]
> error dc
> error y=0 x=29
> error dc
> error y=6 x=1
> error dc
> error y=6 x=1
> error dc
> error y=1 x=8
>     vlc does display the image ok if you use YUYV instead of MJPG but then
> you are severly limited in resolution/frame rate.
> - mplayer
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=60
> v4l2: 159 frames successfully processed, 475 frames dropped.
> real	0m10.939s
> I.E. about 58fps from camera but 14.5fps after frames dropped.
> time mplayer tv:// -tv driver=v4l2:width=640:height=240:fps=30
> v4l2: 149 frames successfully processed, 144 frames dropped.
> real	0m10.101s
> I.E. about 29fps from camera but about 14.75fps after frames dropped
> Setup time may affect results slightly.
> Note that if you request more frames than camera supports, it will report
> more frames dropped.
> 
> 
> 
> - luvcview -s 640x480 -r 60 -f MJPG &
> 
>    prints "find DRI" repeatedly
>    reports 14, 16, and 20fps on subsequent runs when camera set to 60.
>    title bar updated at least twice as it initially reports 0.0 fps.
> 
>   luvcview -s 640x480 -r 60 -f MJPG -C -o /tmp/test4.avi &
>   xine, mplayer, and vlc are unable to read the file.
> 
> Using read method instead of mmap doesn't seem to make a difference, tried
> with various programs.


uvcvideo doesn't implement the read() method.

> Same problem on netbook running ubuntu 9.04.
> 
> It may be a bug where uvcvideo gives you the next frame received after you
> request a frame instead of giving you the next frame stored in the queue.
> 
> No uvcvideo syslog messages
> 
> Other UVC cameras:
>    - 230X USB microscope UVC eb1a:1760 (real 1.3MP)
>     v4l2: 132 frames successfully processed, 199 frames dropped.   real
> 12.252s
>     i.e. 10.77fps out of 27fps.
>     { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30,
>     looking at video monitor or overhead light.  guvcview says 17fps but
> will drop to 3.5fps in low light when fps reported set to 30.
>      http://www.freelabs.com/~whitis/reviews/230X_USB_Microscope/
>      On a previous computer I was able to get 27 out of 30fps at 640x480
>      and 7fps out of 15fps at 1280x1024 in bright light.
>    - deal extreme sku #25948 $6.40 camera 18ec:3299 Arkmicro Technologies
> Inc.  (0.3MP)
> http://www.dealextreme.com/p/compact-usb-pc-webcam-300k-pixel-25948
>      { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>      { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/15, 1/10, 1/5,
>      ...
>      guvcview reports 20fps looking at overhead light
>      v4l2: 245 frames successfully processed, 74 frames dropped.  real
> 0m10.706s
>      i.e. 22.88fps out of 29.79fps
>      pressing snapshot button changes color instead, cycling between
> different colors
> 
>   - 0c45:62c0 Microdia Sonix USB 2.0 Camera (0.3MP)
>    { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>     {   discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/20, 1/15, 1/10, 1/5,
>     ...
>     guvcview reports 21.5fps looking at light, 9fps lens blocked
>     v4l2: 311 frames successfully processed, 24 frames dropped. real
> 0m11.514s
>     i.e. 27fps out of 29fps
>     ebay cubeternet USB 2 WEBCAM Camera 5M, Mic, 6 Infrared LED PC/Mac UVC
>     claimed 1.3MP sensor, it was only 0.3MP.
> 
> 
>   - Built-in netbook camera 064E:A102 Suyin Corp
>     Different computer: Acer Aspire One 532h-2588 netbook
>      { pixelformat = 'YUYV', description = 'YUV 4:2:2 (YUYV)' }
>      { discrete: width = 640, height = 480 }
>  	Time interval between frame: 1/30, 1/25, 1/20, 1/15, 1/10, 1/5,
>      (hand typed)
>      ...
>      guvcview reports 7.00fps looking at overhead light/7.00fps lens
> covered
>      ditto for luvcview.
> 
>    - Logitech quickcam fusion.   Now broken, but I recall similar results a
> few years ago.   Other cameras were tested now.
> 
> 
> 
> 
> Ubuntu 11.04
> Linux cervantes 2.6.38-8-generic #42-Ubuntu SMP Mon Apr 11 03:31:24 UTC
> 2011 x86_64 x86_64 x86_64 GNU/Linux
> AMD Phenom(tm) II X6 1090T Processor
> ASUS Crosshair IV Formula
> Radeon HD 6950
> luvcview 0.2.6
> guvcview 1.4.1
> Cheese 2.32.0
> FFmpeg version 0.6.2-4:0.6.2-1ubuntu1
> VLC media player 1.1.9 The Luggage (revision exported)
> MPlayer 1.0rc4-4.5.2 (C) 2000-2010 MPlayer Team
> This is xine (X11 gui) - a free video player v0.99.6.
> ii  libavcodec-extra-52                   4:0.6.2-1ubuntu2
> Libav codec library
> rc  libavcodec52                          4:0.6.2-1ubuntu1
> Libav codec library
> ii  libv4l-0                              0.8.3-1
> Collection of video4linux support libraries
> ii  libgstreamer0.10-0                    0.10.32-3ubuntu3
> Core GStreamer libraries and elements
> My video monitors are running at: 60hz (DVI), 60.3hz (VGA over
> DisplayPort), 60hz (DVI).   ATI proprietary driver 11-5.
> 
> 
> lsusb -v -d 046d:0821 is 1770 lines, so I won't include it.   The guvcview
> exceprts include some of the more pertinent details.  Someone else has
> posted the lsusb output here for same model camera:
> http://pastebin.ca/raw/1967260
> 
> Wireshark:
> guvcview -s 640x480 -r 30 -f YUYV
> used YUYV since it is hard to infer info about number of frames from
> compressed video.
> guvcview reports 16fps
> Over 10 seconds, with guvcview already running:
> 125Mbit/second (all traffic)
>  	640*480*2*8bits*30 = 147.456 megabits
>  	640*480*2*8bits*16 = 78.6432 megabits
> 2629 packets of size>=5120bytes, typically 62016
> This indicates less than 30 frames actually making it onto the wire in
> this mode or data is being lost within frames.
> 
> guvcview -s 1920x1080 -r 30 -f MJPG
> 13.50fps
> 125MBit/second over 10.941 seconds
> 2736 big packets, typically 62016 bytes from camera to host   Same number
> of  small (320-639) packets, typically 576 bytes host to camera.   4
> smaller packets (40-159 bytes).
> 
> Oddly, the highest MaxBit rate on this camera is 995328000 which exceeds
> the capacity of USB High Speed.   That is for 1920*1080 30fps MJPEG and is
> actually the uncompressed bitrate.  The bitrate for that resolution
> FRAME_UNCOMPRESSED is given as 165888000 which is for 2fps.   Most of the
> tests were done at 640x480 compressed or uncompressed and adequate
> bandwidth should be available.
> 
> 
> 
>   lsusb -t
> /:  Bus 08.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M
> /:  Bus 07.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/4p, 12M
> /:  Bus 06.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/2p, 12M
> /:  Bus 05.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
> /:  Bus 04.Port 1: Dev 1, Class=root_hub, Driver=ohci_hcd/5p, 12M
> 
>      |__ Port 3: Dev 3, If 0, Class=HID, Driver=usbhid, 1.5M
>      |__ Port 3: Dev 3, If 1, Class=HID, Driver=usbhid, 1.5M
>      |__ Port 4: Dev 4, If 0, Class=HID, Driver=usbhid, 1.5M
> 
> /:  Bus 03.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/4p, 480M
> 
>      |__ Port 3: Dev 2, If 0, Class=stor., Driver=usb-storage, 480M
> 
> /:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
> 
>      |__ Port 3: Dev 13, If 0, Class=audio, Driver=snd-usb-audio, 480M
>      |__ Port 3: Dev 13, If 1, Class=audio, Driver=snd-usb-audio, 480M
>      |__ Port 3: Dev 13, If 2, Class='bInterfaceClass 0x0e not yet
> 
> handled', Driver=uvcvideo, 480M
> 
>      |__ Port 3: Dev 13, If 3, Class='bInterfaceClass 0x0e not yet
> 
> handled', Driver=uvcvideo, 480M
> /:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=ehci_hcd/5p, 480M
> 
> Windows users have reported getting 30fps.
> http://forums.quickcamteam.net/showthread.php?tid=1345&page=2
> 
> Sometimes I get a little more than 15fps, for no apparent reason.  For
> example, now guvcview reports 18.00fps at 640x480/30P-MJPG and when I tell
> guvcview to capture video, it gives 24.18fps:
>   Duration: 00:00:05.54, start: 0.000000, bitrate: 16494 kb/s
>      Stream #0.0: Video: mjpeg, yuvj422p, 640x480, 24.18 tbr, 24.18 tbn,
> 24.18 tbc
> http://ffmpeg-users.933282.n4.nabble.com/What-does-the-output-of-ffmpeg-mea
> n-tbr-tbn-tbc-etc-td941538.html The video is corrupted.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 02:41:45 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 02:41:45 +0200
Subject: [Linux-uvc-devel] error code list
In-Reply-To: <1308068882.3072.17.camel@sacarino>
References: <1308068882.3072.17.camel@sacarino>
Message-ID: <201106220241.45702.laurent.pinchart@ideasonboard.com>

Hi Jorge,

On Tuesday 14 June 2011 18:28:02 Jorge Yesid Rios Ortiz wrote:
> Hi:
> 
> I have a problem when I tried to use this web-cam in my embedded system:
> 
> Camera:
> ID 041e:4058
> model: Live! Cam Optia AF
> manufacturer:  Creative Technology, Ltd
> 
> 
> Embedded system ARTILA M-501:
> CPU: ATMEL AT91RM9200, 180MHz
> OS: Linux 2.6.14-M5
> SDRAM: 64MB
> USB Host interface: 2x, USB 2.0 compliant
> UART: 4x, 921.6kbps
> 
> This cams works very fine when I used it on my PC with Linux, but when I
> plugged to my embedded system I get this message:
> 
> usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
> usb 1-2: Manufacturer: Creative Labs
> uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
> uvcvideo: Non-zero status (-110) in status completion handler.
> 
> I'm looking for about what means this code error, but I can't find
> anything!!!
> 
> is Anybody help me?

According to /usr/include/asm-generic/errno.h, -110 is -ETIMEDOUT. According 
to Documentation/usb/error-codes.txt, -ETIMEDOUT means

"Synchronous USB message functions use this code to indicate timeout expired 
before the transfer completed, and no other error was reported by HC."

I'm surprised to see this error code reported in a URB completion handler.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 02:51:09 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 02:51:09 +0200
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <293394781.359462.1308215391730.JavaMail.root@ahm.einfochips.com>
References: <293394781.359462.1308215391730.JavaMail.root@ahm.einfochips.com>
Message-ID: <201106220251.10155.laurent.pinchart@ideasonboard.com>

Hi,

On Thursday 16 June 2011 11:09:51 Ajay Bhargav wrote:
> Hi Paulo,
> 
> I have the pdf document of the same. But the thing is my camera is UVC V1.0
> and actual format coming from camera is H.264 encoded stream in MPEG2-TS
> format. So i will have to look for only MPEG2-TS support. I hope i am
> going in right direction. As per my UVC traces, the video streaming format
> is 10 which is MPEG2-TS.
> 
> @Laurent, Please provide me some information so i can move ahead.

H.264 UVC payloads have been implemented in various webcams before the 
official H.264 UVC payload spec got released. Those implementations are not 
documented, and not supported by the driver. Without documentation from the 
manufacturer, H.264 encoder parameters won't be supported.

The official H.264 UVC specification isn't better. Its only purpose is to 
support Logitech webcams in Skype under Windows. Its quality is way below what 
I would expect from a USB-IF specification. I don't plan to implement support 
for that spec in the uvcvideo driver in the near future. I'll review patches, 
but I will NAK anything that isn't clean enough. And from reading the spec 
producing a clean implementation will be pretty difficult.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 02:56:49 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 02:56:49 +0200
Subject: [Linux-uvc-devel] 5986:0343 support
In-Reply-To: <4DFCBAEE.4050908@gmail.com>
References: <4DD06C2F.8030305@gmail.com>
	<201106181644.19047.laurent.pinchart@ideasonboard.com>
	<4DFCBAEE.4050908@gmail.com>
Message-ID: <201106220256.49628.laurent.pinchart@ideasonboard.com>

Hi Julian,

On Saturday 18 June 2011 16:49:18 Julian Sikorski wrote:
> W dniu 2011-06-18 16:44, Laurent Pinchart pisze:
> > On Monday 16 May 2011 02:13:35 Julian Sikorski wrote:
> >> Hi,
> >> 
> >> I would like to report that the said device seems to work on Fedora 15.
> >> I am attaching lsusb -v output. lsusb reports it as Acer for some
> >> reason.
> > 
> > Thanks for the report. I'll update the supported devices list. Could you
> > please tell me whether the device is a standalone webcam or integrated
> > into a laptop, and give me the webcam/laptop commercial brand and model
> > ?
> 
> This device is integrated into the laptop. The laptop is a Clevo P150HM.

Thank you. Supported devices list updated.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Wed Jun 22 03:02:05 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 03:02:05 +0200
Subject: [Linux-uvc-devel] New cam: Celestron Model #44421 is supported
In-Reply-To: <201106181920.p5IJKAn04129@nudel.nodomain.nowhere>
References: <201105130429.p4D4T0012994@nudel.nodomain.nowhere>
	<201106181702.11727.laurent.pinchart@ideasonboard.com>
	<201106181920.p5IJKAn04129@nudel.nodomain.nowhere>
Message-ID: <201106220302.05432.laurent.pinchart@ideasonboard.com>

Hi Mike,

On Saturday 18 June 2011 21:20:10 Mike Spencer wrote:
> You wrote:
> > Hi Michael,
> > 
> > On Friday 13 May 2011 06:29:00 Mike Spencer wrote:
> >> The list of supported devices at http://www.ideasonboard.org/uvc/
> >> invites reporting to linux-uvc-devel of uvc devices not listed there.
> >> This one isn't there:
> >> 
> >> Celestron Digital Microscope Imager  Model #44421
> > 
> > Could you please send me the output of lsusb -v for your device
> > (running as root if possible) ? I'll then update the supported
> > devices list.
> 
> Appended below. It appears to include data for internal hubs that you
> probably don't need or want but I'm pretty clueless on USB hacking so
> I've done exactly as you asked rather than edit out what I think,
> perhaps wrongly, is unwanted.

Thank you for the information. The camera device (19b4:0104) descriptors would 
have been enough, but too much information is (usually) better than too 
little.

I've updated the supported devices list.

-- 
Regards,

Laurent Pinchart


From hagar at iinet.net.au  Wed Jun 22 10:50:01 2011
From: hagar at iinet.net.au (hagar)
Date: Wed, 22 Jun 2011 16:50:01 +0800
Subject: [Linux-uvc-devel] Z-Star USB Digital Microscope
In-Reply-To: <201106220150.02629.laurent.pinchart@ideasonboard.com>
References: <4DF2C4C1.30005@iinet.net.au> <4DF5ABC1.1090808@iinet.net.au>
	<1307950475.3300.67.camel@zwerg>
	<201106220150.02629.laurent.pinchart@ideasonboard.com>
Message-ID: <4E01ACB9.1090809@iinet.net.au>

On 06/22/2011 07:50 AM, Laurent Pinchart wrote:
> On Monday 13 June 2011 09:34:35 Alexey Fisher wrote:
>> On Mo, 2011-06-13 at 14:18 +0800, hagar wrote:
>>> On 06/12/2011 02:11 PM, Alexey Fisher wrote:
>>>> On So, 2011-06-12 at 13:51 +0800, hagar wrote:
> [snip]
>
>>>> Bad news. uvcvideo thins your cam has only 640x480, because your cam
>>>> tells it has only 640x480.
>>>>
>>>> See this part of lsusb info:
>>>>> Bus 001 Device 013: ID 0ac8:3610 Z-Star Microelectronics Corp.
>>>>> Device Descriptor:
>>>> ------------8<---------------------------------
>>>>
>>>>>          VideoStreaming Interface Descriptor:
>>>>>            bLength                            26
>>>>>            bDescriptorType                    36
>>>>>            bDescriptorSubtype                  3 (STILL_IMAGE_FRAME)
>>>>>            bEndpointAddress                    0
>>>>>            bNumImageSizePatterns               5
>>>>>            wWidth( 0)                        640
>>>>>            wHeight( 0)                       480
>>>>>            wWidth( 1)                        352
>>>>>            wHeight( 1)                       288
>>>>>            wWidth( 2)                        320
>>>>>            wHeight( 2)                       240
>>>>>            wWidth( 3)                        176
>>>>>            wHeight( 3)                       144
>>>>>            wWidth( 4)                        160
>>>>>            wHeight( 4)                       120
>>>>>            bNumCompressionPatterns             5
>>> According to The WinXP driver ini file the camera is capable of - (
>>> Would all the hex numbers be of use ? )
>>>
>>> UVC FUNC_MODE HIGH SPEED RGB24
>>> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
>>> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
>>>
>>> UVC FUNC_MODE FULL SPEED RGB24
>>> 640x480, 160x120, 176x144, 320x240, 352x288
>>>
>>> UVC FUNC_MODE YUY2 HIGH SPEED VIDEO
>>> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
>>> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
>>>
>>> UVC FUNC_MODE STILL PIN HIGH SPEED RGB24
>>> 640x480, 160x120, 176x144, 320x240, 352x288, 800x600, 1024x768,
>>> 1280x960, 1280x1024, (??  1600x1280, 2000x1600, 2560x2048 ?? )
>>>
>>> UVC FUNC_MODE STILL PIN FULL SPEED RGB24
>>> 640x480, 160x120, 176x144, 320x240, 352x288
>> Can you please check the driver (some.sys file) it use under win xp.
>>
>> The idea of UVC (usb video class) is zero config functionality. You plug
>> some device and it just work. It is only possible if manufacture write
>> all needed settings in the eeprom of the device (webcam,...).
>> If you plug your device in MacOSX or Windows Vista/7, in any UVC ready
>> OS, you will get same result - max resolution 640x480.
>> If you need to install some thing to get more, then it is not UVC
>> device, at least not 100%.
>>
>> Only good thing you can do for you and all others is to send this device
>> back. Manufactures should learn to read and use uvc specification.
> This isn't the first time I hear about such a problem. I wonder how the
> Windows UVC driver handles that. usbsnoop might shed some light on this.
>
> Hagar, the device isn't listed in the supported devices list. I will add it.
> Do you have a link to a website describing the product ?
>
I am replying to you as well as th list as the attachment will be moderated.

I think that the usb init may not be telling the Microscope that it is 
V2.0 USB Bus instead of V1.0 USB Bus
So it is initialising as a 1.0 USB Bus device.

I will see if I can get a usbsnoop on it - Attached - Plugged device in 
took a picture at max resolution - unplugged device.
There were two devices listed for the microscope - I logged both.
XML and SnoopyPro log files attached

As fo a Website - I found the following -
I seem to have the no brand version - but this is the exact one I have.
I cant find a better site unfortunately.

On UTube -
http://www.youtube.com/watch?v=Swo3Wo7nzUg

On Amazon -
http://www.amazon.com/Veho-Deluxe-USB-Powered-Microscope/dp/B0025U0L8Y/ref=sr_1_3?s=electronics&ie=UTF8&qid=1308724474&sr=1-3 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ZStar-UsbLogs.zip
Type: application/zip
Size: 252060 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110622/a4416478/attachment.zip>

From laurent.pinchart at ideasonboard.com  Wed Jun 22 11:39:24 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Wed, 22 Jun 2011 11:39:24 +0200
Subject: [Linux-uvc-devel] Fix potential oops & rollback after camera
	fails to start
In-Reply-To: <1308413985.25991.4.camel@night>
References: <1306779581.30912.5.camel@night>
	<201106181728.40952.laurent.pinchart@ideasonboard.com>
	<1308413985.25991.4.camel@night>
Message-ID: <201106221139.24288.laurent.pinchart@ideasonboard.com>

Hi Sjoerd,

On Saturday 18 June 2011 18:19:45 Sjoerd Simons wrote:
> On Sat, 2011-06-18 at 17:28 +0200, Laurent Pinchart wrote:
> > Thank you for the patches, and sorry for my late reply. The patches look
> > good to me. Could you please give me your Signed-off-by line for both of
> > them ?
> 
> Sorry about that, patches with signed-off-by attached.

Thank you. I'll try to push the patches to 3.0. If not possible, they will go 
to 3.1.

-- 
Regards,

Laurent Pinchart


From kirr at mns.spb.ru  Wed Jun 22 18:02:47 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Wed, 22 Jun 2011 20:02:47 +0400
Subject: [Linux-uvc-devel] [RFC,
	PATCH] USB: EHCI: Allow users to override 80% max periodic bandwidth
Message-ID: <1308758567-8205-1-git-send-email-kirr@mns.spb.ru>

There are cases, when 80% max isochronous bandwidth is too limiting.

For example I have two USB video capture cards which stream uncompressed
video, and to stream full NTSC + PAL videos we'd need

    NTSC 640x480 YUV422 @30fps      ~17.6 MB/s
    PAL  720x576 YUV422 @25fps      ~19.7 MB/s

isoc bandwidth.

Now, due to limited alt settings in capture devices NTSC one ends up
streaming with max_pkt_size=2688  and  PAL with max_pkt_size=2892, both
with interval=1. In terms of microframe time allocation this gives

    NTSC    ~53us
    PAL     ~57us

and together

    ~110us  >  100us == 80% of 125us uframe time.

So those two devices can't work together simultaneously because the'd
over allocate isochronous bandwidth.

80% seemed a bit arbitrary to me, and I've tried to raise it to 90% and
both devices started to work together, so I though sometimes it would be
a good idea for users to override hardcoded default of max 80% isoc
bandwidth.

After all, isn't it a user who should decide how to load the bus? If I
can live with 10% or even 5% bulk bandwidth that should be ok. I'm a USB
newcomer, but that 80% seems to be chosen pretty arbitrary to me, just
to serve as a reasonable default.

NOTE: for two streams with max_pkt_size=3072 (worst case) both time
allocation would be 60us+60us=120us which is 96% periodic bandwidth
leaving 4% for bulk and control. I think this should work too.

Signed-off-by: Kirill Smelkov <kirr at mns.spb.ru>
Cc: Alan Stern <stern at rowland.harvard.edu>
---
 drivers/usb/host/ehci-hcd.c   |   16 ++++++++++++++++
 drivers/usb/host/ehci-sched.c |   17 +++++++----------
 2 files changed, 23 insertions(+), 10 deletions(-)

diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
index c606b02..1d36e72 100644
--- a/drivers/usb/host/ehci-hcd.c
+++ b/drivers/usb/host/ehci-hcd.c
@@ -112,6 +112,14 @@ static unsigned int hird;
 module_param(hird, int, S_IRUGO);
 MODULE_PARM_DESC(hird, "host initiated resume duration, +1 for each 75us\n");
 
+/*
+ * max periodic time per microframe
+ * (be careful, USB 2.0 requires it to be 100us = 80% of 125us)
+ */
+static unsigned int uframe_periodic_max = 100;
+module_param(uframe_periodic_max, uint, S_IRUGO);
+MODULE_PARM_DESC(uframe_periodic_max, "maximum allowed periodic part of a microframe, us");
+
 #define	INTR_MASK (STS_IAA | STS_FATAL | STS_PCD | STS_ERR | STS_INT)
 
 /*-------------------------------------------------------------------------*/
@@ -571,6 +579,14 @@ static int ehci_init(struct usb_hcd *hcd)
 	hcc_params = ehci_readl(ehci, &ehci->caps->hcc_params);
 
 	/*
+	 * tell user, if using non-standard (80% == 100 usec/uframe) bandwidth
+	 */
+	if (uframe_periodic_max != 100)
+		ehci_info(ehci, "using non-standard max periodic bandwith "
+				"(%u%% == %u usec/uframe)",
+				100*uframe_periodic_max/125, uframe_periodic_max);
+
+	/*
 	 * hw default: 1K periodic list heads, one per frame.
 	 * periodic_size can shrink by USBCMD update if hcc_params allows.
 	 */
diff --git a/drivers/usb/host/ehci-sched.c b/drivers/usb/host/ehci-sched.c
index d12426f..fb374f2 100644
--- a/drivers/usb/host/ehci-sched.c
+++ b/drivers/usb/host/ehci-sched.c
@@ -172,7 +172,7 @@ periodic_usecs (struct ehci_hcd *ehci, unsigned frame, unsigned uframe)
 		}
 	}
 #ifdef	DEBUG
-	if (usecs > 100)
+	if (usecs > uframe_periodic_max)
 		ehci_err (ehci, "uframe %d sched overrun: %d usecs\n",
 			frame * 8 + uframe, usecs);
 #endif
@@ -709,11 +709,8 @@ static int check_period (
 	if (uframe >= 8)
 		return 0;
 
-	/*
-	 * 80% periodic == 100 usec/uframe available
-	 * convert "usecs we need" to "max already claimed"
-	 */
-	usecs = 100 - usecs;
+	/* convert "usecs we need" to "max already claimed" */
+	usecs = uframe_periodic_max - usecs;
 
 	/* we "know" 2 and 4 uframe intervals were rejected; so
 	 * for period 0, check _every_ microframe in the schedule.
@@ -1286,9 +1283,9 @@ itd_slot_ok (
 {
 	uframe %= period;
 	do {
-		/* can't commit more than 80% periodic == 100 usec */
+		/* can't commit more than uframe_periodic_max usec */
 		if (periodic_usecs (ehci, uframe >> 3, uframe & 0x7)
-				> (100 - usecs))
+				> (uframe_periodic_max - usecs))
 			return 0;
 
 		/* we know urb->interval is 2^N uframes */
@@ -1345,7 +1342,7 @@ sitd_slot_ok (
 #endif
 
 		/* check starts (OUT uses more than one) */
-		max_used = 100 - stream->usecs;
+		max_used = uframe_periodic_max - stream->usecs;
 		for (tmp = stream->raw_mask & 0xff; tmp; tmp >>= 1, uf++) {
 			if (periodic_usecs (ehci, frame, uf) > max_used)
 				return 0;
@@ -1354,7 +1351,7 @@ sitd_slot_ok (
 		/* for IN, check CSPLIT */
 		if (stream->c_usecs) {
 			uf = uframe & 7;
-			max_used = 100 - stream->c_usecs;
+			max_used = uframe_periodic_max - stream->c_usecs;
 			do {
 				tmp = 1 << uf;
 				tmp <<= 8;
-- 
1.7.6.rc1



From ajay.bhargav at einfochips.com  Thu Jun 23 06:39:28 2011
From: ajay.bhargav at einfochips.com (Ajay Bhargav)
Date: Thu, 23 Jun 2011 10:09:28 +0530 (IST)
Subject: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist
In-Reply-To: <188855721.384451.1308803391236.JavaMail.root@ahm.einfochips.com>
Message-ID: <1835110100.384521.1308803968089.JavaMail.root@ahm.einfochips.com>


Hi Laurent, 

Thanks for your reply. Well I know that H.264 payload is specified in newer UVC 1.1 documentation, but my webcam is not sending H.264 as payload. Its sending MPEG2-TS according to UVC1.0 secifications, i found out during debugging, format descriptor gives 0x0A as Descriptor subtype. 

As per old archives from mailing list i added MPEG2-TS handling similar to DV format. I am now able to create a /dev/video device on my machine but i have no idea how to add stream support to UVC-v4l2 interface or where to add that support. As there is no frame descriptor V4L2 driver is not able to detect the frame rate etc... Maybe i am getting little confused here? 

Regards, 
Ajay 


----- Original Message ----- 
From: "Laurent Pinchart" <laurent.pinchart at ideasonboard.com> 
To: linux-uvc-devel at lists.berlios.de 
Cc: "Ajay Bhargav" <ajay.bhargav at einfochips.com>, "Paulo Assis" <pj.assis at gmail.com>, "Kofi Jedamzik" <kofi at jedamzik.net> 
Sent: Wednesday, June 22, 2011 6:21:09 AM 
Subject: Re: [Linux-uvc-devel] Webcam with H264 encoder not in Devicelist 

Hi, 

On Thursday 16 June 2011 11:09:51 Ajay Bhargav wrote: 
> Hi Paulo, 
> 
> I have the pdf document of the same. But the thing is my camera is UVC V1.0 
> and actual format coming from camera is H.264 encoded stream in MPEG2-TS 
> format. So i will have to look for only MPEG2-TS support. I hope i am 
> going in right direction. As per my UVC traces, the video streaming format 
> is 10 which is MPEG2-TS. 
> 
> @Laurent, Please provide me some information so i can move ahead. 

H.264 UVC payloads have been implemented in various webcams before the 
official H.264 UVC payload spec got released. Those implementations are not 
documented, and not supported by the driver. Without documentation from the 
manufacturer, H.264 encoder parameters won't be supported. 

The official H.264 UVC specification isn't better. Its only purpose is to 
support Logitech webcams in Skype under Windows. Its quality is way below what 
I would expect from a USB-IF specification. I don't plan to implement support 
for that spec in the uvcvideo driver in the near future. I'll review patches, 
but I will NAK anything that isn't clean enough. And from reading the spec 
producing a clean implementation will be pretty difficult. 

-- 
Regards, 

Laurent Pinchart 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110623/cbf7f7f1/attachment.html>

From kirr at mns.spb.ru  Thu Jun 23 16:05:39 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Thu, 23 Jun 2011 18:05:39 +0400
Subject: [Linux-uvc-devel] [RFC,
	PATCH] USB: EHCI: Allow users to override 80% max	periodic bandwidth
In-Reply-To: <Pine.LNX.4.44L0.1106221514350.1977-100000@iolanthe.rowland.org>
References: <1308758567-8205-1-git-send-email-kirr@mns.spb.ru>
	<Pine.LNX.4.44L0.1106221514350.1977-100000@iolanthe.rowland.org>
Message-ID: <20110623140539.GA4403@tugrik.mns.mnsspb.ru>

On Wed, Jun 22, 2011 at 03:22:28PM -0400, Alan Stern wrote:
> On Wed, 22 Jun 2011, Kirill Smelkov wrote:
> 
> > There are cases, when 80% max isochronous bandwidth is too limiting.
> > 
> > For example I have two USB video capture cards which stream uncompressed
> > video, and to stream full NTSC + PAL videos we'd need
> > 
> >     NTSC 640x480 YUV422 @30fps      ~17.6 MB/s
> >     PAL  720x576 YUV422 @25fps      ~19.7 MB/s
> > 
> > isoc bandwidth.
> > 
> > Now, due to limited alt settings in capture devices NTSC one ends up
> > streaming with max_pkt_size=2688  and  PAL with max_pkt_size=2892, both
> > with interval=1. In terms of microframe time allocation this gives
> > 
> >     NTSC    ~53us
> >     PAL     ~57us
> > 
> > and together
> > 
> >     ~110us  >  100us == 80% of 125us uframe time.
> > 
> > So those two devices can't work together simultaneously because the'd
> > over allocate isochronous bandwidth.
> > 
> > 80% seemed a bit arbitrary to me, and I've tried to raise it to 90% and
> > both devices started to work together, so I though sometimes it would be
> > a good idea for users to override hardcoded default of max 80% isoc
> > bandwidth.
> > 
> > After all, isn't it a user who should decide how to load the bus? If I
> > can live with 10% or even 5% bulk bandwidth that should be ok. I'm a USB
> > newcomer, but that 80% seems to be chosen pretty arbitrary to me, just
> > to serve as a reasonable default.
> 
> This seems like the sort of feature somebody might reasonably want to 
> use -- if they know exactly what they're doing.

Yes, thanks, exactly my case. Now I know the idea won't be rejected it
can be polished.


> > NOTE: for two streams with max_pkt_size=3072 (worst case) both time
> > allocation would be 60us+60us=120us which is 96% periodic bandwidth
> > leaving 4% for bulk and control. I think this should work too.
> 
> At 480 Mb/s, each microframe holds 7500 bytes (less if you count 
> bit-stuffing).  4% of that is 300 bytes, which is not enough for a 
> 512-byte bulk packet.  I think you'd run into trouble trying to do any 
> serious bulk transfers on such a tight schedule.

Yes, you seem to be right.

I still think 4% is maybe enough for control traffic.


> > Signed-off-by: Kirill Smelkov <kirr at mns.spb.ru>
> > Cc: Alan Stern <stern at rowland.harvard.edu>
> > ---
> >  drivers/usb/host/ehci-hcd.c   |   16 ++++++++++++++++
> >  drivers/usb/host/ehci-sched.c |   17 +++++++----------
> >  2 files changed, 23 insertions(+), 10 deletions(-)
> > 
> > diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
> > index c606b02..1d36e72 100644
> > --- a/drivers/usb/host/ehci-hcd.c
> > +++ b/drivers/usb/host/ehci-hcd.c
> > @@ -112,6 +112,14 @@ static unsigned int hird;
> >  module_param(hird, int, S_IRUGO);
> >  MODULE_PARM_DESC(hird, "host initiated resume duration, +1 for each 75us\n");
> >  
> > +/*
> > + * max periodic time per microframe
> > + * (be careful, USB 2.0 requires it to be 100us = 80% of 125us)
> > + */
> > +static unsigned int uframe_periodic_max = 100;
> > +module_param(uframe_periodic_max, uint, S_IRUGO);
> > +MODULE_PARM_DESC(uframe_periodic_max, "maximum allowed periodic part of a microframe, us");
> > +
> 
> This probably should be a sysfs attribute rather than a module 
> parameter, so that it can be applied to individual buses separately.

Agree


> >  #define	INTR_MASK (STS_IAA | STS_FATAL | STS_PCD | STS_ERR | STS_INT)
> >  
> >  /*-------------------------------------------------------------------------*/
> > @@ -571,6 +579,14 @@ static int ehci_init(struct usb_hcd *hcd)
> >  	hcc_params = ehci_readl(ehci, &ehci->caps->hcc_params);
> >  
> >  	/*
> > +	 * tell user, if using non-standard (80% == 100 usec/uframe) bandwidth
> > +	 */
> > +	if (uframe_periodic_max != 100)
> > +		ehci_info(ehci, "using non-standard max periodic bandwith "
> > +				"(%u%% == %u usec/uframe)",
> > +				100*uframe_periodic_max/125, uframe_periodic_max);
> > +
> > +	/*
> 
> Check for invalid values.  This should never be less than 100 or 
> greater than 125.

Ok. By the way, why should we limit it to be not less than 100?
Likewise, a user who knows exactly what he/she is doing could limit
periodic bandwidth to be less than 80% required by USB specification.


> >  	 * hw default: 1K periodic list heads, one per frame.
> >  	 * periodic_size can shrink by USBCMD update if hcc_params allows.
> >  	 */
> > diff --git a/drivers/usb/host/ehci-sched.c b/drivers/usb/host/ehci-sched.c
> > index d12426f..fb374f2 100644
> > --- a/drivers/usb/host/ehci-sched.c
> > +++ b/drivers/usb/host/ehci-sched.c
> > @@ -172,7 +172,7 @@ periodic_usecs (struct ehci_hcd *ehci, unsigned frame, unsigned uframe)
> >  		}
> >  	}
> >  #ifdef	DEBUG
> > -	if (usecs > 100)
> > +	if (usecs > uframe_periodic_max)
> 
> These changes all seem right.

Thanks. I'll try to prepare updated patch.


Kirill


From kirr at mns.spb.ru  Thu Jun 23 16:11:37 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Thu, 23 Jun 2011 18:11:37 +0400
Subject: [Linux-uvc-devel] [RFC,
	PATCH] USB: EHCI: Allow users to override 80% max	periodic bandwidth
In-Reply-To: <20110622173544.GD56479@haskell.muteddisk.com>
References: <1308758567-8205-1-git-send-email-kirr@mns.spb.ru>
	<20110622173045.GC56479@haskell.muteddisk.com>
	<20110622173544.GD56479@haskell.muteddisk.com>
Message-ID: <20110623141137.GB4403@tugrik.mns.mnsspb.ru>

On Wed, Jun 22, 2011 at 10:35:44AM -0700, matt mooney wrote:
> On 10:30 Wed 22 Jun     , matt mooney wrote:
> > On 20:02 Wed 22 Jun     , Kirill Smelkov wrote:
> > > There are cases, when 80% max isochronous bandwidth is too limiting.
> > > 
> > > For example I have two USB video capture cards which stream uncompressed
> > > video, and to stream full NTSC + PAL videos we'd need
> > > 
> > >     NTSC 640x480 YUV422 @30fps      ~17.6 MB/s
> > >     PAL  720x576 YUV422 @25fps      ~19.7 MB/s
> > > 
> > > isoc bandwidth.
> > > 
> > > Now, due to limited alt settings in capture devices NTSC one ends up
> > > streaming with max_pkt_size=2688  and  PAL with max_pkt_size=2892, both
> > > with interval=1. In terms of microframe time allocation this gives
> > > 
> > >     NTSC    ~53us
> > >     PAL     ~57us
> > > 
> > > and together
> > > 
> > >     ~110us  >  100us == 80% of 125us uframe time.
> > > 
> > > So those two devices can't work together simultaneously because the'd
> > > over allocate isochronous bandwidth.
> > > 
> > > 80% seemed a bit arbitrary to me, and I've tried to raise it to 90% and
> > > both devices started to work together, so I though sometimes it would be
> > > a good idea for users to override hardcoded default of max 80% isoc
> > > bandwidth.
> > 
> > There is nothing arbitrary about 80%. The USB 2.0 Specification constrains
> > periodic transfers for high-speed endpoints to 80% of the microframe. See
> > section 5.6.4.
> > 
> 
> Looking at the patch, I see that you probably already knew that.
> 
> So I digress and defer to the USB experts ;)

Yes, it was meant as 80% being arbitrary chosen by USB 2.0
specification. Notes taken - I'll clarify patch description.


Thanks for commenting,
Kirill


From yann at minet.net  Thu Jun 23 16:34:31 2011
From: yann at minet.net (Yann Sionneau)
Date: Thu, 23 Jun 2011 16:34:31 +0200
Subject: [Linux-uvc-devel] [PATCH 1/2] adding statistics about timestamps
In-Reply-To: <1308681277.2672.1.camel@mini>
References: <4DFF2183.5000200@minet.net> <1308681277.2672.1.camel@mini>
Message-ID: <4E034EF7.6000807@minet.net>

Oh yes, sorry, I copy pasted it, I should have attached it to the 
e-mail, I am sending again the patch 2/2 since it's the only new one, 
the 1/2 can be found in the ML archive in an e-mail from Laurent Pinchart.

Thanks !

On 06/21/2011 08:34 PM, Alexey Fisher wrote:
> hmmm... did you copy-pasted this patch?
> it seems to be broken,
> some lines are wrapped.
>
> Am Montag, den 20.06.2011, 12:31 +0200 schrieb Yann Sionneau:
>> ---
>>    drivers/media/video/uvc/uvc_video.c |  196
>> ++++++++++++++++++++++++++++++++++-
>>    drivers/media/video/uvc/uvcvideo.h  |   39 +++++++
>>    2 files changed, 234 insertions(+), 1 deletions(-)
>>
>> diff --git a/drivers/media/video/uvc/uvc_video.c
>> b/drivers/media/video/uvc/uvc_video.c
>> index fc766b9..feb585b 100644
>> --- a/drivers/media/video/uvc/uvc_video.c
>> +++ b/drivers/media/video/uvc/uvc_video.c
>> @@ -358,6 +358,191 @@ int uvc_commit_video(struct uvc_streaming *stream,
>>    }
>>
>>    /*
>> ------------------------------------------------------------------------
>> + * Timestamp statistics
>> + */
>> +
>> +static void uvc_video_stats_decode(struct uvc_streaming *stream,
>> +        const __u8 *data, int len)
>> +{
>> +    unsigned int header_size;
>> +    bool has_pts = false;
>> +    bool has_scr = false;
>> +    u16 scr_sof;
>> +    u32 scr_stc;
>> +    u32 pts;
>> +
>> +    if (stream->stats.stream.nb_frames == 0&&
>> +        stream->stats.frame.nb_packets == 0)
>> +        ktime_get_ts(&stream->stats.stream.start_ts);
>> +
>> +    switch (data[1]&  (UVC_STREAM_PTS | UVC_STREAM_SCR)) {
>> +    case UVC_STREAM_PTS | UVC_STREAM_SCR:
>> +        header_size = 12;
>> +        has_pts = true;
>> +        has_scr = true;
>> +        break;
>> +    case UVC_STREAM_PTS:
>> +        header_size = 6;
>> +        has_pts = true;
>> +        break;
>> +    case UVC_STREAM_SCR:
>> +        header_size = 8;
>> +        has_scr = true;
>> +        break;
>> +    default:
>> +        header_size = 2;
>> +        break;
>> +    }
>> +
>> +    /* Check for invalid headers. */
>> +    if (len<  header_size) {
>> +        stream->stats.frame.nb_invalid_headers++;
>> +        return;
>> +    }
>> +
>> +    /* Extract the timestamps. */
>> +    if (has_pts)
>> +        pts = get_unaligned_le32(&data[2]);
>> +
>> +    if (has_scr) {
>> +        scr_stc = get_unaligned_le32(&data[header_size - 6]);
>> +        scr_sof = get_unaligned_le16(&data[header_size - 2]);
>> +    }
>> +
>> +    /* Is PTS constant through the whole frame ? */
>> +    if (has_pts&&  stream->stats.frame.nb_pts) {
>> +        if (stream->stats.frame.pts != pts) {
>> +            stream->stats.frame.nb_pts_diffs++;
>> +            stream->stats.frame.last_pts_diff =
>> +                stream->stats.frame.nb_packets;
>> +        }
>> +    }
>> +
>> +    if (has_pts) {
>> +        stream->stats.frame.nb_pts++;
>> +        stream->stats.frame.pts = pts;
>> +    }
>> +
>> +    /* Do all frames have a PTS in their first non-empty packet, or before
>> +     * their first empty packet ?
>> +     */
>> +    if (stream->stats.frame.size == 0) {
>> +        if (len>  header_size)
>> +            stream->stats.frame.has_initial_pts = has_pts;
>> +        if (len == header_size&&  has_pts)
>> +            stream->stats.frame.has_early_pts = true;
>> +    }
>> +
>> +    /* Do the SCR.STC and SCR.SOF fields vary through the frame ? */
>> +    if (has_scr&&  stream->stats.frame.nb_scr) {
>> +        if (stream->stats.frame.scr_stc != scr_stc)
>> +            stream->stats.frame.nb_scr_diffs++;
>> +    }
>> +
>> +    if (has_scr) {
>> +        /* Expand the SOF counter to 32 bits and store its value. */
>> +        if (stream->stats.stream.nb_frames>  0 ||
>> +            stream->stats.frame.nb_scr>  0)
>> +            stream->stats.stream.scr_sof_count +=
>> +                (scr_sof - stream->stats.stream.scr_sof) % 2048;
>> +        stream->stats.stream.scr_sof = scr_sof;
>> +
>> +        stream->stats.frame.nb_scr++;
>> +        stream->stats.frame.scr_stc = scr_stc;
>> +        stream->stats.frame.scr_sof = scr_sof;
>> +
>> +        if (scr_sof<  stream->stats.stream.min_sof)
>> +            stream->stats.stream.min_sof = scr_sof;
>> +        if (scr_sof>  stream->stats.stream.max_sof)
>> +            stream->stats.stream.max_sof = scr_sof;
>> +    }
>> +
>> +    if (stream->stats.frame.size == 0&&  len>  header_size)
>> +        stream->stats.frame.first_data = stream->stats.frame.nb_packets;
>> +
>> +    stream->stats.frame.size += len - header_size;
>> +    stream->stats.frame.nb_packets++;
>> +    if (len>  header_size)
>> +        stream->stats.frame.nb_non_empty_packets++;
>> +
>> +    if (data[1]&  UVC_STREAM_ERR)
>> +        stream->stats.frame.nb_errors++;
>> +}
>> +
>> +static void uvc_video_stats_update(struct uvc_streaming *stream)
>> +{
>> +    struct uvc_stats_frame *frame =&stream->stats.frame;
>> +
>> +    uvc_trace(UVC_TRACE_TIMESTAMP, "frame %u stats: %u/%u/%u packets "
>> +          "%u/%u/%u pts (%searly %sinitial) %u/%u scr\n",
>> +          stream->sequence, frame->first_data,
>> +          frame->nb_non_empty_packets, frame->nb_packets,
>> +          frame->nb_pts_diffs, frame->last_pts_diff, frame->nb_pts,
>> +          frame->has_early_pts ? "" : "!",
>> +          frame->has_initial_pts ? "" : "!",
>> +          frame->nb_scr_diffs, frame->nb_scr);
>> +
>> +    stream->stats.stream.nb_frames++;
>> +
>> +    if (frame->has_early_pts)
>> +        stream->stats.stream.nb_pts_early++;
>> +    if (frame->has_initial_pts)
>> +        stream->stats.stream.nb_pts_initial++;
>> +    if (frame->last_pts_diff<= frame->first_data)
>> +        stream->stats.stream.nb_pts_constant++;
>> +    if (frame->nb_scr>= frame->nb_non_empty_packets)
>> +        stream->stats.stream.nb_scr_count_ok++;
>> +    if (frame->nb_scr_diffs + 1 == frame->nb_scr)
>> +        stream->stats.stream.nb_scr_diffs_ok++;
>> +
>> +    memset(&stream->stats.frame, 0, sizeof(stream->stats.frame));
>> +}
>> +
>> +static void uvc_video_stats_dump(struct uvc_streaming *stream)
>> +{
>> +    unsigned int scr_sof_freq;
>> +    unsigned int duration;
>> +    struct timespec ts;
>> +
>> +    ktime_get_ts(&ts);
>> +
>> +    ts.tv_sec -= stream->stats.stream.start_ts.tv_sec;
>> +    ts.tv_nsec -= stream->stats.stream.start_ts.tv_nsec;
>> +    if (ts.tv_nsec<  0) {
>> +        ts.tv_sec--;
>> +        ts.tv_nsec += 1000000000;
>> +    }
>> +
>> +    /* Compute the SCR.SOF frequency estimate. At the nominal 1kHz SOF
>> +     * frequency this will not overflow before more than 1h.
>> +     */
>> +    duration = ts.tv_sec * 1000 + ts.tv_nsec / 1000000;
>> +    if (duration != 0)
>> +        scr_sof_freq = stream->stats.stream.scr_sof_count * 1000
>> +                 / duration;
>> +    else
>> +        scr_sof_freq = 0;
>> +
>> +    uvc_trace(UVC_TRACE_TIMESTAMP, "stream stats: %u frames %u early pts "
>> +          "%u initial pts %u pts ok %u scr count ok %u scr diff ok, "
>> +          "%u<= sof<= %u, sof freq %u.%03u kHz\n",
>> +          stream->stats.stream.nb_frames,
>> +          stream->stats.stream.nb_pts_early,
>> +          stream->stats.stream.nb_pts_initial,
>> +          stream->stats.stream.nb_pts_constant,
>> +          stream->stats.stream.nb_scr_count_ok,
>> +          stream->stats.stream.nb_scr_diffs_ok,
>> +          stream->stats.stream.min_sof, stream->stats.stream.max_sof,
>> +          scr_sof_freq / 1000, scr_sof_freq % 1000);
>> +}
>> +
>> +static void uvc_video_stats_init(struct uvc_streaming *stream)
>> +{
>> +    memset(&stream->stats, 0, sizeof(stream->stats));
>> +    stream->stats.stream.min_sof = 2048;
>> +}
>> +
>> +/* ------------------------------------------------------------------------
>>     * Video codecs
>>     */
>>
>> @@ -431,8 +616,13 @@ static int uvc_video_decode_start(struct
>> uvc_streaming *stream,
>>        /* Increase the sequence number regardless of any buffer states, so
>>         * that discontinuous sequence numbers always indicate lost frames.
>>         */
>> -    if (stream->last_fid != fid)
>> +    if (stream->last_fid != fid) {
>>            stream->sequence++;
>> +        if (stream->sequence)
>> +            uvc_video_stats_update(stream);
>> +    }
>> +
>> +    uvc_video_stats_decode(stream, data, len);
>>
>>        /* Store the payload FID bit and return immediately when the buffer is
>>         * NULL.
>> @@ -861,6 +1051,8 @@ static void uvc_uninit_video(struct uvc_streaming
>> *stream, int free_buffers)
>>        struct urb *urb;
>>        unsigned int i;
>>
>> +    uvc_video_stats_dump(stream);
>> +
>>        for (i = 0; i<  UVC_URBS; ++i) {
>>            urb = stream->urb[i];
>>            if (urb == NULL)
>> @@ -994,6 +1186,8 @@ static int uvc_init_video(struct uvc_streaming
>> *stream, gfp_t gfp_flags)
>>        stream->bulk.skip_payload = 0;
>>        stream->bulk.payload_size = 0;
>>
>> +    uvc_video_stats_init(stream);
>> +
>>        if (intf->num_altsetting>  1) {
>>            struct usb_host_endpoint *best_ep = NULL;
>>            unsigned int best_psize = 3 * 1024;
>> diff --git a/drivers/media/video/uvc/uvcvideo.h
>> b/drivers/media/video/uvc/uvcvideo.h
>> index 45f01e7..40f461c 100644
>> --- a/drivers/media/video/uvc/uvcvideo.h
>> +++ b/drivers/media/video/uvc/uvcvideo.h
>> @@ -462,6 +462,44 @@ struct uvc_streaming {
>>
>>        __u32 sequence;
>>        __u8 last_fid;
>> +
>> +    struct {
>> +        struct {
>> +            struct timespec start_ts;    /* Stream start timestamp */
>> +            unsigned int nb_frames;        /* Number of frames */
>> +            unsigned int nb_pts_constant;    /* Number of frames with
>> constant PTS */
>> +            unsigned int nb_pts_early;    /* Number of frames with
>> early PTS */
>> +            unsigned int nb_pts_initial;    /* Number of frames with
>> initial PTS */
>> +            unsigned int nb_scr_count_ok;    /* Number of frames with
>> at least one SCR per non empty packet */
>> +            unsigned int nb_scr_diffs_ok;    /* Number of frames with
>> varying SCR.STC */
>> +            unsigned int scr_sof_count;    /* STC.SOF counter
>> accumulated since stream start */
>> +            unsigned int scr_sof;        /* STC.SOF of the last packet */
>> +            unsigned int min_sof;        /* Minimum STC.SOF value */
>> +            unsigned int max_sof;        /* Maximum STC.SOF value */
>> +        } stream;
>> +
>> +        struct uvc_stats_frame {
>> +            unsigned int size;        /* Number of bytes captured */
>> +            unsigned int first_data;    /* Index of the first non-empty
>> packet */
>> +
>> +            unsigned int nb_packets;    /* Number of packets */
>> +            unsigned int nb_non_empty_packets;    /* Number of
>> non-empty packets */
>> +            unsigned int nb_invalid_headers;/* Number of packets with
>> an invalid header */
>> +            unsigned int nb_errors;        /* Number of packets with
>> the error bit set */
>> +
>> +            unsigned int nb_pts;        /* Number of packets with a PTS
>> timestamp */
>> +            unsigned int nb_pts_diffs;    /* Number of PTS differences
>> inside a frame */
>> +            unsigned int last_pts_diff;    /* Index of the last PTS
>> difference */
>> +            bool has_initial_pts;        /* Whether the first non-empty
>> packet has a PTS */
>> +            bool has_early_pts;        /* Whether a PTS is present
>> before the first non-empty packet */
>> +            u32 pts;            /* PTS of the last packet */
>> +
>> +            unsigned int nb_scr;        /* Number of packets with a SCR
>> timestamp */
>> +            unsigned int nb_scr_diffs;    /* Number of SCR.STC
>> differences inside a frame */
>> +            u16 scr_sof;            /* SCR.SOF of the last packet */
>> +            u32 scr_stc;            /* SCR.STC of the last packet */
>> +        } frame;
>> +    } stats;
>>    };
>>
>>    enum uvc_device_state {
>> @@ -529,6 +567,7 @@ struct uvc_driver {
>>    #define UVC_TRACE_SUSPEND    (1<<  8)
>>    #define UVC_TRACE_STATUS    (1<<  9)
>>    #define UVC_TRACE_VIDEO        (1<<  10)
>> +#define UVC_TRACE_TIMESTAMP    (1<<  11)
>>
>>    #define UVC_WARN_MINMAX        0
>>    #define UVC_WARN_PROBE_DEF    1

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-count-scr.sof-per-frame-and-pts-for-whole-stream.patch
Type: text/x-patch
Size: 5077 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110623/640971dd/attachment.bin>

From jyrios at die.upm.es  Fri Jun 24 16:39:21 2011
From: jyrios at die.upm.es (Jorge Yesid Rios Ortiz)
Date: Fri, 24 Jun 2011 16:39:21 +0200
Subject: [Linux-uvc-devel] error code list
In-Reply-To: <201106220241.45702.laurent.pinchart@ideasonboard.com>
References: <1308068882.3072.17.camel@sacarino>
	<201106220241.45702.laurent.pinchart@ideasonboard.com>
Message-ID: <1308926361.2194.18.camel@sacarino>

Hi Laurent:

Thanks very much for your answer.
I don't know what I must to be for to resolve this error.

Can you give me some information about how to solve this error?


El mi?, 22-06-2011 a las 02:41 +0200, Laurent Pinchart escribi?: 
> Hi Jorge,
> 
> On Tuesday 14 June 2011 18:28:02 Jorge Yesid Rios Ortiz wrote:
> > Hi:
> > 
> > I have a problem when I tried to use this web-cam in my embedded system:
> > 
> > Camera:
> > ID 041e:4058
> > model: Live! Cam Optia AF
> > manufacturer:  Creative Technology, Ltd
> > 
> > 
> > Embedded system ARTILA M-501:
> > CPU: ATMEL AT91RM9200, 180MHz
> > OS: Linux 2.6.14-M5
> > SDRAM: 64MB
> > USB Host interface: 2x, USB 2.0 compliant
> > UART: 4x, 921.6kbps
> > 
> > This cams works very fine when I used it on my PC with Linux, but when I
> > plugged to my embedded system I get this message:
> > 
> > usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
> > usb 1-2: Manufacturer: Creative Labs
> > uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
> > uvcvideo: Non-zero status (-110) in status completion handler.
> > 
> > I'm looking for about what means this code error, but I can't find
> > anything!!!
> > 
> > is Anybody help me?
> 
> According to /usr/include/asm-generic/errno.h, -110 is -ETIMEDOUT. According 
> to Documentation/usb/error-codes.txt, -ETIMEDOUT means
> 
> "Synchronous USB message functions use this code to indicate timeout expired 
> before the transfer completed, and no other error was reported by HC."
> 
> I'm surprised to see this error code reported in a URB completion handler.
> 





From laurent.pinchart at ideasonboard.com  Fri Jun 24 17:16:24 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 17:16:24 +0200
Subject: [Linux-uvc-devel] error code list
In-Reply-To: <1308926361.2194.18.camel@sacarino>
References: <1308068882.3072.17.camel@sacarino>
	<201106220241.45702.laurent.pinchart@ideasonboard.com>
	<1308926361.2194.18.camel@sacarino>
Message-ID: <201106241716.24679.laurent.pinchart@ideasonboard.com>

Hi Jorge,

On Friday 24 June 2011 16:39:21 Jorge Yesid Rios Ortiz wrote:
> Hi Laurent:
> 
> Thanks very much for your answer.
> I don't know what I must to be for to resolve this error.
> 
> Can you give me some information about how to solve this error?

Try to upgrade to a recent kernel. 2.6.14 is more than 5 years old.

> El mi?, 22-06-2011 a las 02:41 +0200, Laurent Pinchart escribi?:
> > On Tuesday 14 June 2011 18:28:02 Jorge Yesid Rios Ortiz wrote:
> > > Hi:
> > > 
> > > I have a problem when I tried to use this web-cam in my embedded
> > > system:
> > > 
> > > Camera:
> > > ID 041e:4058
> > > model: Live! Cam Optia AF
> > > manufacturer:  Creative Technology, Ltd
> > > 
> > > 
> > > Embedded system ARTILA M-501:
> > > CPU: ATMEL AT91RM9200, 180MHz
> > > OS: Linux 2.6.14-M5
> > > SDRAM: 64MB
> > > USB Host interface: 2x, USB 2.0 compliant
> > > UART: 4x, 921.6kbps
> > > 
> > > This cams works very fine when I used it on my PC with Linux, but when
> > > I plugged to my embedded system I get this message:
> > > 
> > > usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
> > > usb 1-2: Manufacturer: Creative Labs
> > > uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
> > > uvcvideo: Non-zero status (-110) in status completion handler.
> > > 
> > > I'm looking for about what means this code error, but I can't find
> > > anything!!!
> > > 
> > > is Anybody help me?
> > 
> > According to /usr/include/asm-generic/errno.h, -110 is -ETIMEDOUT.
> > According to Documentation/usb/error-codes.txt, -ETIMEDOUT means
> > 
> > "Synchronous USB message functions use this code to indicate timeout
> > expired before the transfer completed, and no other error was reported
> > by HC."
> > 
> > I'm surprised to see this error code reported in a URB completion
> > handler.

-- 
Regards,

Laurent Pinchart


From kirr at mns.spb.ru  Fri Jun 24 18:48:06 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Fri, 24 Jun 2011 20:48:06 +0400
Subject: [Linux-uvc-devel] [PATCH v2 0/2] USB: EHCI: Allow users to override
	80% max periodic bandwidth
Message-ID: <cover.1308933456.git.kirr@mns.spb.ru>


Changes since v1:


 - dropped RFC status as "this seems like the sort of feature somebody might
   reasonably want to use -- if they know exactly what they're doing";

 - new preparatory patch (1/2) which moves already-in-there sysfs code into
   ehci-sysfs.c;

 - moved uframe_periodic_max parameter from module option to sysfs attribute,
   so that it can be set per controller and at runtime, added validity checks;

 - clarified a bit bandwith analysis for 96% max periodic setup as noticed by
   Alan Stern;

 - clarified patch description saying that set in stone 80% max periodic is
   specified by USB 2.0;

Kirill Smelkov (2):
  USB: EHCI: Move sysfs related bits into ehci-sysfs.c
  USB: EHCI: Allow users to override 80% max periodic bandwidth

 drivers/usb/host/ehci-hcd.c   |   11 ++-
 drivers/usb/host/ehci-hub.c   |   75 -----------------
 drivers/usb/host/ehci-sched.c |   17 ++--
 drivers/usb/host/ehci-sysfs.c |  184 +++++++++++++++++++++++++++++++++++++++++
 drivers/usb/host/ehci.h       |    2 +
 5 files changed, 202 insertions(+), 87 deletions(-)
 create mode 100644 drivers/usb/host/ehci-sysfs.c

-- 
1.7.6.rc3



From kirr at mns.spb.ru  Fri Jun 24 18:48:07 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Fri, 24 Jun 2011 20:48:07 +0400
Subject: [Linux-uvc-devel] [PATCH 1/2] USB: EHCI: Move sysfs related bits
	into ehci-sysfs.c
In-Reply-To: <cover.1308933456.git.kirr@mns.spb.ru>
References: <cover.1308933456.git.kirr@mns.spb.ru>
Message-ID: <2a537d4dffef27cc7839eb19889eaa035edd44f9.1308933456.git.kirr@mns.spb.ru>

The only sysfs attr implemented so far is "companion" from ehci-hub.c,
but in the next patch we are going to add another sysfs file, so prior
to that let's structure things and move already-in-there sysfs code to
separate file.

Signed-off-by: Kirill Smelkov <kirr at mns.spb.ru>
---
 drivers/usb/host/ehci-hcd.c   |    5 +-
 drivers/usb/host/ehci-hub.c   |   75 --------------------------------
 drivers/usb/host/ehci-sysfs.c |   94 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 97 insertions(+), 77 deletions(-)
 create mode 100644 drivers/usb/host/ehci-sysfs.c

diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
index e18862c..8306155 100644
--- a/drivers/usb/host/ehci-hcd.c
+++ b/drivers/usb/host/ehci-hcd.c
@@ -336,6 +336,7 @@ static void ehci_work(struct ehci_hcd *ehci);
 #include "ehci-mem.c"
 #include "ehci-q.c"
 #include "ehci-sched.c"
+#include "ehci-sysfs.c"
 
 /*-------------------------------------------------------------------------*/
 
@@ -520,7 +521,7 @@ static void ehci_stop (struct usb_hcd *hcd)
 	ehci_reset (ehci);
 	spin_unlock_irq(&ehci->lock);
 
-	remove_companion_file(ehci);
+	remove_sysfs_files(ehci);
 	remove_debug_files (ehci);
 
 	/* root hub is shut down separately (first, when possible) */
@@ -754,7 +755,7 @@ static int ehci_run (struct usb_hcd *hcd)
 	 * since the class device isn't created that early.
 	 */
 	create_debug_files(ehci);
-	create_companion_file(ehci);
+	create_sysfs_files(ehci);
 
 	return 0;
 }
diff --git a/drivers/usb/host/ehci-hub.c b/drivers/usb/host/ehci-hub.c
index ea6184b..d9e8d71 100644
--- a/drivers/usb/host/ehci-hub.c
+++ b/drivers/usb/host/ehci-hub.c
@@ -471,29 +471,6 @@ static int ehci_bus_resume (struct usb_hcd *hcd)
 
 /*-------------------------------------------------------------------------*/
 
-/* Display the ports dedicated to the companion controller */
-static ssize_t show_companion(struct device *dev,
-			      struct device_attribute *attr,
-			      char *buf)
-{
-	struct ehci_hcd		*ehci;
-	int			nports, index, n;
-	int			count = PAGE_SIZE;
-	char			*ptr = buf;
-
-	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
-	nports = HCS_N_PORTS(ehci->hcs_params);
-
-	for (index = 0; index < nports; ++index) {
-		if (test_bit(index, &ehci->companion_ports)) {
-			n = scnprintf(ptr, count, "%d\n", index + 1);
-			ptr += n;
-			count -= n;
-		}
-	}
-	return ptr - buf;
-}
-
 /*
  * Sets the owner of a port
  */
@@ -528,58 +505,6 @@ static void set_owner(struct ehci_hcd *ehci, int portnum, int new_owner)
 	}
 }
 
-/*
- * Dedicate or undedicate a port to the companion controller.
- * Syntax is "[-]portnum", where a leading '-' sign means
- * return control of the port to the EHCI controller.
- */
-static ssize_t store_companion(struct device *dev,
-			       struct device_attribute *attr,
-			       const char *buf, size_t count)
-{
-	struct ehci_hcd		*ehci;
-	int			portnum, new_owner;
-
-	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
-	new_owner = PORT_OWNER;		/* Owned by companion */
-	if (sscanf(buf, "%d", &portnum) != 1)
-		return -EINVAL;
-	if (portnum < 0) {
-		portnum = - portnum;
-		new_owner = 0;		/* Owned by EHCI */
-	}
-	if (portnum <= 0 || portnum > HCS_N_PORTS(ehci->hcs_params))
-		return -ENOENT;
-	portnum--;
-	if (new_owner)
-		set_bit(portnum, &ehci->companion_ports);
-	else
-		clear_bit(portnum, &ehci->companion_ports);
-	set_owner(ehci, portnum, new_owner);
-	return count;
-}
-static DEVICE_ATTR(companion, 0644, show_companion, store_companion);
-
-static inline int create_companion_file(struct ehci_hcd *ehci)
-{
-	int	i = 0;
-
-	/* with integrated TT there is no companion! */
-	if (!ehci_is_TDI(ehci))
-		i = device_create_file(ehci_to_hcd(ehci)->self.controller,
-				       &dev_attr_companion);
-	return i;
-}
-
-static inline void remove_companion_file(struct ehci_hcd *ehci)
-{
-	/* with integrated TT there is no companion! */
-	if (!ehci_is_TDI(ehci))
-		device_remove_file(ehci_to_hcd(ehci)->self.controller,
-				   &dev_attr_companion);
-}
-
-
 /*-------------------------------------------------------------------------*/
 
 static int check_reset_complete (
diff --git a/drivers/usb/host/ehci-sysfs.c b/drivers/usb/host/ehci-sysfs.c
new file mode 100644
index 0000000..347c8cb
--- /dev/null
+++ b/drivers/usb/host/ehci-sysfs.c
@@ -0,0 +1,94 @@
+/*
+ * Copyright (C) 2001-2004 by David Brownell
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* this file is part of ehci-hcd.c */
+
+
+/* Display the ports dedicated to the companion controller */
+static ssize_t show_companion(struct device *dev,
+			      struct device_attribute *attr,
+			      char *buf)
+{
+	struct ehci_hcd		*ehci;
+	int			nports, index, n;
+	int			count = PAGE_SIZE;
+	char			*ptr = buf;
+
+	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
+	nports = HCS_N_PORTS(ehci->hcs_params);
+
+	for (index = 0; index < nports; ++index) {
+		if (test_bit(index, &ehci->companion_ports)) {
+			n = scnprintf(ptr, count, "%d\n", index + 1);
+			ptr += n;
+			count -= n;
+		}
+	}
+	return ptr - buf;
+}
+
+/*
+ * Dedicate or undedicate a port to the companion controller.
+ * Syntax is "[-]portnum", where a leading '-' sign means
+ * return control of the port to the EHCI controller.
+ */
+static ssize_t store_companion(struct device *dev,
+			       struct device_attribute *attr,
+			       const char *buf, size_t count)
+{
+	struct ehci_hcd		*ehci;
+	int			portnum, new_owner;
+
+	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
+	new_owner = PORT_OWNER;		/* Owned by companion */
+	if (sscanf(buf, "%d", &portnum) != 1)
+		return -EINVAL;
+	if (portnum < 0) {
+		portnum = - portnum;
+		new_owner = 0;		/* Owned by EHCI */
+	}
+	if (portnum <= 0 || portnum > HCS_N_PORTS(ehci->hcs_params))
+		return -ENOENT;
+	portnum--;
+	if (new_owner)
+		set_bit(portnum, &ehci->companion_ports);
+	else
+		clear_bit(portnum, &ehci->companion_ports);
+	set_owner(ehci, portnum, new_owner);
+	return count;
+}
+static DEVICE_ATTR(companion, 0644, show_companion, store_companion);
+
+static inline int create_sysfs_files(struct ehci_hcd *ehci)
+{
+	int	i = 0;
+
+	/* with integrated TT there is no companion! */
+	if (!ehci_is_TDI(ehci))
+		i = device_create_file(ehci_to_hcd(ehci)->self.controller,
+				       &dev_attr_companion);
+	return i;
+}
+
+static inline void remove_sysfs_files(struct ehci_hcd *ehci)
+{
+	/* with integrated TT there is no companion! */
+	if (!ehci_is_TDI(ehci))
+		device_remove_file(ehci_to_hcd(ehci)->self.controller,
+				   &dev_attr_companion);
+}
-- 
1.7.6.rc3



From kirr at mns.spb.ru  Fri Jun 24 18:48:08 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Fri, 24 Jun 2011 20:48:08 +0400
Subject: [Linux-uvc-devel] [PATCH v2 2/2] USB: EHCI: Allow users to override
	80% max periodic bandwidth
In-Reply-To: <cover.1308933456.git.kirr@mns.spb.ru>
References: <cover.1308933456.git.kirr@mns.spb.ru>
Message-ID: <9bddf2a6062b2fc27db87de58a335e7c6b920e53.1308933456.git.kirr@mns.spb.ru>

There are cases, when 80% max isochronous bandwidth is too limiting.

For example I have two USB video capture cards which stream uncompressed
video, and to stream full NTSC + PAL videos we'd need

    NTSC 640x480 YUV422 @30fps      ~17.6 MB/s
    PAL  720x576 YUV422 @25fps      ~19.7 MB/s

isoc bandwidth.

Now, due to limited alt settings in capture devices NTSC one ends up
streaming with max_pkt_size=2688  and  PAL with max_pkt_size=2892, both
with interval=1. In terms of microframe time allocation this gives

    NTSC    ~53us
    PAL     ~57us

and together

    ~110us  >  100us == 80% of 125us uframe time.

So those two devices can't work together simultaneously because the'd
over allocate isochronous bandwidth.

80% seemed a bit arbitrary to me, and I've tried to raise it to 90% and
both devices started to work together, so I though sometimes it would be
a good idea for users to override hardcoded default of max 80% isoc
bandwidth.

After all, isn't it a user who should decide how to load the bus? If I
can live with 10% or even 5% bulk bandwidth that should be ok. I'm a USB
newcomer, but that 80% set in stone by USB 2.0 specification seems to be
chosen pretty arbitrary to me, just to serve as a reasonable default.

NOTE: for two streams with max_pkt_size=3072 (worst case) both time
allocation would be 60us+60us=120us which is 96% periodic bandwidth
leaving 4% for bulk and control.  Alan Stern suggested that bulk then
would be problematic (less than 300*8 bittimes left per microframe), but
I think that is still enough for control traffic.

Signed-off-by: Kirill Smelkov <kirr at mns.spb.ru>
---
 drivers/usb/host/ehci-hcd.c   |    6 +++
 drivers/usb/host/ehci-sched.c |   17 +++----
 drivers/usb/host/ehci-sysfs.c |   98 +++++++++++++++++++++++++++++++++++++++--
 drivers/usb/host/ehci.h       |    2 +
 4 files changed, 109 insertions(+), 14 deletions(-)

diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
index 8306155..4ee62be 100644
--- a/drivers/usb/host/ehci-hcd.c
+++ b/drivers/usb/host/ehci-hcd.c
@@ -572,6 +572,12 @@ static int ehci_init(struct usb_hcd *hcd)
 	hcc_params = ehci_readl(ehci, &ehci->caps->hcc_params);
 
 	/*
+	 * by default set standard 80% (== 100 usec/uframe) max periodic
+	 * bandwidth as required by USB 2.0
+	 */
+	ehci->uframe_periodic_max = 100;
+
+	/*
 	 * hw default: 1K periodic list heads, one per frame.
 	 * periodic_size can shrink by USBCMD update if hcc_params allows.
 	 */
diff --git a/drivers/usb/host/ehci-sched.c b/drivers/usb/host/ehci-sched.c
index 6c9fbe3..2abf854 100644
--- a/drivers/usb/host/ehci-sched.c
+++ b/drivers/usb/host/ehci-sched.c
@@ -172,7 +172,7 @@ periodic_usecs (struct ehci_hcd *ehci, unsigned frame, unsigned uframe)
 		}
 	}
 #ifdef	DEBUG
-	if (usecs > 100)
+	if (usecs > ehci->uframe_periodic_max)
 		ehci_err (ehci, "uframe %d sched overrun: %d usecs\n",
 			frame * 8 + uframe, usecs);
 #endif
@@ -709,11 +709,8 @@ static int check_period (
 	if (uframe >= 8)
 		return 0;
 
-	/*
-	 * 80% periodic == 100 usec/uframe available
-	 * convert "usecs we need" to "max already claimed"
-	 */
-	usecs = 100 - usecs;
+	/* convert "usecs we need" to "max already claimed" */
+	usecs = ehci->uframe_periodic_max - usecs;
 
 	/* we "know" 2 and 4 uframe intervals were rejected; so
 	 * for period 0, check _every_ microframe in the schedule.
@@ -1286,9 +1283,9 @@ itd_slot_ok (
 {
 	uframe %= period;
 	do {
-		/* can't commit more than 80% periodic == 100 usec */
+		/* can't commit more than uframe_periodic_max usec */
 		if (periodic_usecs (ehci, uframe >> 3, uframe & 0x7)
-				> (100 - usecs))
+				> (ehci->uframe_periodic_max - usecs))
 			return 0;
 
 		/* we know urb->interval is 2^N uframes */
@@ -1345,7 +1342,7 @@ sitd_slot_ok (
 #endif
 
 		/* check starts (OUT uses more than one) */
-		max_used = 100 - stream->usecs;
+		max_used = ehci->uframe_periodic_max - stream->usecs;
 		for (tmp = stream->raw_mask & 0xff; tmp; tmp >>= 1, uf++) {
 			if (periodic_usecs (ehci, frame, uf) > max_used)
 				return 0;
@@ -1354,7 +1351,7 @@ sitd_slot_ok (
 		/* for IN, check CSPLIT */
 		if (stream->c_usecs) {
 			uf = uframe & 7;
-			max_used = 100 - stream->c_usecs;
+			max_used = ehci->uframe_periodic_max - stream->c_usecs;
 			do {
 				tmp = 1 << uf;
 				tmp <<= 8;
diff --git a/drivers/usb/host/ehci-sysfs.c b/drivers/usb/host/ehci-sysfs.c
index 347c8cb..fe212ef 100644
--- a/drivers/usb/host/ehci-sysfs.c
+++ b/drivers/usb/host/ehci-sysfs.c
@@ -74,21 +74,111 @@ static ssize_t store_companion(struct device *dev,
 }
 static DEVICE_ATTR(companion, 0644, show_companion, store_companion);
 
+
+/*
+ * Display / Set uframe_periodic_max
+ */
+static ssize_t show_uframe_periodic_max(struct device *dev,
+					struct device_attribute *attr,
+					char *buf)
+{
+	struct ehci_hcd		*ehci;
+	int			n;
+
+	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
+	n = scnprintf(buf, PAGE_SIZE, "%d\n", ehci->uframe_periodic_max);
+	return n;
+}
+
+
+static ssize_t store_uframe_periodic_max(struct device *dev,
+					struct device_attribute *attr,
+					const char *buf, size_t count)
+{
+	struct ehci_hcd		*ehci;
+	unsigned		uframe_periodic_max;
+	unsigned		frame, uframe, allocated;
+	unsigned long		flags;
+	ssize_t			ret;
+
+	ehci = hcd_to_ehci(bus_to_hcd(dev_get_drvdata(dev)));
+	if (sscanf(buf, "%u", &uframe_periodic_max) != 1)
+		return -EINVAL;
+
+	if (uframe_periodic_max < 100 || uframe_periodic_max >= 125) {
+		ehci_info(ehci, "rejecting invalid request for "
+				"uframe_periodic_max=%u\n", uframe_periodic_max);
+		return -EINVAL;
+	}
+
+	ret = -EINVAL;
+
+	/*
+	 * lock, so that our checking does not race with possible periodic
+	 * bandwidth allocation through submitting new urbs.
+	 */
+	spin_lock_irqsave (&ehci->lock, flags);
+
+	/*
+         * for request to decrease max periodic bandwidth, we have to check
+         * every microframe in the schedule to see whether the decrease is
+         * possible.
+	 */
+	if (uframe_periodic_max < ehci->uframe_periodic_max)
+		for (frame = 0; frame < ehci->periodic_size; ++frame)
+			for (uframe = 0; uframe < 7; ++uframe) {
+				allocated = periodic_usecs (ehci, frame, uframe);
+				if (allocated > uframe_periodic_max) {
+					ehci_info(ehci,
+		"cannot decrease uframe_periodic_max becase periodic bandwidth "
+		"is already allocated (%u > %u)\n",
+						  allocated, uframe_periodic_max);
+					goto out_unlock;
+				}
+			}
+
+	/* increasing is always ok */
+
+	ehci_info(ehci, "setting max periodic bandwidth to %u%% "
+			"(== %u usec/uframe)\n",
+			100*uframe_periodic_max/125, uframe_periodic_max);
+
+	if (uframe_periodic_max != 100)
+		ehci_warn(ehci, "max periodic bandwidth set is non-standard\n");
+
+	ehci->uframe_periodic_max = uframe_periodic_max;
+	ret = count;
+
+out_unlock:
+	spin_unlock_irqrestore (&ehci->lock, flags);
+	return ret;
+}
+static DEVICE_ATTR(uframe_periodic_max, 0644, show_uframe_periodic_max, store_uframe_periodic_max);
+
+
 static inline int create_sysfs_files(struct ehci_hcd *ehci)
 {
+	struct device	*controller = ehci_to_hcd(ehci)->self.controller;
 	int	i = 0;
 
 	/* with integrated TT there is no companion! */
 	if (!ehci_is_TDI(ehci))
-		i = device_create_file(ehci_to_hcd(ehci)->self.controller,
-				       &dev_attr_companion);
+		i = device_create_file(controller, &dev_attr_companion);
+	if (i)
+		goto out;
+
+	i = device_create_file(controller, &dev_attr_uframe_periodic_max);
+out:
 	return i;
 }
 
 static inline void remove_sysfs_files(struct ehci_hcd *ehci)
 {
+	struct device	*controller = ehci_to_hcd(ehci)->self.controller;
+
 	/* with integrated TT there is no companion! */
 	if (!ehci_is_TDI(ehci))
-		device_remove_file(ehci_to_hcd(ehci)->self.controller,
-				   &dev_attr_companion);
+		device_remove_file(controller, &dev_attr_companion);
+
+	device_remove_file(controller, &dev_attr_uframe_periodic_max);
 }
diff --git a/drivers/usb/host/ehci.h b/drivers/usb/host/ehci.h
index bd6ff48..fa3129f 100644
--- a/drivers/usb/host/ehci.h
+++ b/drivers/usb/host/ehci.h
@@ -87,6 +87,8 @@ struct ehci_hcd {			/* one per controller */
 	union ehci_shadow	*pshadow;	/* mirror hw periodic table */
 	int			next_uframe;	/* scan periodic, start here */
 	unsigned		periodic_sched;	/* periodic activity count */
+	unsigned		uframe_periodic_max; /* max periodic time per uframe */
+
 
 	/* list of itds & sitds completed while clock_frame was still active */
 	struct list_head	cached_itd_list;
-- 
1.7.6.rc3



From kirr at mns.spb.ru  Fri Jun 24 18:54:32 2011
From: kirr at mns.spb.ru (Kirill Smelkov)
Date: Fri, 24 Jun 2011 20:54:32 +0400
Subject: [Linux-uvc-devel] [RFC,
	PATCH] USB: EHCI: Allow users to override 80% max	periodic bandwidth
In-Reply-To: <Pine.LNX.4.44L0.1106231312270.2033-100000@iolanthe.rowland.org>
References: <20110623140539.GA4403@tugrik.mns.mnsspb.ru>
	<Pine.LNX.4.44L0.1106231312270.2033-100000@iolanthe.rowland.org>
Message-ID: <20110624165432.GA6415@tugrik.mns.mnsspb.ru>

On Thu, Jun 23, 2011 at 01:14:04PM -0400, Alan Stern wrote:
> On Thu, 23 Jun 2011, Kirill Smelkov wrote:
> 
> > > At 480 Mb/s, each microframe holds 7500 bytes (less if you count 
> > > bit-stuffing).  4% of that is 300 bytes, which is not enough for a 
> > > 512-byte bulk packet.  I think you'd run into trouble trying to do any 
> > > serious bulk transfers on such a tight schedule.
> > 
> > Yes, you seem to be right.
> > 
> > I still think 4% is maybe enough for control traffic.
> 
> It should be.

Ok then.

At least devices could be start/stopped, and frankly if someone loads
the bus with two high-bandwidth isoc streams, there is no reason to
expect any bulk transfer to happen at all.

> > > > @@ -571,6 +579,14 @@ static int ehci_init(struct usb_hcd *hcd)
> > > >  	hcc_params = ehci_readl(ehci, &ehci->caps->hcc_params);
> > > >  
> > > >  	/*
> > > > +	 * tell user, if using non-standard (80% == 100 usec/uframe) bandwidth
> > > > +	 */
> > > > +	if (uframe_periodic_max != 100)
> > > > +		ehci_info(ehci, "using non-standard max periodic bandwith "
> > > > +				"(%u%% == %u usec/uframe)",
> > > > +				100*uframe_periodic_max/125, uframe_periodic_max);
> > > > +
> > > > +	/*
> > > 
> > > Check for invalid values.  This should never be less than 100 or 
> > > greater than 125.
> > 
> > Ok. By the way, why should we limit it to be not less than 100?
> > Likewise, a user who knows exactly what he/she is doing could limit
> > periodic bandwidth to be less than 80% required by USB specification.
> 
> What's the point?  If you want to use less than 80% of your bandwidth 
> for periodic transfers, go ahead and do so.  You don't need to change 
> the limit.

I though it would be good for generality -- i.e. if someone wants to
limit maximum isoc bandwidth to say 50% so that would never be
overallocated by that limit that would be handy.

But I agree - it's a bit artificial, so in updated patch I've left what
you originally suggested to be 100 <= uframe_periodic_max < 125 (ommitting =125).


Thanks,
Kirill


From laurent.pinchart at ideasonboard.com  Fri Jun 24 19:25:32 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 19:25:32 +0200
Subject: [Linux-uvc-devel] Looking for upside down uvc cams
In-Reply-To: <BANLkTin2fuhHa4YgOUvADsyQsyc1fO=gMQ@mail.gmail.com>
References: <1306060388.2916.0.camel@stefano-K52F>
	<201106181648.23373.laurent.pinchart@ideasonboard.com>
	<BANLkTin2fuhHa4YgOUvADsyQsyc1fO=gMQ@mail.gmail.com>
Message-ID: <201106241925.32495.laurent.pinchart@ideasonboard.com>

Hi Stefano,

On Sunday 19 June 2011 15:09:30 stefano.mazzoni90 at gmail.com wrote:
> Hi, yes. Using Skype on Fedora Lovelock I have webcam upside-down (only
> with it, instead if I use Cheese webcam is ok).

Then libv4l already supports your webcam. Google for skype + libv4l to find 
out how to use it in skype.

> Thanks for you support! :) I attach output of lsusb -v run as su.

Thank you. The device is already included in the supported devices list.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Fri Jun 24 19:34:28 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 19:34:28 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106061713110.19493@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
Message-ID: <201106241934.28265.laurent.pinchart@ideasonboard.com>

Hi Carl,

On Tuesday 07 June 2011 02:31:17 Carl Michal wrote:
> Hello,
> 
> I'm having some trouble with a Quanta integrated webcam.  It identifies
> itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is built
> in to a Dell XPS-15 (L501X).

Could you please send me the output of

lsusb -v -d 0408:2fb1

running as root if possible ?

> The uvcvideo module works, but the video stutters and has some
> distortions, even at low resolutions and frame rates.
> 
> With the Camera Output set to MJPG (in guvcview) "Ignoring empty buffer
> ..." messages occur with most glitches.
> 
> If the output is set to YV12, the errors look like:
> 
> VIDIOC_DQBUF - Unable to dequeue buffer : Input/output error
> Error grabbing image
> libv4l2: error converting / decoding frame data: v4l-convert: error
> parsing JPEG header: Not a JPG file ?
> 
> With cheese, the video preview looks ok, but video capture is
> unusable - the video stutters badly at low resolution, and the capture
> hangs at high resolution (the program doesn't hang, but after a couple of
> frames no more get captured).
> 
> This is kernel 2.6.39 on gentoo with libv4l-0.8.3
> 
> Any advice would be appreciated.

I'll answer in the mail thread.

-- 
Regards,

Laurent Pinchart


From jyrios at die.upm.es  Fri Jun 24 19:45:06 2011
From: jyrios at die.upm.es (Jorge Yesid Rios Ortiz)
Date: Fri, 24 Jun 2011 19:45:06 +0200
Subject: [Linux-uvc-devel] error code list
In-Reply-To: <201106241716.24679.laurent.pinchart@ideasonboard.com>
References: <1308068882.3072.17.camel@sacarino>
	<201106220241.45702.laurent.pinchart@ideasonboard.com>
	<1308926361.2194.18.camel@sacarino>
	<201106241716.24679.laurent.pinchart@ideasonboard.com>
Message-ID: <1308937506.2194.62.camel@sacarino>


Hello laurent:

You propose to me: 
"Try to upgrade to a recent kernel. 2.6.14 is more than 5 years old."

It isn't possible to use a newer/newest kernel. I tried to compile
different versions of kernels  (2.6.18, 2.6.20, 2.6.22,
2.6.24....2.6.38 ) and basically is impossible for some reasons:


1) the toolchains is very old (3.3.2 version).  I wrote to ARTILA's
support tech  asking about a new toolchain because I need to compile a
newer kernel and your answers was: "this is the last toolchains for your
board, you must to use this". I download different versions of ARM's
toolchains (like code sourcery lite version
http://www.codesourcery.com/sgpp/lite/arm  and others more), if I well I
can to compile a c or c++ file, when I try to compile or I upload to my
target the the
executable, isn't working.

2) Russell King ( he supports the ARM Linux kernel community
http://www.arm.linux.org.uk ) on your site wrote this:
<<Downloading an ARM patch: You only need this step if you are using a
kernel prior to 2.6.0-test2. There are no -rmk or -vrs patches for later
kernels.>>

I suppose that recent versions of kernel has support for ARM
architecture, but, when I tried to compile different versions of
kernels, always I obtain different errors.

3) On ARTILA ftp site, the "last kernel version" is 2.6.14-M5 kernel
version update to september 15 / 2010, I think. (for me it's a bad joke
to say "last kernel version" to a 2.6.14 version).

I read something about URB and I  don't know what I must to be for to
solve this error.

If you have some idea about how to proceeded I will appreciate very
much.







El vie, 24-06-2011 a las 17:16 +0200, Laurent Pinchart escribi?:
> Hi Jorge,
> 
> On Friday 24 June 2011 16:39:21 Jorge Yesid Rios Ortiz wrote:
> > Hi Laurent:
> > 
> > Thanks very much for your answer.
> > I don't know what I must to be for to resolve this error.
> > 
> > Can you give me some information about how to solve this error?
> 
> Try to upgrade to a recent kernel. 2.6.14 is more than 5 years old.
> 
> > El mi?, 22-06-2011 a las 02:41 +0200, Laurent Pinchart escribi?:
> > > On Tuesday 14 June 2011 18:28:02 Jorge Yesid Rios Ortiz wrote:
> > > > Hi:
> > > > 
> > > > I have a problem when I tried to use this web-cam in my embedded
> > > > system:
> > > > 
> > > > Camera:
> > > > ID 041e:4058
> > > > model: Live! Cam Optia AF
> > > > manufacturer:  Creative Technology, Ltd
> > > > 
> > > > 
> > > > Embedded system ARTILA M-501:
> > > > CPU: ATMEL AT91RM9200, 180MHz
> > > > OS: Linux 2.6.14-M5
> > > > SDRAM: 64MB
> > > > USB Host interface: 2x, USB 2.0 compliant
> > > > UART: 4x, 921.6kbps
> > > > 
> > > > This cams works very fine when I used it on my PC with Linux, but when
> > > > I plugged to my embedded system I get this message:
> > > > 
> > > > usb 1-2: new full speed USB device using at91rm9200-ohci and address 5
> > > > usb 1-2: Manufacturer: Creative Labs
> > > > uvcvideo: Found UVC 1.00 device <unnamed> (041e:4058)
> > > > uvcvideo: Non-zero status (-110) in status completion handler.
> > > > 
> > > > I'm looking for about what means this code error, but I can't find
> > > > anything!!!
> > > > 
> > > > is Anybody help me?
> > > 
> > > According to /usr/include/asm-generic/errno.h, -110 is -ETIMEDOUT.
> > > According to Documentation/usb/error-codes.txt, -ETIMEDOUT means
> > > 
> > > "Synchronous USB message functions use this code to indicate timeout
> > > expired before the transfer completed, and no other error was reported
> > > by HC."
> > > 
> > > I'm surprised to see this error code reported in a URB completion
> > > handler.
> 




From laurent.pinchart at ideasonboard.com  Fri Jun 24 20:06:59 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 20:06:59 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106130925420.4049@tristan>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<1307979375.7607.7.camel@zwerg>
	<alpine.LNX.2.00.1106130925420.4049@tristan>
Message-ID: <201106242007.00138.laurent.pinchart@ideasonboard.com>

Hi Carl,

On Monday 13 June 2011 18:37:43 Carl Michal wrote:
> On Mon, 13 Jun 2011, Alexey Fisher wrote:
> > On So, 2011-06-12 at 21:05 -0700, Carl Michal wrote:
> >> On Sun, 12 Jun 2011, Alexey Fisher wrote:
> >>> Am Samstag, den 11.06.2011, 23:33 -0700 schrieb Carl Michal:
> >>>> On Sun, 12 Jun 2011, Alexey Fisher wrote:
> >>>>> On Sa, 2011-06-11 at 21:55 -0700, Carl Michal wrote:

[snip]

> >>>>>> Most frames are terminated with EOF, but occasionally an FID and EOF
> >>>>>> are found in the same packet. So two buffers are marked as
> >>>>>> completed, but the second one shouldn't be (I don't think).

[snip]

> > I just realized: NO_FID quirk, do not disables FID handling if there is
> > some wrong FID bit appear. It assume webcam do not use FID bit at all.
> > 
> > Try attached patch and load module with NO_FID quirk - quirks=0x10
> 
> I think you nailed it.  Every frame looks perfect now.

I don't think that's the right solution. If FID toggling is completely ignored,
loosing an EOF packet will cause the driver to loose a frame.

Quoting one of your logs:

> uvcvideo: Frame complete (FID bit toggled) buf: 3, bytes: 63504.
> uvcvideo: Frame complete (EOF found) buf: 0, bytes: 1072.

Your device either sets the EOF bit too late or toggles the FID bit too early.
Given that the previous buffers are 64684 and 64728 bytes in size, my guess is
that FID is toggled too early.

We can try to ignore the FID bit being toggled if EOF is set. Could you please
try this patch:

diff --git a/drivers/media/video/uvc/uvc_video.c b/drivers/media/video/uvc/uvc_video.c
index fc766b9..748ec99 100644
--- a/drivers/media/video/uvc/uvc_video.c
+++ b/drivers/media/video/uvc/uvc_video.c
@@ -426,7 +426,8 @@ static int uvc_video_decode_start(struct uvc_streaming *stream,
 		return -ENODATA;
 	}
 
-	fid = data[1] & UVC_STREAM_FID;
+	fid = data[1] & UVC_STREAM_EOF
+	    ? stream->last_fid : data[1] & UVC_STREAM_FID;
 
 	/* Increase the sequence number regardless of any buffer states, so
 	 * that discontinuous sequence numbers always indicate lost frames.

> The trace shows a few of these:
> 
> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> 
> but I don't see corrupt frames any more in either MJPG or YUYV (at 640x480
> anyway) - in MJPG all the frames have the right size.

If the error bit is set, the payload is dropped as the driver considers it to
be corrupted. For uncompressed formats we can try processing the packet is if
it were correct. This will produce frame corruption, but should avoid part of
the image from being shifted. We can additionally mark the V4L2 buffer as
being faulty. For compressed data this will likely not help.

> There is a some weirdness with frame rates depending on the exposure
> setting: 1) Exposure, auto gives 4 options: auto priority mode,
> manual mode, shutter priority mode, and aperture priority mode.  Auto and
> shutter don't seem to be settable (errors from guvcview when chosen).

This will be fixed in kernel 3.0.

> There is also an "Exposure, auto priority" checkbox.
> 
> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> 
> But I can't really complain at this point - the corrupt frames are gone.
> Will that quirk be added to the driver (usb id is: 0408:2fb1)?

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Fri Jun 24 20:08:45 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 20:08:45 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308037187.5663.10.camel@mini>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<alpine.LNX.2.00.1106132201500.17792@tristan>
	<1308037187.5663.10.camel@mini>
Message-ID: <201106242008.45895.laurent.pinchart@ideasonboard.com>

Hi Alexey,

On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
> Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> > > Hi,
> > > 
> > > I think you nailed it.  Every frame looks perfect now.  The trace shows
> > > a few of these:
> > > 
> > > Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> > > 
> > > but I don't see corrupt frames any more in either MJPG or YUYV (at
> > > 640x480 anyway) - in MJPG all the frames have the right size.
> > > 
> > > There is a some weirdness with frame rates depending on the exposure
> > > setting: 1) Exposure, auto gives 4 options: auto priority mode, manual
> > > mode, shutter priority mode, and aperture priority mode.  Auto and
> > > shutter don't seem to be settable (errors from guvcview when chosen).
> > > There is also an "Exposure, auto priority" checkbox.
> > > 
> > > Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> > > 
> > > But I can't really complain at this point - the corrupt frames are
> > > gone. Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> > > 
> > > Thanks,
> > 
> > Hi,
> > 
> > it seems like I am much better off by fully disabling FID (with your
> > patch) than before.  With the patch, YUYV frames are _always_ the right
> > size.  There are still some problems:
> > 
> > 1) corrupt frames - with part of the image missing or the image
> > displaced. Sometimes (but definitely not always) these occur at the same
> > time as a trace message saying the error bit is set.
> > 
> > 2) sometimes the camera just won't start.  when guvcview (or luvcview) is
> > started, no frames come back from the camera.  There is a light next to
> > the camera that comes on to indicate it should be active, but no frames
> > arrive.  There seems to be a fairly strong correlation with using
> > luvcview (which from the traces seems to use some different mechanism to
> > get frames from the driver from guvcview.  guvcview polls, luvcview
> > doesn't).  Sometimes just restarting guvcview several times will work
> > and the camera eventually starts.  Sometimes just changing resolution or
> > frame rates succeeds in starting the camera.  I haven't found anything
> > reproducible.  I do not think this is related to your patch, as it did
> > happen once before your patch was applied. Unloading and reloading the
> > uvcvideo and ehci_hcd
> > 
> > modules does not consistently solve it. guvcview just lists:
> >   Could not grab image (select timeout): Resource temporarily unavailable
> > 
> > and the trace shows guvcview polling, but nothing else going on.
> > 
> > I have tried adding the other quirks to the FID quirk, but haven't seen
> > any improvement with any others.
> > 
> > Thanks for you help -
> > 
> > Carl
> 
> Webcam returns error in the middle of some frame, theoretically we
> should drop complete frame. But current uvcvideo just gather data and
> assume the cam will resend previous parts to complete the frame.
> 
> Try attached patch additionally to my previous one.

What about not ignoring the data in addition to setting buf->error to 1 ? This 
won't solve corruptiong, but would avoid the image effect for uncompressed 
formats.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Fri Jun 24 20:10:27 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 20:10:27 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106142327500.14184@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
Message-ID: <201106242010.27505.laurent.pinchart@ideasonboard.com>

Hi Carl,

On Wednesday 15 June 2011 08:31:32 Carl Michal wrote:
> On Tue, 14 Jun 2011, Alexey Fisher wrote:
> > Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> >>> Hi,
> >>> 
> >>> I think you nailed it.  Every frame looks perfect now.  The trace shows
> >>> a few of these:
> >>> 
> >>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> >>> 
> >>> but I don't see corrupt frames any more in either MJPG or YUYV (at
> >>> 640x480 anyway) - in MJPG all the frames have the right size.
> >>> 
> >>> There is a some weirdness with frame rates depending on the exposure
> >>> setting: 1) Exposure, auto gives 4 options: auto priority mode, manual
> >>> mode, shutter priority mode, and aperture priority mode.  Auto and
> >>> shutter don't seem to be settable (errors from guvcview when chosen).
> >>> There is also an "Exposure, auto priority" checkbox.
> >>> 
> >>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> >>> 
> >>> But I can't really complain at this point - the corrupt frames are
> >>> gone. Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> >>> 
> >>> Thanks,
> >> 
> >> Hi,
> >> 
> >> it seems like I am much better off by fully disabling FID (with your
> >> patch) than before.  With the patch, YUYV frames are _always_ the right
> >> size.  There are still some problems:
> >> 
> >> 1) corrupt frames - with part of the image missing or the image
> >> displaced. Sometimes (but definitely not always) these occur at the
> >> same time as a trace message saying the error bit is set.
> >> 
> >> 2) sometimes the camera just won't start.  when guvcview (or luvcview)
> >> is started, no frames come back from the camera.  There is a light next
> >> to the camera that comes on to indicate it should be active, but no
> >> frames arrive.  There seems to be a fairly strong correlation with
> >> using luvcview (which from the traces seems to use some different
> >> mechanism to get frames from the driver from guvcview.  guvcview polls,
> >> luvcview doesn't).  Sometimes just restarting guvcview several times
> >> will work and the camera eventually starts.  Sometimes just changing
> >> resolution or frame rates succeeds in starting the camera.  I haven't
> >> found anything reproducible.  I do not think this is related to your
> >> patch, as it did happen once before your patch was applied. Unloading
> >> and reloading the uvcvideo and ehci_hcd
> >> 
> >> modules does not consistently solve it. guvcview just lists:
> >>   Could not grab image (select timeout): Resource temporarily
> >>   unavailable
> >> 
> >> and the trace shows guvcview polling, but nothing else going on.
> >> 
> >> I have tried adding the other quirks to the FID quirk, but haven't seen
> >> any improvement with any others.
> >> 
> >> Thanks for you help -
> >> 
> >> Carl
> > 
> > Webcam returns error in the middle of some frame, theoretically we
> > should drop complete frame. But current uvcvideo just gather data and
> > assume the cam will resend previous parts to complete the frame.
> > 
> > Try attached patch additionally to my previous one.
> 
> Hi,
> 
> its very hard to say if this helps or not.  There are still corrupt
> frames, and some seem to occur at about the same time as the error bit
> trace messages, but some don't show anything unusual in the traces that
> I've noticed yet.
> 
> Since all the uncompressed frames were the right size (even ones where the
> error bit was set somewhere) those frames are at least complete.

Could you please add the packet size to the "Dropping payload (error bit set)" 
message ? I'm curious to see whether the error bit is set in empty packets 
only (len == data[0]) or in non-empty payloads as well.

> Is there some convenient way to capture just those frames with the error
> bit set?

-- 
Regards,

Laurent Pinchart


From bug-track at fisher-privat.net  Fri Jun 24 20:25:03 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Fri, 24 Jun 2011 20:25:03 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <201106242008.45895.laurent.pinchart@ideasonboard.com>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<alpine.LNX.2.00.1106132201500.17792@tristan>
	<1308037187.5663.10.camel@mini>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
Message-ID: <1308939903.16863.3.camel@mini>

Am Freitag, den 24.06.2011, 20:08 +0200 schrieb Laurent Pinchart:
> Hi Alexey,
> 
> On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
> > Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> > > > Hi,
> > > > 
> > > > I think you nailed it.  Every frame looks perfect now.  The trace shows
> > > > a few of these:
> > > > 
> > > > Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> > > > 
> > > > but I don't see corrupt frames any more in either MJPG or YUYV (at
> > > > 640x480 anyway) - in MJPG all the frames have the right size.
> > > > 
> > > > There is a some weirdness with frame rates depending on the exposure
> > > > setting: 1) Exposure, auto gives 4 options: auto priority mode, manual
> > > > mode, shutter priority mode, and aperture priority mode.  Auto and
> > > > shutter don't seem to be settable (errors from guvcview when chosen).
> > > > There is also an "Exposure, auto priority" checkbox.
> > > > 
> > > > Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> > > > 
> > > > But I can't really complain at this point - the corrupt frames are
> > > > gone. Will that quirk be added to the driver (usb id is: 0408:2fb1)?
> > > > 
> > > > Thanks,
> > > 
> > > Hi,
> > > 
> > > it seems like I am much better off by fully disabling FID (with your
> > > patch) than before.  With the patch, YUYV frames are _always_ the right
> > > size.  There are still some problems:
> > > 
> > > 1) corrupt frames - with part of the image missing or the image
> > > displaced. Sometimes (but definitely not always) these occur at the same
> > > time as a trace message saying the error bit is set.
> > > 
> > > 2) sometimes the camera just won't start.  when guvcview (or luvcview) is
> > > started, no frames come back from the camera.  There is a light next to
> > > the camera that comes on to indicate it should be active, but no frames
> > > arrive.  There seems to be a fairly strong correlation with using
> > > luvcview (which from the traces seems to use some different mechanism to
> > > get frames from the driver from guvcview.  guvcview polls, luvcview
> > > doesn't).  Sometimes just restarting guvcview several times will work
> > > and the camera eventually starts.  Sometimes just changing resolution or
> > > frame rates succeeds in starting the camera.  I haven't found anything
> > > reproducible.  I do not think this is related to your patch, as it did
> > > happen once before your patch was applied. Unloading and reloading the
> > > uvcvideo and ehci_hcd
> > > 
> > > modules does not consistently solve it. guvcview just lists:
> > >   Could not grab image (select timeout): Resource temporarily unavailable
> > > 
> > > and the trace shows guvcview polling, but nothing else going on.
> > > 
> > > I have tried adding the other quirks to the FID quirk, but haven't seen
> > > any improvement with any others.
> > > 
> > > Thanks for you help -
> > > 
> > > Carl
> > 
> > Webcam returns error in the middle of some frame, theoretically we
> > should drop complete frame. But current uvcvideo just gather data and
> > assume the cam will resend previous parts to complete the frame.
> > 
> > Try attached patch additionally to my previous one.
> 
> What about not ignoring the data in addition to setting buf->error to 1 ? This 
> won't solve corruptiong, but would avoid the image effect for uncompressed 
> formats.

My english (and c) are not my bet qualities. But currently i'm really
not sure if i understand. Was it sarcasm?

-- 
Regards,
        Alexey



From laurent.pinchart at ideasonboard.com  Fri Jun 24 20:27:31 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 20:27:31 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106171433120.26141@tristan>
References: <alpine.LNX.2.00.1106142327500.14184@tristan>
	<alpine.LNX.2.00.1106171144150.27340@spider.phas.ubc.ca>
	<alpine.LNX.2.00.1106171433120.26141@tristan>
Message-ID: <201106242027.31390.laurent.pinchart@ideasonboard.com>

Hi Carl,

On Friday 17 June 2011 23:33:25 Carl Michal wrote:

[snip]

> I've been looking at lengths of packets and headers in packets where these
> unexpected STI, RES, EOH and ERROR bits are set.
> 
> There are many things that seem inconsistent, but there are some patterns
> that come up repeatedly.  For example getting a packet with an ERROR bit
> set that has a length of 2048 and a header length (from data[0]) of 127 or
> 125 or 110 or some other big number. That packet gets discarded because of
> the error bit, but then when the frame ends, it is 2048 bytes shorter than
> it should be.  I've also seen that with a packet length of 1024 and the
> frame ending 1024 bytes short.
> 
> It looks like the header has somehow disappeared and the image data is
> being interpreted as header.

Good catch.

> To test this, I put in checks in uvc_video_decode_isoc for any EOH, STI, RES
> or ERROR - if any are set (or unset for EOH) then to return a header length
> of 0, so that the entire packet gets used as image data.
> 
> This by no means solves all my problems, but with that - I do find at least
> some frames assembled this way are complete and uncorrupted.
> 
> So somehow some headers are disappearing?

That's totally against the UVC specs. We could work around it in the driver if 
there was a reliable way to detect that a frame doesn't start with a header, 
but that's not possible. I would consider the camera as completely broken.

-- 
Regards,

Laurent Pinchart


From laurent.pinchart at ideasonboard.com  Fri Jun 24 20:31:14 2011
From: laurent.pinchart at ideasonboard.com (Laurent Pinchart)
Date: Fri, 24 Jun 2011 20:31:14 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308939903.16863.3.camel@mini>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
	<1308939903.16863.3.camel@mini>
Message-ID: <201106242031.14919.laurent.pinchart@ideasonboard.com>

Hi Alexey,

On Friday 24 June 2011 20:25:03 Alexey Fisher wrote:
> Am Freitag, den 24.06.2011, 20:08 +0200 schrieb Laurent Pinchart:
> > On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
> > > Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> > > > > Hi,
> > > > > 
> > > > > I think you nailed it.  Every frame looks perfect now.  The trace
> > > > > shows a few of these:
> > > > > 
> > > > > Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> > > > > 
> > > > > but I don't see corrupt frames any more in either MJPG or YUYV (at
> > > > > 640x480 anyway) - in MJPG all the frames have the right size.
> > > > > 
> > > > > There is a some weirdness with frame rates depending on the
> > > > > exposure setting: 1) Exposure, auto gives 4 options: auto priority
> > > > > mode, manual mode, shutter priority mode, and aperture priority
> > > > > mode.  Auto and shutter don't seem to be settable (errors from
> > > > > guvcview when chosen). There is also an "Exposure, auto priority"
> > > > > checkbox.
> > > > > 
> > > > > Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> > > > > 
> > > > > But I can't really complain at this point - the corrupt frames are
> > > > > gone. Will that quirk be added to the driver (usb id is:
> > > > > 0408:2fb1)?
> > > > > 
> > > > > Thanks,
> > > > 
> > > > Hi,
> > > > 
> > > > it seems like I am much better off by fully disabling FID (with your
> > > > patch) than before.  With the patch, YUYV frames are _always_ the
> > > > right size.  There are still some problems:
> > > > 
> > > > 1) corrupt frames - with part of the image missing or the image
> > > > displaced. Sometimes (but definitely not always) these occur at the
> > > > same time as a trace message saying the error bit is set.
> > > > 
> > > > 2) sometimes the camera just won't start.  when guvcview (or
> > > > luvcview) is started, no frames come back from the camera.  There is
> > > > a light next to the camera that comes on to indicate it should be
> > > > active, but no frames arrive.  There seems to be a fairly strong
> > > > correlation with using luvcview (which from the traces seems to use
> > > > some different mechanism to get frames from the driver from
> > > > guvcview.  guvcview polls, luvcview doesn't).  Sometimes just
> > > > restarting guvcview several times will work and the camera
> > > > eventually starts.  Sometimes just changing resolution or frame
> > > > rates succeeds in starting the camera.  I haven't found anything
> > > > reproducible.  I do not think this is related to your patch, as it
> > > > did happen once before your patch was applied. Unloading and
> > > > reloading the uvcvideo and ehci_hcd
> > > > 
> > > > modules does not consistently solve it. guvcview just lists:
> > > >   Could not grab image (select timeout): Resource temporarily
> > > >   unavailable
> > > > 
> > > > and the trace shows guvcview polling, but nothing else going on.
> > > > 
> > > > I have tried adding the other quirks to the FID quirk, but haven't
> > > > seen any improvement with any others.
> > > > 
> > > > Thanks for you help -
> > > > 
> > > > Carl
> > > 
> > > Webcam returns error in the middle of some frame, theoretically we
> > > should drop complete frame. But current uvcvideo just gather data and
> > > assume the cam will resend previous parts to complete the frame.
> > > 
> > > Try attached patch additionally to my previous one.
> > 
> > What about not ignoring the data in addition to setting buf->error to 1 ?
> > This won't solve corruptiong, but would avoid the image effect for
> > uncompressed formats.
> 
> My english (and c) are not my bet qualities. But currently i'm really
> not sure if i understand. Was it sarcasm?

Not at all :-)

If the error bit is set, the packet will be dropped. For uncompressed formats, 
dropping the data will shift part of the frame up/left and possibly mess the 
color ups. Instead of doing that, we could handle packets with the error bit 
set normally. The data will likely be corrupted, but that will "just" corrupt 
a small part of the frame, and won't shift the rest of the frame up/left. We 
should then also set buf->error to 1 as done in your patch, to tell 
applications that the V4L2 buffer contains errors.

-- 
Regards,

Laurent Pinchart


From bug-track at fisher-privat.net  Fri Jun 24 21:02:15 2011
From: bug-track at fisher-privat.net (Alexey Fisher)
Date: Fri, 24 Jun 2011 21:02:15 +0200
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <201106242031.14919.laurent.pinchart@ideasonboard.com>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
	<1308939903.16863.3.camel@mini>
	<201106242031.14919.laurent.pinchart@ideasonboard.com>
Message-ID: <1308942135.16863.13.camel@mini>

Am Freitag, den 24.06.2011, 20:31 +0200 schrieb Laurent Pinchart:
> Hi Alexey,
> 
> On Friday 24 June 2011 20:25:03 Alexey Fisher wrote:
> > Am Freitag, den 24.06.2011, 20:08 +0200 schrieb Laurent Pinchart:
> > > On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
> > > > Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
> > > > > > Hi,
> > > > > > 
> > > > > > I think you nailed it.  Every frame looks perfect now.  The trace
> > > > > > shows a few of these:
> > > > > > 
> > > > > > Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
> > > > > > 
> > > > > > but I don't see corrupt frames any more in either MJPG or YUYV (at
> > > > > > 640x480 anyway) - in MJPG all the frames have the right size.
> > > > > > 
> > > > > > There is a some weirdness with frame rates depending on the
> > > > > > exposure setting: 1) Exposure, auto gives 4 options: auto priority
> > > > > > mode, manual mode, shutter priority mode, and aperture priority
> > > > > > mode.  Auto and shutter don't seem to be settable (errors from
> > > > > > guvcview when chosen). There is also an "Exposure, auto priority"
> > > > > > checkbox.
> > > > > > 
> > > > > > Frame rates drop dramatically in manual mode (to 10-15fps from 30).
> > > > > > 
> > > > > > But I can't really complain at this point - the corrupt frames are
> > > > > > gone. Will that quirk be added to the driver (usb id is:
> > > > > > 0408:2fb1)?
> > > > > > 
> > > > > > Thanks,
> > > > > 
> > > > > Hi,
> > > > > 
> > > > > it seems like I am much better off by fully disabling FID (with your
> > > > > patch) than before.  With the patch, YUYV frames are _always_ the
> > > > > right size.  There are still some problems:
> > > > > 
> > > > > 1) corrupt frames - with part of the image missing or the image
> > > > > displaced. Sometimes (but definitely not always) these occur at the
> > > > > same time as a trace message saying the error bit is set.
> > > > > 
> > > > > 2) sometimes the camera just won't start.  when guvcview (or
> > > > > luvcview) is started, no frames come back from the camera.  There is
> > > > > a light next to the camera that comes on to indicate it should be
> > > > > active, but no frames arrive.  There seems to be a fairly strong
> > > > > correlation with using luvcview (which from the traces seems to use
> > > > > some different mechanism to get frames from the driver from
> > > > > guvcview.  guvcview polls, luvcview doesn't).  Sometimes just
> > > > > restarting guvcview several times will work and the camera
> > > > > eventually starts.  Sometimes just changing resolution or frame
> > > > > rates succeeds in starting the camera.  I haven't found anything
> > > > > reproducible.  I do not think this is related to your patch, as it
> > > > > did happen once before your patch was applied. Unloading and
> > > > > reloading the uvcvideo and ehci_hcd
> > > > > 
> > > > > modules does not consistently solve it. guvcview just lists:
> > > > >   Could not grab image (select timeout): Resource temporarily
> > > > >   unavailable
> > > > > 
> > > > > and the trace shows guvcview polling, but nothing else going on.
> > > > > 
> > > > > I have tried adding the other quirks to the FID quirk, but haven't
> > > > > seen any improvement with any others.
> > > > > 
> > > > > Thanks for you help -
> > > > > 
> > > > > Carl
> > > > 
> > > > Webcam returns error in the middle of some frame, theoretically we
> > > > should drop complete frame. But current uvcvideo just gather data and
> > > > assume the cam will resend previous parts to complete the frame.
> > > > 
> > > > Try attached patch additionally to my previous one.
> > > 
> > > What about not ignoring the data in addition to setting buf->error to 1 ?
> > > This won't solve corruptiong, but would avoid the image effect for
> > > uncompressed formats.
> > 
> > My english (and c) are not my bet qualities. But currently i'm really
> > not sure if i understand. Was it sarcasm?
> 
> Not at all :-)

Ok, i thought you mean some thing like "avoid the image effect" = "avoid
the image"

> If the error bit is set, the packet will be dropped. For uncompressed formats, 
> dropping the data will shift part of the frame up/left and possibly mess the 
> color ups. Instead of doing that, we could handle packets with the error bit 
> set normally. The data will likely be corrupted, but that will "just" corrupt 
> a small part of the frame, and won't shift the rest of the frame up/left. We 
> should then also set buf->error to 1 as done in your patch, to tell 
> applications that the V4L2 buffer contains errors.

Also, you mean:

-               return -ENODATA;
+               if (buf != NULL)
+                       buf->error = 1;
        }

I'll try it on my netbook, it produce 200 packets with error bit set on
every start. Will see how it will looks like.

-- 
Regards,
        Alexey



From michal at physics.ubc.ca  Fri Jun 24 21:09:57 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 24 Jun 2011 12:09:57 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <201106242031.14919.laurent.pinchart@ideasonboard.com>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
	<1308939903.16863.3.camel@mini>
	<201106242031.14919.laurent.pinchart@ideasonboard.com>
Message-ID: <alpine.LNX.2.00.1106241204040.7580@spider.phas.ubc.ca>

Dear Laurent and Alexey,

On Fri, 24 Jun 2011, Laurent Pinchart wrote:

> Hi Alexey,
>
> On Friday 24 June 2011 20:25:03 Alexey Fisher wrote:
>> Am Freitag, den 24.06.2011, 20:08 +0200 schrieb Laurent Pinchart:
>>> On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
>>>> Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>>> Hi,
>>>>>>
>>>>>> I think you nailed it.  Every frame looks perfect now.  The trace
>>>>>> shows a few of these:
>>>>>>
>>>>>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>>>>
>>>>>> but I don't see corrupt frames any more in either MJPG or YUYV (at
>>>>>> 640x480 anyway) - in MJPG all the frames have the right size.
>>>>>>
>>>>>> There is a some weirdness with frame rates depending on the
>>>>>> exposure setting: 1) Exposure, auto gives 4 options: auto priority
>>>>>> mode, manual mode, shutter priority mode, and aperture priority
>>>>>> mode.  Auto and shutter don't seem to be settable (errors from
>>>>>> guvcview when chosen). There is also an "Exposure, auto priority"
>>>>>> checkbox.
>>>>>>
>>>>>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
>>>>>>
>>>>>> But I can't really complain at this point - the corrupt frames are
>>>>>> gone. Will that quirk be added to the driver (usb id is:
>>>>>> 0408:2fb1)?
>>>>>>
>>>>>> Thanks,
>>>>>
>>>>> Hi,
>>>>>
>>>>> it seems like I am much better off by fully disabling FID (with your
>>>>> patch) than before.  With the patch, YUYV frames are _always_ the
>>>>> right size.  There are still some problems:
>>>>>
>>>>> 1) corrupt frames - with part of the image missing or the image
>>>>> displaced. Sometimes (but definitely not always) these occur at the
>>>>> same time as a trace message saying the error bit is set.
>>>>>
>>>>> 2) sometimes the camera just won't start.  when guvcview (or
>>>>> luvcview) is started, no frames come back from the camera.  There is
>>>>> a light next to the camera that comes on to indicate it should be
>>>>> active, but no frames arrive.  There seems to be a fairly strong
>>>>> correlation with using luvcview (which from the traces seems to use
>>>>> some different mechanism to get frames from the driver from
>>>>> guvcview.  guvcview polls, luvcview doesn't).  Sometimes just
>>>>> restarting guvcview several times will work and the camera
>>>>> eventually starts.  Sometimes just changing resolution or frame
>>>>> rates succeeds in starting the camera.  I haven't found anything
>>>>> reproducible.  I do not think this is related to your patch, as it
>>>>> did happen once before your patch was applied. Unloading and
>>>>> reloading the uvcvideo and ehci_hcd
>>>>>
>>>>> modules does not consistently solve it. guvcview just lists:
>>>>>   Could not grab image (select timeout): Resource temporarily
>>>>>   unavailable
>>>>>
>>>>> and the trace shows guvcview polling, but nothing else going on.
>>>>>
>>>>> I have tried adding the other quirks to the FID quirk, but haven't
>>>>> seen any improvement with any others.
>>>>>
>>>>> Thanks for you help -
>>>>>
>>>>> Carl
>>>>
>>>> Webcam returns error in the middle of some frame, theoretically we
>>>> should drop complete frame. But current uvcvideo just gather data and
>>>> assume the cam will resend previous parts to complete the frame.
>>>>
>>>> Try attached patch additionally to my previous one.
>>>
>>> What about not ignoring the data in addition to setting buf->error to 1 ?
>>> This won't solve corruptiong, but would avoid the image effect for
>>> uncompressed formats.
>>
>> My english (and c) are not my bet qualities. But currently i'm really
>> not sure if i understand. Was it sarcasm?
>
> Not at all :-)
>
> If the error bit is set, the packet will be dropped. For uncompressed formats,
> dropping the data will shift part of the frame up/left and possibly mess the
> color ups. Instead of doing that, we could handle packets with the error bit
> set normally. The data will likely be corrupted, but that will "just" corrupt
> a small part of the frame, and won't shift the rest of the frame up/left. We
> should then also set buf->error to 1 as done in your patch, to tell
> applications that the V4L2 buffer contains errors.
>
> -- 
> Regards,
>
> Laurent Pinchart
>


I've made a fair bit of progress on this in the past few days - and 
actually have something that "works."  It turns out there are at least a 
couple of distinct issues, and some that may be related.

The camera attempts to do both FID and EOF correctly.  It sends an
empty packet with EOF set in the header at the end of every 
completed frame.

The issues are:

1) in MJPG format, it frequently gets confused about exactly where FID
should toggle.  It often toggles in the right place, but not
infrequently toggles either one or two packets early (either in the
empty EOF packet, or in the variable length packet before that one).
There does seem to be exactly one toggle per frame though.  Here, FID
needs to either be completely ignored, as Alexey's first patch does, or 
the stream needs to be repaired.

2) in YUV format, the data coming in makes it look like the camera gives
up on some frames part way through, doesn't send an EOF packet, but simply
toggles FID to indicate that a new frame has started. This seems to happen
only in the highest resolution modes (1024x768 - very rarely, 1280x720,
1280x1024 and 1600x1200) - coincidentally (?) these are the modes where
the camera blatantly lies about its capabilites.  It claims to support
only one frame rate (30fps) for each of these resolutions.  But this is 
impossible - 1600x1200 at 30 fps is way more data than USB 2 can handle.

3) In either format, packets are sometimes delivered fragmented into
chunks of 1/3 or 2/3 of what the should be.  Looking at the usb video
class spec figure 2-13, it does appear that sometimes those three pieces
of the payload are delivered separately.

So, I have changes that:
a) ignore FID (completely) when in MJPG, but pay attention to it in YUV.
b) include a check for the length of the frame when uncompressed and the
frame is ended by an FID toggle (this was already in there, but only when
the frame was ended by an EOF).
c) reassemble packets that are delivered in chunks

the now camera works - all resolutions in both MJPG and YUV work, no bad
frames are delivered by the driver.  There are very infrequent frames
dropped due to the urb->status showing an error.  The biggest outstanding
issue is that in the four high resolution modes in YUV output, the frames
the camera gives up on occasionally cause noticeable stutters.  It is
intermittent though - it will be fine for 5 minutes, maybe dropping one
frame here, one there, and then it will drop several in rapid succession.

It looks to me like the issue with the faulty FID in MJPG output is a
camera bug.  I'm wondering though if the fragmented packets are due to
some timing/scheduling issue in the usb layer?  This problem happens in
all resolutions/formats.  It does appear that things can be reliably
reassembled, but it sure would be nice if it could be fixed at some lower
level.

In the four high resolution modes, could the fact that the camera is lying
(badly) about the frame rates it is capable of delivering be screwing up
something in the USB layer?  The camera claims 1600x1200 YUV at 30fps, but
delivers at about 6 fps.

One unrelated question in about uvc_video.c is that it appears to me that
if a frame is ended by FID rather than EOF, the sequence number gets
incremented twice?

Any help on how to pursue the packet fragmentation and high resolution
modes would be welcome!

To answer Alexey's question of whether the camera works with the generic
windows driver, it does appear to. In the windows 7 device manager, I
selected the generic usb video driver, and then the one .sys file
(qicflt.sys) no longer appears in the list of files used for the camera.
It does still work. But with only the crapware that came with the 
computer, I don't know if its talking MJPG or YUV.

I don't have that computer with me at the moment, but will post lsusb -v 
as requested later today.

Carl



From michal at physics.ubc.ca  Fri Jun 24 21:12:01 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 24 Jun 2011 12:12:01 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <1308942135.16863.13.camel@mini>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
	<1308939903.16863.3.camel@mini>
	<201106242031.14919.laurent.pinchart@ideasonboard.com>
	<1308942135.16863.13.camel@mini>
Message-ID: <alpine.LNX.2.00.1106241210210.7580@spider.phas.ubc.ca>



On Fri, 24 Jun 2011, Alexey Fisher wrote:

> Am Freitag, den 24.06.2011, 20:31 +0200 schrieb Laurent Pinchart:
>> Hi Alexey,
>>
>> On Friday 24 June 2011 20:25:03 Alexey Fisher wrote:
>>> Am Freitag, den 24.06.2011, 20:08 +0200 schrieb Laurent Pinchart:
>>>> On Tuesday 14 June 2011 09:39:47 Alexey Fisher wrote:
>>>>> Am Montag, den 13.06.2011, 22:48 -0700 schrieb Carl Michal:
>>>>>>> Hi,
>>>>>>>
>>>>>>> I think you nailed it.  Every frame looks perfect now.  The trace
>>>>>>> shows a few of these:
>>>>>>>
>>>>>>> Jun 13 09:24:24 uvcvideo: Dropping payload (error bit set)
>>>>>>>
>>>>>>> but I don't see corrupt frames any more in either MJPG or YUYV (at
>>>>>>> 640x480 anyway) - in MJPG all the frames have the right size.
>>>>>>>
>>>>>>> There is a some weirdness with frame rates depending on the
>>>>>>> exposure setting: 1) Exposure, auto gives 4 options: auto priority
>>>>>>> mode, manual mode, shutter priority mode, and aperture priority
>>>>>>> mode.  Auto and shutter don't seem to be settable (errors from
>>>>>>> guvcview when chosen). There is also an "Exposure, auto priority"
>>>>>>> checkbox.
>>>>>>>
>>>>>>> Frame rates drop dramatically in manual mode (to 10-15fps from 30).
>>>>>>>
>>>>>>> But I can't really complain at this point - the corrupt frames are
>>>>>>> gone. Will that quirk be added to the driver (usb id is:
>>>>>>> 0408:2fb1)?
>>>>>>>
>>>>>>> Thanks,
>>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> it seems like I am much better off by fully disabling FID (with your
>>>>>> patch) than before.  With the patch, YUYV frames are _always_ the
>>>>>> right size.  There are still some problems:
>>>>>>
>>>>>> 1) corrupt frames - with part of the image missing or the image
>>>>>> displaced. Sometimes (but definitely not always) these occur at the
>>>>>> same time as a trace message saying the error bit is set.
>>>>>>
>>>>>> 2) sometimes the camera just won't start.  when guvcview (or
>>>>>> luvcview) is started, no frames come back from the camera.  There is
>>>>>> a light next to the camera that comes on to indicate it should be
>>>>>> active, but no frames arrive.  There seems to be a fairly strong
>>>>>> correlation with using luvcview (which from the traces seems to use
>>>>>> some different mechanism to get frames from the driver from
>>>>>> guvcview.  guvcview polls, luvcview doesn't).  Sometimes just
>>>>>> restarting guvcview several times will work and the camera
>>>>>> eventually starts.  Sometimes just changing resolution or frame
>>>>>> rates succeeds in starting the camera.  I haven't found anything
>>>>>> reproducible.  I do not think this is related to your patch, as it
>>>>>> did happen once before your patch was applied. Unloading and
>>>>>> reloading the uvcvideo and ehci_hcd
>>>>>>
>>>>>> modules does not consistently solve it. guvcview just lists:
>>>>>>   Could not grab image (select timeout): Resource temporarily
>>>>>>   unavailable
>>>>>>
>>>>>> and the trace shows guvcview polling, but nothing else going on.
>>>>>>
>>>>>> I have tried adding the other quirks to the FID quirk, but haven't
>>>>>> seen any improvement with any others.
>>>>>>
>>>>>> Thanks for you help -
>>>>>>
>>>>>> Carl
>>>>>
>>>>> Webcam returns error in the middle of some frame, theoretically we
>>>>> should drop complete frame. But current uvcvideo just gather data and
>>>>> assume the cam will resend previous parts to complete the frame.
>>>>>
>>>>> Try attached patch additionally to my previous one.
>>>>
>>>> What about not ignoring the data in addition to setting buf->error to 1 ?
>>>> This won't solve corruptiong, but would avoid the image effect for
>>>> uncompressed formats.
>>>
>>> My english (and c) are not my bet qualities. But currently i'm really
>>> not sure if i understand. Was it sarcasm?
>>
>> Not at all :-)
>
> Ok, i thought you mean some thing like "avoid the image effect" = "avoid
> the image"
>
>> If the error bit is set, the packet will be dropped. For uncompressed formats,
>> dropping the data will shift part of the frame up/left and possibly mess the
>> color ups. Instead of doing that, we could handle packets with the error bit
>> set normally. The data will likely be corrupted, but that will "just" corrupt
>> a small part of the frame, and won't shift the rest of the frame up/left. We
>> should then also set buf->error to 1 as done in your patch, to tell
>> applications that the V4L2 buffer contains errors.
>
> Also, you mean:
>
> -               return -ENODATA;
> +               if (buf != NULL)
> +                       buf->error = 1;
>        }
>
> I'll try it on my netbook, it produce 200 packets with error bit set on
> every start. Will see how it will looks like.
>
> -- 
> Regards,
>        Alexey
>
>

I should add - once the packets are reassembled properly, I never see 
error bits set any more.  So the question of how to handle them becomes moot 
here.




From michal at physics.ubc.ca  Fri Jun 24 23:11:49 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Fri, 24 Jun 2011 14:11:49 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <201106241934.28265.laurent.pinchart@ideasonboard.com>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106241934.28265.laurent.pinchart@ideasonboard.com>
Message-ID: <alpine.LNX.2.00.1106241409170.6390@tristan>

Hi,


On Fri, 24 Jun 2011, Laurent Pinchart wrote:

> Hi Carl,
>
> On Tuesday 07 June 2011 02:31:17 Carl Michal wrote:
>> Hello,
>>
>> I'm having some trouble with a Quanta integrated webcam.  It identifies
>> itself as: Laptop_Integrated_Webcam_2HDM, usbid: 0408:2fb1.  This is built
>> in to a Dell XPS-15 (L501X).
>
> Could you please send me the output of
>
> lsusb -v -d 0408:2fb1


Bus 001 Device 004: ID 0408:2fb1 Quanta Computer, Inc. 
Device Descriptor:
   bLength                18
   bDescriptorType         1
   bcdUSB               2.00
   bDeviceClass          239 Miscellaneous Device
   bDeviceSubClass         2 ?
   bDeviceProtocol         1 Interface Association
   bMaxPacketSize0        64
   idVendor           0x0408 Quanta Computer, Inc.
   idProduct          0x2fb1
   bcdDevice            9.01
   iManufacturer           3 CN07CN2C7866411I1870A00
   iProduct                2 Laptop_Integrated_Webcam_2HDM
   iSerial                 0
   bNumConfigurations      1
   Configuration Descriptor:
     bLength                 9
     bDescriptorType         2
     wTotalLength         1457
     bNumInterfaces          3
     bConfigurationValue     1
     iConfiguration          2 Laptop_Integrated_Webcam_2HDM
     bmAttributes         0x80
       (Bus Powered)
     MaxPower              250mA
     ** UNRECOGNIZED:  24 ff 42 49 53 54 00 01 05 02 10 00 00 00 00 00 01 05 d0 07 02 06 d0 07 03 07 d0 07 04 08 d0 07 05 09 d0 07
     Interface Association:
       bLength                 8
       bDescriptorType        11
       bFirstInterface         0
       bInterfaceCount         3
       bFunctionClass         14 Video
       bFunctionSubClass       3 Video Interface Collection
       bFunctionProtocol       0
       iFunction               4 Integrated Webcam
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        0
       bAlternateSetting       0
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      1 Video Control
       bInterfaceProtocol      0
       iInterface              4 Integrated Webcam
       VideoControl Interface Descriptor:
         bLength                14
         bDescriptorType        36
         bDescriptorSubtype      1 (HEADER)
         bcdUVC               1.00
         wTotalLength          113
         dwClockFrequency       75.000000MHz
         bInCollection           2
         baInterfaceNr( 0)       1
         baInterfaceNr( 1)       2
       VideoControl Interface Descriptor:
         bLength                18
         bDescriptorType        36
         bDescriptorSubtype      2 (INPUT_TERMINAL)
         bTerminalID             1
         wTerminalType      0x0201 Camera Sensor
         bAssocTerminal          0
         iTerminal               0
         wObjectiveFocalLengthMin      0
         wObjectiveFocalLengthMax      0
         wOcularFocalLength            0
         bControlSize                  3
         bmControls           0x0000000e
           Auto-Exposure Mode
           Auto-Exposure Priority
           Exposure Time (Absolute)
       VideoControl Interface Descriptor:
         bLength                11
         bDescriptorType        36
         bDescriptorSubtype      5 (PROCESSING_UNIT)
       Warning: Descriptor too short
         bUnitID                 2
         bSourceID               1
         wMaxMultiplier          0
         bControlSize            2
         bmControls     0x0000157f
           Brightness
           Contrast
           Hue
           Saturation
           Sharpness
           Gamma
           White Balance Temperature
           Backlight Compensation
           Power Line Frequency
           White Balance Temperature, Auto
         iProcessing             0
         bmVideoStandards     0x1a
           NTSC - 525/60
           SECAM - 625/50
           NTSC - 625/50
       VideoControl Interface Descriptor:
         bLength                26
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 3
         guidExtensionCode         {28179e5d-8dab-a94f-9acb-f6d56dbc05a6}
         bNumControl             8
         bNrPins                 1
         baSourceID( 0)          2
         bControlSize            1
         bmControls( 0)       0x1f
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                26
         bDescriptorType        36
         bDescriptorSubtype      6 (EXTENSION_UNIT)
         bUnitID                 4
         guidExtensionCode         {c385b80f-c268-4745-90f7-8f47579d95fc}
         bNumControl             4
         bNrPins                 1
         baSourceID( 0)          3
         bControlSize            1
         bmControls( 0)       0x0f
         iExtension              0
       VideoControl Interface Descriptor:
         bLength                 9
         bDescriptorType        36
         bDescriptorSubtype      3 (OUTPUT_TERMINAL)
         bTerminalID             5
         wTerminalType      0x0101 USB Streaming
         bAssocTerminal          0
         bSourceID               4
         iTerminal               0
       VideoControl Interface Descriptor:
         bLength                 9
         bDescriptorType        36
         bDescriptorSubtype      3 (OUTPUT_TERMINAL)
         bTerminalID             6
         wTerminalType      0x0101 USB Streaming
         bAssocTerminal          0
         bSourceID               4
         iTerminal               0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x81  EP 1 IN
         bmAttributes            3
           Transfer Type            Interrupt
           Synch Type               None
           Usage Type               Data
         wMaxPacketSize     0x0020  1x 32 bytes
         bInterval               6
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       0
       bNumEndpoints           0
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       VideoStreaming Interface Descriptor:
         bLength                            15
         bDescriptorType                    36
         bDescriptorSubtype                  1 (INPUT_HEADER)
         bNumFormats                         2
         wTotalLength                     1135
         bEndPointAddress                  130
         bmInfo                              0
         bTerminalLink                       5
         bStillCaptureMethod                 1
         bTriggerSupport                     0
         bTriggerUsage                       0
         bControlSize                        1
         bmaControls( 0)                    27
         bmaControls( 1)                    27
       VideoStreaming Interface Descriptor:
         bLength                            27
         bDescriptorType                    36
         bDescriptorSubtype                  4 (FORMAT_UNCOMPRESSED)
         bFormatIndex                        1
         bNumFrameDescriptors               13
         guidFormat                            {59555932-0000-1000-8000-00aa00389b71}
         bBitsPerPixel                      16
         bDefaultFrameIndex                  1
         bAspectRatioX                       0
         bAspectRatioY                       0
         bmInterlaceFlags                 0x00
           Interlaced stream or variable: No
           Fields per frame: 2 fields
           Field 1 first: No
           Field pattern: Field 1 only
           bCopyProtect                      0
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         1
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            640
         wHeight                           480
         dwMinBitRate                 24576000
         dwMaxBitRate                147456000
         dwMaxVideoFrameBufferSize      614400
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         2
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            640
         wHeight                           400
         dwMinBitRate                 20480000
         dwMaxBitRate                122880000
         dwMaxVideoFrameBufferSize      512000
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         3
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            384
         wHeight                           216
         dwMinBitRate                  6635520
         dwMaxBitRate                 39813120
         dwMaxVideoFrameBufferSize      165888
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         4
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            352
         wHeight                           288
         dwMinBitRate                  8110080
         dwMaxBitRate                 48660480
         dwMaxVideoFrameBufferSize      202752
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         5
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            320
         wHeight                           240
         dwMinBitRate                  6144000
         dwMaxBitRate                 36864000
         dwMaxVideoFrameBufferSize      153600
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         6
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            176
         wHeight                           144
         dwMinBitRate                  2027520
         dwMaxBitRate                 12165120
         dwMaxVideoFrameBufferSize       50688
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         7
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            160
         wHeight                           120
         dwMinBitRate                  1536000
         dwMaxBitRate                  9216000
         dwMaxVideoFrameBufferSize       38400
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         8
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            160
         wHeight                           128
         dwMinBitRate                  1638400
         dwMaxBitRate                  9830400
         dwMaxVideoFrameBufferSize       40960
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                         9
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            768
         wHeight                           480
         dwMinBitRate                 29491200
         dwMaxBitRate                176947200
         dwMaxVideoFrameBufferSize      737280
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            30
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                        10
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1024
         wHeight                           768
         dwMinBitRate                377487360
         dwMaxBitRate                377487360
         dwMaxVideoFrameBufferSize     1572864
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  1
         dwFrameInterval( 0)            333333
       VideoStreaming Interface Descriptor:
         bLength                            30
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                        11
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1280
         wHeight                           720
         dwMinBitRate                442368000
         dwMaxBitRate                442368000
         dwMaxVideoFrameBufferSize     1843200
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  1
         dwFrameInterval( 0)            333333
       VideoStreaming Interface Descriptor:
         bLength                            30
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                        12
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1280
         wHeight                          1024
         dwMinBitRate                629145600
         dwMaxBitRate                629145600
         dwMaxVideoFrameBufferSize     2621440
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  1
         dwFrameInterval( 0)            333333
       VideoStreaming Interface Descriptor:
         bLength                            30
         bDescriptorType                    36
         bDescriptorSubtype                  5 (FRAME_UNCOMPRESSED)
         bFrameIndex                        13
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1600
         wHeight                          1200
         dwMinBitRate                921600000
         dwMaxBitRate                921600000
         dwMaxVideoFrameBufferSize     3840000
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  1
         dwFrameInterval( 0)            333333
       VideoStreaming Interface Descriptor:
         bLength                             6
         bDescriptorType                    36
         bDescriptorSubtype                 13 (COLORFORMAT)
         bColorPrimaries                     1 (BT.709,sRGB)
         bTransferCharacteristics            1 (BT.709)
         bMatrixCoefficients                 4 (SMPTE 170M (BT.601))
       VideoStreaming Interface Descriptor:
         bLength                            11
         bDescriptorType                    36
         bDescriptorSubtype                  6 (FORMAT_MJPEG)
         bFormatIndex                        2
         bNumFrameDescriptors               10
         bFlags                              1
           Fixed-size samples: Yes
         bDefaultFrameIndex                  1
         bAspectRatioX                       0
         bAspectRatioY                       0
         bmInterlaceFlags                 0x00
           Interlaced stream or variable: No
           Fields per frame: 1 fields
           Field 1 first: No
           Field pattern: Field 1 only
           bCopyProtect                      0
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         1
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            640
         wHeight                           480
         dwMinBitRate                  2457600
         dwMaxBitRate                 73728000
         dwMaxVideoFrameBufferSize      307200
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         2
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            352
         wHeight                           288
         dwMinBitRate                   811008
         dwMaxBitRate                 24330240
         dwMaxVideoFrameBufferSize      101376
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         3
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            320
         wHeight                           240
         dwMinBitRate                   614400
         dwMaxBitRate                 18432000
         dwMaxVideoFrameBufferSize       76800
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         4
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            176
         wHeight                           144
         dwMinBitRate                   202752
         dwMaxBitRate                  6082560
         dwMaxVideoFrameBufferSize       25344
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         5
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            160
         wHeight                           120
         dwMinBitRate                   153600
         dwMaxBitRate                  4608000
         dwMaxVideoFrameBufferSize       19200
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         6
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                            768
         wHeight                           480
         dwMinBitRate                  2949120
         dwMaxBitRate                 88473600
         dwMaxVideoFrameBufferSize      368640
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         7
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1024
         wHeight                           768
         dwMinBitRate                  6291456
         dwMaxBitRate                188743680
         dwMaxVideoFrameBufferSize      786432
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         8
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1280
         wHeight                           720
         dwMinBitRate                  7372800
         dwMaxBitRate                221184000
         dwMaxVideoFrameBufferSize      921600
         dwDefaultFrameInterval         333333
         bFrameIntervalType                  6
         dwFrameInterval( 0)            333333
         dwFrameInterval( 1)            400000
         dwFrameInterval( 2)            500000
         dwFrameInterval( 3)            666666
         dwFrameInterval( 4)           1000000
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                         9
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1280
         wHeight                          1024
         dwMinBitRate                 10485760
         dwMaxBitRate                209715200
         dwMaxVideoFrameBufferSize     1310720
         dwDefaultFrameInterval         500000
         bFrameIntervalType                  6
         dwFrameInterval( 0)            500000
         dwFrameInterval( 1)            666666
         dwFrameInterval( 2)            833333
         dwFrameInterval( 3)           1000000
         dwFrameInterval( 4)           1111111
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                            50
         bDescriptorType                    36
         bDescriptorSubtype                  7 (FRAME_MJPEG)
         bFrameIndex                        10
         bmCapabilities                   0x00
           Still image unsupported
         wWidth                           1600
         wHeight                          1200
         dwMinBitRate                 15360000
         dwMaxBitRate                230400000
         dwMaxVideoFrameBufferSize     1920000
         dwDefaultFrameInterval         666666
         bFrameIntervalType                  6
         dwFrameInterval( 0)            666666
         dwFrameInterval( 1)            833333
         dwFrameInterval( 2)           1000000
         dwFrameInterval( 3)           1111111
         dwFrameInterval( 4)           1428571
         dwFrameInterval( 5)           2000000
       VideoStreaming Interface Descriptor:
         bLength                             6
         bDescriptorType                    36
         bDescriptorSubtype                 13 (COLORFORMAT)
         bColorPrimaries                     1 (BT.709,sRGB)
         bTransferCharacteristics            1 (BT.709)
         bMatrixCoefficients                 4 (SMPTE 170M (BT.601))
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       1
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x1400  3x 1024 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       2
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x12f8  3x 760 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       3
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0400  1x 1024 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        1
       bAlternateSetting       4
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x82  EP 2 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0200  1x 512 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        2
       bAlternateSetting       0
       bNumEndpoints           0
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       VideoStreaming Interface Descriptor:
         bLength                            14
         bDescriptorType                    36
         bDescriptorSubtype                  1 (INPUT_HEADER)
         bNumFormats                         1
         wTotalLength                       21
         bEndPointAddress                  131
         bmInfo                              0
         bTerminalLink                       6
         bStillCaptureMethod                 1
         bTriggerSupport                     0
         bTriggerUsage                       0
         bControlSize                        1
         bmaControls( 0)                     7
       VideoStreaming Interface Descriptor:
         bLength                             7
         bDescriptorType                    36
         bDescriptorSubtype                 10 (FORMAT_MPEG2TS)
         bFormatIndex                        1
         bDataOffset                         0
         bPacketLength                     188
         bStrideLength                     188
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        2
       bAlternateSetting       1
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x83  EP 3 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0318  1x 792 bytes
         bInterval               1
     Interface Descriptor:
       bLength                 9
       bDescriptorType         4
       bInterfaceNumber        2
       bAlternateSetting       2
       bNumEndpoints           1
       bInterfaceClass        14 Video
       bInterfaceSubClass      2 Video Streaming
       bInterfaceProtocol      0
       iInterface              0
       Endpoint Descriptor:
         bLength                 7
         bDescriptorType         5
         bEndpointAddress     0x83  EP 3 IN
         bmAttributes            5
           Transfer Type            Isochronous
           Synch Type               Asynchronous
           Usage Type               Data
         wMaxPacketSize     0x0100  1x 256 bytes
         bInterval               1
Device Qualifier (for other device speed):
   bLength                10
   bDescriptorType         6
   bcdUSB               2.00
   bDeviceClass          239 Miscellaneous Device
   bDeviceSubClass         2 ?
   bDeviceProtocol         1 Interface Association
   bMaxPacketSize0        64
   bNumConfigurations      1
Device Status:     0x0000
   (Bus Powered)


Carl



From michal at physics.ubc.ca  Sun Jun 26 08:09:04 2011
From: michal at physics.ubc.ca (Carl Michal)
Date: Sat, 25 Jun 2011 23:09:04 -0700 (PDT)
Subject: [Linux-uvc-devel] Quanta integrated webcam
In-Reply-To: <alpine.LNX.2.00.1106241204040.7580@spider.phas.ubc.ca>
References: <alpine.LNX.2.00.1106061713110.19493@tristan>
	<201106242008.45895.laurent.pinchart@ideasonboard.com>
	<1308939903.16863.3.camel@mini>
	<201106242031.14919.laurent.pinchart@ideasonboard.com>
	<alpine.LNX.2.00.1106241204040.7580@spider.phas.ubc.ca>
Message-ID: <alpine.LNX.2.00.1106252306060.26811@tristan>

Hi,

On Fri, 24 Jun 2011, Carl Michal wrote:

> Dear Laurent and Alexey,

[snip]

>
>
> So, I have changes that:
> a) ignore FID (completely) when in MJPG, but pay attention to it in YUV.
> b) include a check for the length of the frame when uncompressed and the
> frame is ended by an FID toggle (this was already in there, but only when
> the frame was ended by an EOF).
> c) reassemble packets that are delivered in chunks
>
> the now camera works - all resolutions in both MJPG and YUV work, no bad
> frames are delivered by the driver.  There are very infrequent frames
> dropped due to the urb->status showing an error.  The biggest outstanding
> issue is that in the four high resolution modes in YUV output, the frames
> the camera gives up on occasionally cause noticeable stutters.  It is
> intermittent though - it will be fine for 5 minutes, maybe dropping one
> frame here, one there, and then it will drop several in rapid succession.
>

I've attached a patch with the code I've implemented as described
yesterday.  This includes/modifies Alexey's patch to fully ignore FID with
the NO_FID quirk, and introduces a new quirk for this camera, and a 
subroutine to filter the incoming stream to reassemble fragmented packets.

I realize there are some issues with the way this has been implemented
(I'm not much of a coder...) but shows what I've done to solve the
immediate problem.

Carl

-------------- next part --------------
Only in drivers/media/video/uvc/: built-in.o
Only in drivers/media/video/uvc/: .built-in.o.cmd
Only in drivers/media/video/uvc/: modules.order
Only in drivers/media/video/uvc/: uvc_ctrl.o
Only in drivers/media/video/uvc/: .uvc_ctrl.o.cmd
diff -u /tmp/linux-2.6.39/drivers/media/video/uvc/uvc_driver.c drivers/media/video/uvc//uvc_driver.c
--- /tmp/linux-2.6.39/drivers/media/video/uvc/uvc_driver.c	2011-06-25 22:58:39.448334128 -0700
+++ drivers/media/video/uvc//uvc_driver.c	2011-06-24 22:45:47.644324039 -0700
@@ -489,7 +489,17 @@
 			frame->dwFrameInterval[0] =
 				frame->dwDefaultFrameInterval;
 		}
-
+		/*
+		// CM hack
+		if (frame->wWidth == 1280 && frame->wHeight == 720)
+		  if ( ftype == UVC_VS_FRAME_UNCOMPRESSED){
+		    pr_info("found 1280x720 uncompressed\n");
+		    frame->dwFrameInterval[0] = 1000000;
+		    frame->dwDefaultFrameInterval = 1000000;
+		    frame->dwMinBitRate = 147456000;
+		    frame->dwMaxBitRate = 147456000;
+		  }
+		*/
 		uvc_trace(UVC_TRACE_DESCR, "- %ux%u (%u.%u fps)\n",
 			frame->wWidth, frame->wHeight,
 			10000000/frame->dwDefaultFrameInterval,
@@ -2271,6 +2281,14 @@
 	  .bInterfaceProtocol	= 0,
 	  .driver_info		= UVC_QUIRK_PROBE_MINMAX
 				| UVC_QUIRK_IGNORE_SELECTOR_UNIT },
+	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
+				| USB_DEVICE_ID_MATCH_INT_INFO,
+	  .idVendor		= 0x0408,
+	  .idProduct		= 0x2fb1,
+	  .bInterfaceClass	= USB_CLASS_VIDEO,
+	  .bInterfaceSubClass	= 1,
+	  .bInterfaceProtocol	= 0,
+	  .driver_info		= UVC_QUIRK_QUANTA },
 	/* Generic USB Video Class */
 	{ USB_INTERFACE_INFO(USB_CLASS_VIDEO, 1, 0) },
 	{}
Only in /tmp/linux-2.6.39/drivers/media/video/uvc: uvc_driver.c.orig
Only in drivers/media/video/uvc/: uvc_driver.o
Only in drivers/media/video/uvc/: .uvc_driver.o.cmd
Only in drivers/media/video/uvc/: uvc_isight.o
Only in drivers/media/video/uvc/: .uvc_isight.o.cmd
Only in drivers/media/video/uvc/: uvc_queue.o
Only in drivers/media/video/uvc/: .uvc_queue.o.cmd
Only in drivers/media/video/uvc/: uvc_status.o
Only in drivers/media/video/uvc/: .uvc_status.o.cmd
Only in drivers/media/video/uvc/: uvc_v4l2.o
Only in drivers/media/video/uvc/: .uvc_v4l2.o.cmd
diff -u /tmp/linux-2.6.39/drivers/media/video/uvc/uvc_video.c drivers/media/video/uvc//uvc_video.c
--- /tmp/linux-2.6.39/drivers/media/video/uvc/uvc_video.c	2011-06-25 22:58:39.452334128 -0700
+++ drivers/media/video/uvc//uvc_video.c	2011-06-25 22:59:55.400334079 -0700
@@ -426,7 +426,14 @@
 		return -ENODATA;
 	}
 
-	fid = data[1] & UVC_STREAM_FID;
+	/* Make sure, if we use NO_FID quirk, we really use no FID bit.
+	 */
+	if (stream->dev->quirks & UVC_QUIRK_STREAM_NO_FID ||
+	    ((stream->dev->quirks & UVC_QUIRK_QUANTA) && 
+	     (stream->cur_format->flags & UVC_FMT_FLAG_COMPRESSED) ))
+		fid = 0;
+	else
+		fid = data[1] & UVC_STREAM_FID;
 
 	/* Increase the sequence number regardless of any buffer states, so
 	 * that discontinuous sequence numbers always indicate lost frames.
@@ -456,9 +463,11 @@
 		if (fid == stream->last_fid) {
 			uvc_trace(UVC_TRACE_FRAME, "Dropping payload (out of "
 				"sync).\n");
-			if ((stream->dev->quirks & UVC_QUIRK_STREAM_NO_FID) &&
-			    (data[1] & UVC_STREAM_EOF))
-				stream->last_fid ^= UVC_STREAM_FID;
+			if  (data[1] & UVC_STREAM_EOF)
+			     if (stream->dev->quirks & UVC_QUIRK_STREAM_NO_FID ||
+				 ((stream->dev->quirks & UVC_QUIRK_QUANTA) && 
+				  (stream->cur_format->flags & UVC_FMT_FLAG_COMPRESSED) ))
+			          stream->last_fid ^= UVC_STREAM_FID;
 			return -ENODATA;
 		}
 
@@ -535,8 +544,11 @@
 		if (data[0] == len)
 			uvc_trace(UVC_TRACE_FRAME, "EOF in empty payload.\n");
 		buf->state = UVC_BUF_STATE_READY;
-		if (stream->dev->quirks & UVC_QUIRK_STREAM_NO_FID)
-			stream->last_fid ^= UVC_STREAM_FID;
+
+		if (stream->dev->quirks & UVC_QUIRK_STREAM_NO_FID ||
+		    ((stream->dev->quirks & UVC_QUIRK_QUANTA) && 
+		     (stream->cur_format->flags & UVC_FMT_FLAG_COMPRESSED) ))
+		     stream->last_fid ^= UVC_STREAM_FID;
 	}
 }
 
@@ -583,6 +595,92 @@
  * URB handling
  */
 
+/* filtering to repair fragmented packets from Quanta webcam */
+
+static void repair_quanta_stream(struct urb *urb, 
+				 struct uvc_streaming *stream, int fno)
+{
+  int psize;
+  static int qbytes=0;
+  static u8 qbuf[3072]; 
+
+  /* qbytes and qbuf should be per-stream - included in 
+   * uvc_streaming structure ?
+   */
+
+  psize = stream->urb_size / urb->number_of_packets;
+  /* repair only needed if the packet should be assembled from
+     three transfers */
+  if (psize != 3*760 && psize != 3*1024) return;
+
+  /* If the packet is unfull but exactly 1/3 or 2/3 the full length, 
+   * assume it is fragmented.  If it turns out not to be, it gets
+   *  fixed later 
+   */
+
+  if ((urb->iso_frame_desc[fno].actual_length == psize/3 || 
+       urb->iso_frame_desc[fno].actual_length == 2*psize/3) && qbytes == 0 ){
+       uvc_trace(UVC_TRACE_FRAME,"starting fix\n");
+       memcpy(qbuf,urb->transfer_buffer+urb->iso_frame_desc[fno].offset,
+	      urb->iso_frame_desc[fno].actual_length);
+       qbytes = urb->iso_frame_desc[fno].actual_length;
+       urb->iso_frame_desc[fno].actual_length = 0;
+  }
+  /* if we started filling our buffer, keep filling it. 
+   */
+  else if ( qbytes > 0 ){
+       if (urb->iso_frame_desc[fno].actual_length + qbytes <= psize ){
+	 /* But, if the next packet it a header, we shouldn't have done this.  This can happen
+	  * if the video frame ends with exactly 1/3 or 2/3 full packet.
+	  * 
+	  * The Quanta camera always send empty payload packets with EOF.  This packet has
+	  * a length of 12. So test for empty packet, length of 12 and EOF set.
+	  *  
+	  * If the camera were to ever send a header that was not 12 bytes this would fail
+	  * looks like headers could in principle be 12, 8, 6, or 2 bytes. 
+	  */
+
+	    if (urb->iso_frame_desc[fno].actual_length == 12 && 
+	        ((u8 *) (urb->transfer_buffer+urb->iso_frame_desc[fno].offset))[0] == 12 &&
+		((u8 *) (urb->transfer_buffer+urb->iso_frame_desc[fno].offset))[1] & 
+		UVC_STREAM_EOF ){
+	      /* throw away the packet, but mark the previous with EOF 
+	       */
+	         urb->iso_frame_desc[fno].actual_length = 0;
+		 qbuf[1] |= UVC_STREAM_EOF;
+	    }
+	    else{ 
+	      /*  continue filling our buffer  */
+	         memcpy(&qbuf[qbytes],urb->transfer_buffer+urb->iso_frame_desc[fno].offset,
+			urb->iso_frame_desc[fno].actual_length);
+		 qbytes += urb->iso_frame_desc[fno].actual_length;
+		 urb->iso_frame_desc[fno].actual_length = 0;
+	    }
+       }
+       else{ 
+	 /* We're here if adding the next packet would overfill our buffer.
+	  * This only seems to happen if the camera gives up on a frame 
+	  * and toggles fid. So we'll throw away what we've been 
+	  * assembling, because it's a broken frame anyway. 
+	  */
+	    uvc_trace(UVC_TRACE_FRAME,"repair_quanta: abandoned frame during repair? " 
+		      "buffer would overfill\n");
+	    qbytes = 0;
+       }
+  }
+  /* copy the buffer back into the stream if it's time */
+  if ((qbytes != 0 && qbytes != psize/3 && qbytes != 2*psize/3) || 
+      (qbuf[1] & UVC_STREAM_EOF && qbytes != 0)){
+       memcpy(urb->transfer_buffer+urb->iso_frame_desc[fno].offset,qbuf,qbytes);
+       uvc_trace(UVC_TRACE_FRAME,"fixing packet, frame: %i\n",stream->sequence);
+       urb->iso_frame_desc[fno].actual_length = qbytes;
+       qbuf[1] = 0;
+       qbytes =0;
+  }
+
+
+}
+
 /*
  * Completion handler for video URBs.
  */
@@ -602,14 +700,25 @@
 			continue;
 		}
 
+		/* Filter to repair fragmented packets for Quanta */
+		if (stream->dev->quirks & UVC_QUIRK_QUANTA)
+		  repair_quanta_stream(urb, stream, i);
+		    
+
 		/* Decode the payload header. */
 		mem = urb->transfer_buffer + urb->iso_frame_desc[i].offset;
 		do {
 			ret = uvc_video_decode_start(stream, buf, mem,
 				urb->iso_frame_desc[i].actual_length);
-			if (ret == -EAGAIN)
-				buf = uvc_queue_next_buffer(&stream->queue,
-							    buf);
+			if (ret == -EAGAIN){
+			    if (buf->buf.length != buf->buf.bytesused &&
+				  !(stream->cur_format->flags &
+				      UVC_FMT_FLAG_COMPRESSED))
+			        buf->error = 1;
+
+			    buf = uvc_queue_next_buffer(&stream->queue,
+							buf);
+			}
 		} while (ret == -EAGAIN);
 
 		if (ret < 0)
Only in /tmp/linux-2.6.39/drivers/media/video/uvc: uvc_video.c.orig
diff -u /tmp/linux-2.6.39/drivers/media/video/uvc/uvcvideo.h drivers/media/video/uvc//uvcvideo.h
--- /tmp/linux-2.6.39/drivers/media/video/uvc/uvcvideo.h	2011-06-25 22:58:39.452334128 -0700
+++ drivers/media/video/uvc//uvcvideo.h	2011-06-25 22:50:03.732334446 -0700
@@ -1,3 +1,4 @@
+
 #ifndef _USB_VIDEO_H_
 #define _USB_VIDEO_H_
 
@@ -185,6 +186,7 @@
 #define UVC_QUIRK_FIX_BANDWIDTH		0x00000080
 #define UVC_QUIRK_PROBE_DEF		0x00000100
 #define UVC_QUIRK_RESTRICT_FRAME_RATE	0x00000200
+#define UVC_QUIRK_QUANTA               0x00000400
 
 /* Format flags */
 #define UVC_FMT_FLAG_COMPRESSED		0x00000001
Only in drivers/media/video/uvc/: uvcvideo.ko
Only in drivers/media/video/uvc/: .uvcvideo.ko.cmd
Only in drivers/media/video/uvc/: uvcvideo.mod.c
Only in drivers/media/video/uvc/: uvcvideo.mod.o
Only in drivers/media/video/uvc/: .uvcvideo.mod.o.cmd
Only in drivers/media/video/uvc/: uvc_video.o
Only in drivers/media/video/uvc/: uvcvideo.o
Only in drivers/media/video/uvc/: .uvc_video.o.cmd
Only in drivers/media/video/uvc/: .uvcvideo.o.cmd

From philip at gladstonefamily.net  Mon Jun 27 03:41:23 2011
From: philip at gladstonefamily.net (Philip Gladstone)
Date: Sun, 26 Jun 2011 21:41:23 -0400
Subject: [Linux-uvc-devel] Logitech C910 -- trying to run more than one.
In-Reply-To: <4DE84DD3.7080804@gladstonefamily.net>
References: <4D618034.5030807@gladstonefamily.net>		<201103061214.19341.laurent.pinchart@ideasonboard.com>		<4D740AFA.5010803@gladstonefamily.net>	<1299495229.15216.8.camel@zwerg>
	<4DE84DD3.7080804@gladstonefamily.net>
Message-ID: <4E07DFC3.8050100@gladstonefamily.net>

The output is:

Jun 27 01:38:14 sheevaplug-debian kernel: uvc_commit_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_probe_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 0; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 0; dwMaxPayloadTransferSize: 0
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MIN; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 2; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MAX; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 0; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 0; dwMaxPayloadTransferSize: 0
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_CUR; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_probe_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 0; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 0; dwMaxPayloadTransferSize: 0
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MIN; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 2; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MAX; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 0; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 0; dwMaxPayloadTransferSize: 0
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 10(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_CUR; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 1000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_probe_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 5(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MIN; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 2; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 5(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_MAX; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_fixup_video_ctrl: MJPEG 
2592x1944 at 5(fps)
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_get_video_ctrl: GET_CUR; 
bmHint: 1; bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_alloc_buffers: nbuffers 4; 
buflength: 10077696
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_video_enable
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_commit_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_set_video_ctrl: bmHint: 1; 
bFormatIndex: 2; bFrameIndex: 28; dwFrameInterval: 2000000; 
wKeyFrameRate: 0; wCompQuality: 61; wCompWindowSize: 0; wDelay: 0; 
dwMaxVideoFrameSize 10077696; dwMaxPayloadTransferSize: 3060
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_init_video
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_init_video: Device 
requested 3060 B/frame bandwidth.
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_init_video: Selecting 
alternate setting 11 (3060 B/frame bandwidth).
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_init_video_isoc
Jun 27 01:38:14 sheevaplug-debian kernel: uvc_alloc_urb_buffers
Jun 27 01:38:15 sheevaplug-debian kernel: uvc_alloc_urb_buffers: 
Allocated 5 URB buffers of 32x3060 bytes each.
Jun 27 01:38:16 sheevaplug-debian kernel: uvc_dequeue_buffer: Dequeuing 
buffer 0 (4, 10077696/950755 bytes).
Jun 27 01:38:16 sheevaplug-debian kernel: uvc_video_enable
Jun 27 01:38:16 sheevaplug-debian kernel: uvc_uninit_video

This is with the stock driver with just your patches to deal with the 
logging.

philip

On 02-Jun-11 10:58 PM, Philip Gladstone wrote:
> Sorry for the long delay in responding. I will try these changes.
>
> However, the scoop on the other various patches is as follows:
>
> in 2592x1944 mode, at 10fps, 4bpp for mjpg, the fix_jpeg_bandwidth 
> makes things worse with 3476 B/frame rather than the device specified 
> 3060 B/frame.
>
> At 2592x1944 mode at 5fps, 2bpp for mjpg, the fix_jpeg_bandwidth ends 
> up at 1024 B/frame, which allows me to run the three cameras that I want.
>
> At 2592x1944 mode at 5fps, 4bpp for mjpg, the fix_jpeg_bandwidth ends 
> up at 1984 B/frame, which allows me to run two cameras, but not the 
> third.
>
> However, these numbers are funny. The frame size for 2592x1944x4bpp is 
> 2.5 Megabytes or 20 Mbits. At 5fps, this is 100 Mbits/sec. There 
> should be ample bandwidth to support three of these streams.
>
> To be honest, I don't understand the units of the B/frame. Can someone 
> explain it to me?
>
> Philip
>
>
>
>
> On 07-Mar-11 5:53 AM, Alexey Fisher wrote:
>> Hi Philip,
>>
>> i probably will not solve your problem but i wont to take a look on it.
>> Can you please apply attached debug patch and send me the log.
>> this patch was made on top of fd2b6dd22743f7c96f7c6e97d49ff5f4b422e741
>>
>> Make sure you have CONFIG_DYNAMIC_DEBUG=y enabled. To start dynamic
>> debug you need do as root:
>>
>> echo "module uvcvideo +p">  /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_video_decode_end -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_video_decode_start -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_video_decode_data -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_video_decode_isoc -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_video_complete -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> echo "func uvc_v4l2_do_ioctl -p"
>>> /sys/kernel/debug/dynamic_debug/control
>> and start video with this, it will make onl?y one shot:
>> gst-launch-0.10 -v v4l2src num-buffers=1 ! jpegdec ! ffmpegcolorspace !
>> autovideosink
>>
>> Am Sonntag, den 06.03.2011, 17:30 -0500 schrieb Philip Gladstone:
>>> It turned out that my kernel had an old uvcvideo module which didn't
>>> have the right debug log messages, and so I'm in the process of
>>> upgrading to a current kernel version. So far, I've managed to 
>>> render my
>>> machine unbootable [it is a little embedded linux box].
>>>
>>> Philip
>>>
>>> On 3/6/2011 6:14 AM, Laurent Pinchart wrote:
>>>> Hi Philip,
>>>>
>>>> On Sunday 20 February 2011 21:57:24 Philip Gladstone wrote:
>>>>> I attached two C910s to a small linux box, and ran into the 
>>>>> 'Failed to
>>>>> submit URB' problem.
>>>>>
>>>>> When I look at the descriptors for this camera, I think I 
>>>>> understand the
>>>>> problem. I'm capturing at 5 Mpixels and I'm trying two cameras.
>>>>>
>>>>>          VideoStreaming Interface Descriptor:
>>>>>            bLength                            38
>>>>>            bDescriptorType                    36
>>>>>            bDescriptorSubtype                  7 (FRAME_MJPEG)
>>>>>            bFrameIndex                        28
>>>>>            bmCapabilities                   0x01
>>>>>              Still image supported
>>>>>            wWidth                           2592
>>>>>            wHeight                          1944
>>>>>            dwMinBitRate                403107840
>>>>>            dwMaxBitRate                806215680
>>>>>            dwMaxVideoFrameBufferSize    10077696
>>>>>            dwDefaultFrameInterval        1000000
>>>>>            bFrameIntervalType                  3
>>>>>            dwFrameInterval( 0)           1000000
>>>>>            dwFrameInterval( 1)           1333333
>>>>>            dwFrameInterval( 2)           2000000
>>>>>
>>>>> The video frame size is set to 10Mb. This is surprisingly large as
>>>>> actual frames captured with MJPEG on this camera are typically 
>>>>> 500kb or
>>>>> less. When I checked the descriptor for the uncompressed version 
>>>>> of the
>>>>> same frame, it came back with the same value of 
>>>>> dwMaxVideoFrameBufferSize
>>>>> (effectively 16 bits per pixel). The values for min/max bit rate are
>>>>> (correctly) calculated from the frame intervals and the buffer size.
>>>> The uvcvideo driver doesn't use the dwMaxVideoFrameBufferSize field 
>>>> to compute
>>>> the required bandwidth but queries the device at runtime instead.
>>>>
>>>> You can enable the UVC_TRACE_VIDEO trace flag to get the driver to 
>>>> print the
>>>> bandwidth requested by the device to the kernel log.
>>>>
>>>>> Typical JPEG compression gets down to 1 bit per pixel, and 2 bits is
>>>>> very unusual.
>>>>>
>>>>> What I want to know is what the impact would be of defining a new 
>>>>> QUIRK
>>>>> that overrode the frame buffer size for compressed frames and 
>>>>> calculated
>>>>> them at (say) 2 bits per pixel?
>>>>>
>>>>> Do other webcams get this right?
>>>> You would be surprised by how many webcams get things wrong.
>>>>
>
> _______________________________________________
> Linux-uvc-devel mailing list
> Linux-uvc-devel at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/linux-uvc-devel



From macsmith.us at gmail.com  Thu Jun 30 08:41:28 2011
From: macsmith.us at gmail.com (Mac Smith)
Date: Thu, 30 Jun 2011 12:11:28 +0530
Subject: [Linux-uvc-devel] UVC Compilant USB Cam
Message-ID: <22963A4D-FE85-458E-9C73-C90424BD62CE@gmail.com>

Hi,

We have usb cameras from Beyond which uses aveo chip. I am not able to run it under ubuntu linux. I understand that ubuntu linux has uvcvideo driver inbuild kernel. I tried using different application like cheese, vgrabbj, streamer to capture still images.

every application says its unable to set or get properties from the camera.

Kindly help us to sort this out. Out of some of the commands are 


# lsusb
Bus 004 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 001 Device 003: ID 160a:3184 VIA Technologies, Inc. VIA VNT-6656 [WiFi 802.11b/g USB Dongle]
Bus 001 Device 002: ID 1871:0501 Aveo Technology Corp. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub


# lsmod | grep video
uvcvideo               55269  1 
videodev               42106  2 uvcvideo
v4l1_compat            13251  2 uvcvideo,videodev


# v4l-info

### v4l2 device info [/dev/video0] ###
general info
    VIDIOC_QUERYCAP
	driver                  : "uvcvideo"
	card                    : "USB2.0 Camera"
	bus_info                : "usb-0000:00:10.4-4"
	version                 : 0.1.0
	capabilities            : 0x4000001 [VIDEO_CAPTURE,STREAMING]

standards

inputs
    VIDIOC_ENUMINPUT(0)
	index                   : 0
	name                    : "Camera 1"
	type                    : CAMERA
	audioset                : 0
	tuner                   : 0
	std                     : 0x0 []
	status                  : 0x0 []

video capture
    VIDIOC_ENUM_FMT(0,VIDEO_CAPTURE)
	index                   : 0
	type                    : VIDEO_CAPTURE
	flags                   : 0
	description             : "YUV 4:2:2 (YUYV)"
	pixelformat             : 0x56595559 [YUYV]
    VIDIOC_G_FMT(VIDEO_CAPTURE)
	type                    : VIDEO_CAPTURE
	fmt.pix.width           : 640
	fmt.pix.height          : 480
	fmt.pix.pixelformat     : 0x56595559 [YUYV]
	fmt.pix.field           : NONE
	fmt.pix.bytesperline    : 1280
	fmt.pix.sizeimage       : 614400
	fmt.pix.colorspace      : SRGB
	fmt.pix.priv            : 0

controls
    VIDIOC_QUERYCTRL(BASE+0)
	id                      : 9963776
	type                    : INTEGER
	name                    : "Brightness"
	minimum                 : 0
	maximum                 : 100
	step                    : 1
	default_value           : 50
	flags                   : 0
    VIDIOC_QUERYCTRL(BASE+1)
	id                      : 9963777
	type                    : INTEGER
	name                    : "Contrast"
	minimum                 : 1
	maximum                 : 5
	step                    : 1
	default_value           : 2
	flags                   : 0
    VIDIOC_QUERYCTRL(BASE+2)
	id                      : 9963778
	type                    : INTEGER
	name                    : "Saturation"
	minimum                 : 0
	maximum                 : 100
	step                    : 1
	default_value           : 50
	flags                   : 0
    VIDIOC_QUERYCTRL(BASE+3)
	id                      : 9963779
	type                    : INTEGER
	name                    : "Hue"
	minimum                 : -10
	maximum                 : 10
	step                    : 1
	default_value           : 0
	flags                   : 0

### video4linux device info [/dev/video0] ###
general info
    VIDIOCGCAP
	name                    : "USB2.0 Camera"
	type                    : 0x1 [CAPTURE]
	channels                : 1
	audios                  : 0
	maxwidth                : 0
	maxheight               : 0
	minwidth                : 48
	minheight               : 32

channels
    VIDIOCGCHAN(0)
	channel                 : 0
	name                    : "Camera 1"
	tuners                  : 0
	flags                   : 0x0 []
	type                    : CAMERA
	norm                    : 0

tuner
ioctl VIDIOCGTUNER: Invalid argument

audio
ioctl VIDIOCGAUDIO: Invalid argument

picture
    VIDIOCGPICT
	brightness              : 32768
	hue                     : 32768
	colour                  : 32768
	contrast                : 16384
	whiteness               : 43690
	depth                   : 16
	palette                 : YUYV

buffer
ioctl VIDIOCGFBUF: Invalid argument

window
    VIDIOCGWIN
	x                       : 0
	y                       : 0
	width                   : 640
	height                  : 480
	chromakey               : 0
	flags                   : 0


# dmesg | grep video
[    0.175174] pci 0000:00:01.0: Boot video device
[   11.351655] Linux video capture interface: v2.00
[   11.418808] via_v4l_drv: disagrees about version of symbol video_devdata
[   11.418817] via_v4l_drv: Unknown symbol video_devdata
[   11.419639] via_v4l_drv: disagrees about version of symbol video_unregister_device
[   11.419643] via_v4l_drv: Unknown symbol video_unregister_device
[   11.420101] via_v4l_drv: disagrees about version of symbol video_register_device
[   11.420106] via_v4l_drv: Unknown symbol video_register_device
[   11.421088] uvcvideo: Found UVC 1.00 device USB2.0 Camera (1871:0501)
[   11.422756] uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround.
[   11.423917] usbcore: registered new interface driver uvcvideo
[   11.943994] via_v4l_drv: disagrees about version of symbol video_devdata
[   11.944042] via_v4l_drv: Unknown symbol video_devdata
[   11.944882] via_v4l_drv: disagrees about version of symbol video_unregister_device
[   11.944886] via_v4l_drv: Unknown symbol video_unregister_device
[   11.945296] via_v4l_drv: disagrees about version of symbol video_register_device
[   11.945300] via_v4l_drv: Unknown symbol video_register_device
[   89.435099] uvcvideo: Failed to query (130) UVC probe control : -32 (exp. 26).
[   89.435472] uvcvideo: Failed to query (130) UVC probe control : -32 (exp. 26).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/linux-uvc-devel/attachments/20110630/ffe56a79/attachment.html>

From rollercow at sucs.org  Thu Jun 30 17:24:59 2011
From: rollercow at sucs.org (Chris Jones)
Date: Thu, 30 Jun 2011 16:24:59 +0100
Subject: [Linux-uvc-devel] Multiple Lifecam Cinema HD's
Message-ID: <4E0C954B.9090405@sucs.org>

Hi All,

Google tells me this camera has a bug where it requests all available
bus bandwidth, and that I should 'set the FIX_BANDWIDTH quirk'.

How do I go about setting the FIX_BANDWIDTH quirk?

--
Chris Jones


From sarah.a.sharp at linux.intel.com  Thu Jun 30 20:01:01 2011
From: sarah.a.sharp at linux.intel.com (Sarah Sharp)
Date: Thu, 30 Jun 2011 11:01:01 -0700
Subject: [Linux-uvc-devel] [PATCH v2 0/2] USB: EHCI: Allow users to
 override 80% max periodic bandwidth
In-Reply-To: <cover.1308933456.git.kirr@mns.spb.ru>
References: <cover.1308933456.git.kirr@mns.spb.ru>
Message-ID: <20110630180101.GB7979@xanatos>

On Fri, Jun 24, 2011 at 08:48:06PM +0400, Kirill Smelkov wrote:
> 
> Changes since v1:
> 
> 
>  - dropped RFC status as "this seems like the sort of feature somebody might
>    reasonably want to use -- if they know exactly what they're doing";
> 
>  - new preparatory patch (1/2) which moves already-in-there sysfs code into
>    ehci-sysfs.c;
> 
>  - moved uframe_periodic_max parameter from module option to sysfs attribute,
>    so that it can be set per controller and at runtime, added validity checks;
> 
>  - clarified a bit bandwith analysis for 96% max periodic setup as noticed by
>    Alan Stern;
> 
>  - clarified patch description saying that set in stone 80% max periodic is
>    specified by USB 2.0;

Have you tested this patch by maxing out this bandwidth on various
types of host controllers?  It's entirely possible that you'll run into
vendor-specific bugs if you try to pack the schedule with isochronous
transfers.  I don't think any hardware designer would seriously test or
validate their hardware with a schedule that is basically a violation of
the USB bus spec (more than 80% for periodic transfers).

But if Alan is fine with giving users a way to shoot themselves in the
foot, and it's disabled by default, then I don't particularly mind this
patch.

Sarah Sharp


